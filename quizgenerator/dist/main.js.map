{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/app-routing/app-routing.module.ts","./src/app/app-routing/routes.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/attempt/attempt.component.ts","./src/app/attempt/attempt.component.html","./src/app/exam/exam.component.ts","./src/app/exam/exam.component.html","./src/app/header-component/header-component.component.ts","./src/app/header-component/header-component.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/result/result.component.ts","./src/app/result/result.component.html","./src/app/services/admin.service.ts","./src/app/services/attempt.service.ts","./src/app/services/auth-guard.service.ts","./src/app/services/auth.interceptor.ts","./src/app/services/auth.service.ts","./src/app/services/exam.service.ts","./src/app/services/general.service.ts","./src/app/services/home.service.ts","./src/app/services/process-httpmsg.service.ts","./src/app/services/result.service.ts","./src/app/services/signin.service.ts","./src/app/shared/baseurl.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/staff/staff.component.ts","./src/app/staff/staff.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { FormBuilder,FormGroup,Validators } from '@angular/forms';\r\nimport { Router,Params, ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { Exam } from '../shared/admin';\r\nimport { AdminService } from '../services/admin.service';\r\n\r\ninterface Branch {\r\n  value:String;\r\n  viewValue: String;\r\n}\r\ninterface Sem {\r\n  value:Number;\r\n  viewValue: Number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  branchs: Branch[] = [\r\n    {value: 'CSE', viewValue: 'CSE'},\r\n    {value: 'pizza-1', viewValue: 'Pizza'},\r\n    {value: 'tacos-2', viewValue: 'Tacos'}\r\n  ];\r\n  sem: Sem[] = [\r\n    {value: 1, viewValue: 1},\r\n    {value: 2, viewValue: 2},\r\n    {value: 3, viewValue: 3}\r\n  ];\r\n  examForm : FormGroup;\r\n  examData : Exam;\r\n  formErrors = {\r\n    'Subject': '',\r\n    'Brach': '',\r\n  };\r\n\r\n  validationMessages = {\r\n    'Subject': {\r\n      'required':      'First Name is required.',\r\n      'minlength':     'First Name must be at least 2 characters long.',\r\n      'maxlength':     'FirstName cannot be more than 25 characters long.'\r\n    },\r\n    'Branch': {\r\n      'required':      'Comment is required.',\r\n      'minlength':     'Comment must be at least 2 characters long.',\r\n      'maxlength':     'Comment cannot be more than 25 characters long.'\r\n    },\r\n    \r\n  };\r\n\r\n  @ViewChild('fform') examFormDirectives;\r\n\r\n  constructor(\r\n    private location : Location,\r\n    private route : ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private examschedule : AdminService,\r\n    @Inject('BaseURL') public baseURL)\r\n    {  \r\n       this.createForm();\r\n    }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  createForm() {\r\n    this.examForm = this.fb.group({\r\n      subject: ['', [Validators.required]],\r\n      time: [, [Validators.required]],\r\n      date: Date(), \r\n      branch:[''],\r\n      semester:['']\r\n    });\r\n\r\n    this.examForm.valueChanges\r\n      .subscribe(data => this.onValueChanged(data));\r\n\r\n    this.onValueChanged(); // (re)set validation messages now\r\n\r\n  }\r\n\r\n  onValueChanged(data?: any) {\r\n    if (!this.examForm) { return; }\r\n    const form = this.examForm;\r\n    for (const field in this.formErrors) {\r\n      if (this.formErrors.hasOwnProperty(field)) {\r\n        // clear previous error message (if any)\r\n        this.formErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && control.dirty && !control.valid) {\r\n          const messages = this.validationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.formErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  onSubmit() {\r\n    this.examData = this.examForm.value;\r\n    console.log(this.examData);\r\n    this.examschedule.scheduleExam(this.examData)\r\n      .subscribe((exam) => {this.examData=exam})\r\n    this.examForm.reset();\r\n    this.examFormDirectives.resetForm({\r\n    });\r\n  }\r\n}\r\n","<form novalidate [formGroup]=\"examForm\" #fform=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n    <p>\r\n      <mat-form-field>\r\n        <input matInput #input formControlName=\"subject\" placeholder=\"Enter Subject name\" type=\"text\" required>\r\n        <mat-hint align=\"end\">{{input.value?.length || 0}}</mat-hint>\r\n      </mat-form-field>\r\n    </p>\r\n    <p>\r\n        <mat-form-field>\r\n            <mat-label>Branch</mat-label>\r\n            <mat-select formControlName=\"branch\">\r\n              <mat-option *ngFor=\"let branch of branchs\" [value]=\"branch.value\" required>\r\n                {{branch.viewValue}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n    </p>\r\n    <p>\r\n          <mat-form-field>\r\n            <mat-label>Semester</mat-label>\r\n            <mat-select formControlName=\"semester\">\r\n              <mat-option *ngFor=\"let branch of sem\" [value]=\"branch.value\" required>\r\n                {{branch.viewValue}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n    </p>\r\n    <p>\r\n        <mat-form-field>\r\n            <mat-label>Choose a date</mat-label>\r\n            <input matInput formControlName=\"date\" [matDatepicker]=\"picker\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n        </mat-form-field>\r\n    </p>\r\n    <p>\r\n        <mat-form-field>\r\n            <mat-label>Pick Time</mat-label>\r\n            <input matInput formControlName=\"time\" placeholder=\"Enter Time With AM OR PM\" type=\"time\" required>\r\n        </mat-form-field>\r\n    </p>\r\n\r\n    <button type=\"submit\" mat-button class=\"background-primary text-floral-white\" [disabled]=\"examForm.invalid\">Submit</button>\r\n</form>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { routes } from './routes';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [ RouterModule ],\n})\nexport class AppRoutingModule { }\n","import { Routes } from '@angular/router';\r\nimport { AdminComponent } from '../admin/admin.component';\r\nimport { HomeComponent } from '../home/home.component';\r\n// import { ContactComponent } from '../contact/contact.component';\r\nimport { ExamComponent } from '../exam/exam.component';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { ResultComponent} from '../result/result.component'\r\nimport { SignupComponent} from '../signup/signup.component';\r\nimport {StaffComponent} from '../staff/staff.component';\r\nimport {StaffModule} from '../staff/staff.module'\r\nimport {AuthGuardService} from '../services/auth-guard.service';\r\nimport {AttemptComponent} from '../attempt/attempt.component';\r\nexport const routes: Routes = [\r\n    {path: 'signup', component:SignupComponent},\r\n    {path: 'login', component: LoginComponent},\r\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n  {path: 'home',canActivate: [AuthGuardService], component: HomeComponent},\r\n  { path: 'admin',component: AdminComponent },\r\n  { path: 'exam',canActivate: [AuthGuardService],component: ExamComponent},\r\n  { path: 'result',canActivate: [AuthGuardService], component:ResultComponent },\r\n  {path: 'exam/:id', component:AttemptComponent},\r\n  // {\r\n  //   path: '',\r\n  //   redirectTo: 'staffhome',\r\n  //   pathMatch: 'full',\r\n  // }, {\r\n  //   {\r\n  //   path: '',\r\n  //   canActivate: [AuthGuardService],\r\n  //   component: StaffComponent,\r\n  //   children: [\r\n  //       {\r\n  //     path: '',\r\n  //     loadChildren: '../staff/staff.module#StaffModule'\r\n  // }]}\r\n];\r\n\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'quizgenerator';\n}\n","<app-header-component></app-header-component>\r\n<router-outlet></router-outlet>","// Components\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing/app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\n\r\n// Services\r\nimport { SigninService } from './services/signin.service';\r\nimport { ProcessHTTPMsgService } from './services/process-httpmsg.service';\r\nimport { AuthService } from './services/auth.service';\r\n// Shared\r\nimport { baseURL } from './shared/baseurl';\r\n\r\nimport { HttpModule } from '@angular/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\r\n\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport {  MatButtonModule } from '@angular/material/button';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatLineModule } from '@angular/material/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet'\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\nimport {TableModule} from 'primeng/table';\r\n\r\nimport 'hammerjs';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nimport { AuthInterceptor,UnauthorizedInterceptor } from './services/auth.interceptor';\r\nimport { HeaderComponentComponent } from './header-component/header-component.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { ExamComponent } from './exam/exam.component';\r\n\r\nimport { DatePipe } from '@angular/common';\r\n\r\nimport {AtomSpinnerModule} from 'angular-epic-spinners';\r\nimport {HalfCircleSpinnerModule} from 'angular-epic-spinners';\r\n\r\nimport {SpringSpinnerModule} from 'angular-epic-spinners';\r\nimport {enableProdMode} from '@angular/core';\r\n\r\nimport { SemipolarSpinnerModule } from \"angular-epic-spinners\";\r\nimport { ResultComponent } from './result/result.component';\r\nimport { StaffComponent } from './staff/staff.component';\r\nimport { StaffHomeComponent } from './staff-home/staff-home.component';\r\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\r\nimport {MessagesModule} from 'primeng/messages';\r\nimport {ProgressBarModule} from 'primeng/progressbar';\r\n// import {ConfirmationService} from 'primeng/api';\r\n// import {AccordionModule} from 'primeng/accordion';     //accordion and accordion tab\r\n// import {MenuItem} from 'primeng/api';   \r\nimport {PasswordModule} from 'primeng/password';\r\nimport {CardModule} from 'primeng/card';\r\nimport { AttemptComponent } from './attempt/attempt.component';\r\nimport {DataViewModule} from 'primeng/dataview';\r\n// import {DataViewDemo} from './dataviewdemo';\r\n// import {DataViewDemoRoutingModule} from './dataviewdemo-routing.module';\r\n// import {DataViewModule} from 'primeng/dataview';\r\nimport {PanelModule} from 'primeng/panel';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {DialogModule} from 'primeng/dialog';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport {TabViewModule} from 'primeng/tabview';\r\n\r\n// import {FullCalendarDemo} from './fullcalendardemo';\r\n// import {FullCalendarDemoRoutingModule} from './fullcalendardemo-routing.module';\r\nimport {FullCalendarModule} from 'primeng/fullcalendar';\r\n// import {DialogModule} from 'primeng/dialog';\r\n// import {InputTextModule} from 'primeng/inputtext';\r\nimport {CalendarModule} from 'primeng/calendar';\r\nimport {CheckboxModule} from 'primeng/checkbox';\r\n// import {ButtonModule} from 'primeng/button';\r\n// import {TabViewModule} from 'primeng/tabview';\r\nimport {CodeHighlighterModule} from 'primeng/codehighlighter';\r\nimport {SidebarModule} from 'primeng/sidebar';\r\nimport {ToggleButtonModule} from 'primeng/togglebutton';\r\nimport { BackButtonDisableModule } from 'angular-disable-browser-back-button';\r\n// import {MessagesModule} from 'primeng/messages';\r\nimport {MessageModule} from 'primeng/message';\r\nimport { LocalStorageModule } from 'angular-2-local-storage';\r\n// import {CalendarModule} from 'primeng/calendar';\r\n\r\nenableProdMode();\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SignupComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    HeaderComponentComponent,\r\n    AdminComponent,\r\n    ExamComponent,\r\n    ResultComponent,\r\n    StaffComponent,\r\n    AttemptComponent,\r\n    \r\n  ],\r\n  imports: [\r\n    A11yModule,ClipboardModule,DragDropModule,PortalModule,ScrollingModule,CdkStepperModule,CdkTableModule,CdkTreeModule,MatBottomSheetModule,MatButtonToggleModule,MatChipsModule,\r\n    MatDatepickerModule,MatDividerModule,MatExpansionModule,MatIconModule,MatMenuModule,MatNativeDateModule,MatRippleModule,MatPaginatorModule,MatProgressBarModule,MatRadioModule,\r\n    MatSidenavModule,MatSnackBarModule,MatSortModule,MatTableModule,MatTabsModule,MatTooltipModule,MatTreeModule,ConfirmDialogModule,MessagesModule,PasswordModule,CardModule,TableModule,HalfCircleSpinnerModule,\r\n    ProgressBarModule,ToggleButtonModule,BackButtonDisableModule.forRoot({\r\n      preserveScrollPosition: true\r\n    }),MessagesModule,MessageModule,LocalStorageModule.forRoot({\r\n      prefix: 'my-app',\r\n      storageType: 'localStorage'\r\n  }),CalendarModule,\r\n    DataViewModule,PanelModule,InputTextModule,ButtonModule,DialogModule,DropdownModule,TableModule,TabViewModule,FullCalendarModule,CalendarModule,CheckboxModule,CodeHighlighterModule,SidebarModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCheckboxModule,\r\n    FormsModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    ReactiveFormsModule,\r\n    MatProgressSpinnerModule,\r\n    MatSliderModule,\r\n    MatStepperModule,\r\n    MatButtonModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatDialogModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    BrowserAnimationsModule,\r\n    MatLineModule,\r\n    FlexLayoutModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    SemipolarSpinnerModule,\r\n    AtomSpinnerModule,\r\n    SpringSpinnerModule,\r\n\r\n    \r\n  ],\r\n  providers: [SigninService,,\r\n    DatePipe,\r\n  ProcessHTTPMsgService,\r\n  AuthService,\r\n  {provide: 'BaseURL', useValue: baseURL},\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthInterceptor,\r\n    multi: true\r\n  },\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: UnauthorizedInterceptor,\r\n    multi: true\r\n  }\r\n],\r\n\r\n\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Params, ActivatedRoute } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { Location } from '@angular/common';\r\nimport {AttemptService} from '../services/attempt.service';\r\n@Component({\r\n  selector: 'app-attempt',\r\n  templateUrl: './attempt.component.html',\r\n  styleUrls: ['./attempt.component.scss']\r\n})\r\nexport class AttemptComponent implements OnInit {\r\n\r\n  attempts=[];\r\n  errMess:any;\r\n  constructor(private route: ActivatedRoute,\r\n    private attemptservice:AttemptService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.route.params.pipe(switchMap((params: Params) => { return this.attemptservice.getAttempts(params['id'])}))\r\n    .subscribe((resp) => {\r\n      console.log(resp);\r\n      this.attempts = resp;\r\n      \r\n    },errmess => {\r\n      console.log(errmess)\r\n      this.errMess = []\r\n      this.errMess.push({severity:'error', summary:'Error:', detail:'You Have Not Verified Your Email Address'});\r\n      console.log(this.errMess);\r\n      \r\n    })\r\n  }\r\n\r\n}\r\n","\r\n<div >\r\n    <table *ngFor=\"let i of attempts\" class=\"table table-hover table-striped\">\r\n        <thead>\r\n            \r\n            <tr>\r\n                <th><b>{{i['user']['username']}}</b></th>\r\n                <th>\r\n                    {{i['subject']['date'] | date}}\r\n                </th>\r\n                <th>\r\n                    <p class=\"card-text\">Marks\r\n                        <b>{{i['marks']}}/{{i['subject']['marks']}}</b></p>\r\n                </th>\r\n            </tr>\r\n            \r\n            <tr>\r\n                <th>Question Number</th>\r\n                <th>Answer Attempted</th>\r\n                <th>Check</th>\r\n                <th>Correct Answer</th>\r\n            \r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let a of i['attempt'] | keyvalue\">\r\n                <td>{{a.key}}</td>\r\n                <td>{{a.value[0]}}</td>\r\n                <td>{{a.value[1]}}</td>\r\n                <td>{{a.value[2]}}</td>\r\n            \r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>  \r\n<div *ngIf=\"attempts.length==0 && !errMess\">\r\n    No Attempt for this Exam\r\n</div>\r\n<p-messages [(value)]=\"errMess\"></p-messages>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ExamService } from '../services/exam.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\nimport {Router } from '@angular/router';\r\nimport { timer } from 'rxjs';\r\nimport { FormBuilder,FormGroup,Validators, FormGroupDirective,FormControl } from '@angular/forms';\r\nimport { AdminService } from '../services/admin.service';\r\nimport { DatePipe } from '@angular/common';\r\n// import {HeaderComponentComponent} from '../header-component/header-component.component';\r\nimport { Injectable } from '@angular/core';\r\nimport {  CanActivate } from '@angular/router';\r\n// import { AuthService } from './auth.service';\r\nimport {ConfirmationService} from 'primeng/api';\r\nimport {Message} from 'primeng/api';\r\nimport { LocalStorageService } from 'angular-2-local-storage';\r\n\r\nexport interface Car {\r\n\tsubject;\r\n\tdate;\r\n\ttime;\r\n\tmarks;\r\n\t_id;\r\n  }\r\n\r\n@Component({\r\n\tselector: 'app-exam',\r\n\ttemplateUrl: './exam.component.html',\r\n\tstyleUrls: ['./exam.component.scss'],\r\n\tproviders: [ConfirmationService],\r\n\tstyles: [`      \r\n        .filter-container {\r\n            text-align: center;\r\n        }\r\n        .car-details {\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            padding: 2em;\r\n            border-bottom: 1px solid #d9dad9;\r\n        }\r\n        .car-details > div {\r\n            display: flex;\r\n            align-items: center;\r\n        }\r\n        .car-details > div img {\r\n            margin-right: 14px;\r\n        }\r\n        .car-detail {\r\n            padding: 0 1em 1em 1em;\r\n            border-bottom: 1px solid #d9dad9;\r\n            margin: 1em;\r\n        }\r\n        .ui-panel-content {\r\n            padding: 1em;\r\n        }\r\n        .dark-theme :host ::ng-deep .car-details,\r\n        .dark-theme :host ::ng-deep .car-detail {\r\n            border-bottom: 1px solid #191919;\r\n        }\r\n        \r\n        @media (max-width: 1024px) {\r\n            .car-details img {\r\n                 width: 75px;\r\n            }\r\n            .filter-container {\r\n                text-align: left;\r\n            }\r\n        }\r\n    `]\r\n})\r\nexport class ExamComponent implements OnInit {\r\n\tpublic message = 'Hola Mundo!';\r\n\tarr:any[];\r\n\ttemp = [];\r\n\tid:any;\r\n\tanswer = [];\r\n\ttemp1={};\r\n\titems = []\r\n\tprev:any;\r\n\tnext:any;\r\n\ttemp3 = [];\r\n\tmapping:any = {};\r\n\tquecount: any;\r\n\tsubscription: Subscription;\r\n\tsubscription1: Subscription;\r\n\tsubscription2: Subscription;\r\n\tsubscription3: Subscription;\r\n\tbranch: string = undefined;\r\n\tsemester: string = undefined;\r\n\tusername:String = undefined;\r\n\tquestion:any;\r\n\tquestionnumber:number=null ;\r\n\tselectedanswer: string;\r\n\tseasons:string[];\r\n\tanswerArray = [];\r\n\tcurrentindex:any;\r\n\tselectedRow : any;\r\n\tsetClickedRow : Function;\r\n\tselectedItem : any;\r\n\tanswers =[];\r\n\tlast:any;\r\n\ttimeLeft: number = 60;\r\n\tminute: number;\r\n  \tinterval:any;\r\n\tmarks:any;\r\n\terrMess:any;\r\n\texams:any;\r\n\tsubject:any;\r\n\texammarks:number;\r\n\ttoday = Date.now()\r\n\tflag:Boolean=false;\r\n\tflag1:Boolean=false;\r\n\tquestionflag={};\r\n\tobjectKeys = Object.keys;\r\n\tmycolor = 'red';\r\n\tradius = 3;\r\n\tfinal ={};\r\n\texamId:any;\r\n\tattemptedFlag:Boolean=false;\r\n\tmsg:String;\r\n\t// msgs:any;\r\n\tmsgs: Message[] = [];\r\n\ttesting={};\r\n\ttempExam=[];\r\n\tselectedCar: Car;\r\n  displayDialog: boolean;\r\n  visibleSidebar5;\r\n  documents:any;\r\n  halfcomplete:Boolean=false;\r\n\r\n\tconstructor(private examservice: ExamService,\r\n\t\tprivate confirmationService: ConfirmationService,\r\n\t\tprivate authService: AuthService,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate router:Router,\r\n\t\tprivate adminservice:AdminService,\r\n\t\tprivate datePipe: DatePipe,\r\n\t\tprivate _localStorageService: LocalStorageService) { \r\n\t\t\tthis.setClickedRow = function(index){\r\n\t\t\t\tif(index!=\"empty\"){\r\n\t\t\t\tthis.selectedItem = index;\r\n\t\t\t\tthis.selectedRow[index]=this.answers;\r\n\t\t\t\t}  \r\n\t\t\t}\t\r\n\t\t}\r\n\r\n\tngOnInit(): void {\r\n\t\t// console.log(this._localStorageService.getStorageType())\r\n\t\tvar date = new Date();\r\n   console.log(this.datePipe.transform(date,\"yyyy-MM-dd\"));\r\n\t\tthis.authService.loadUserCredentials();\r\n\t\tthis.subscription = this.authService.getUsername()\r\n\t\t\t\t.subscribe(name => { this.username = name; });\r\n\t\tthis.subscription1 = this.authService.getBranch()\r\n\t\t\t\t.subscribe(name => { this.branch = name; });\r\n\t\tthis.subscription2 = this.authService.getSemester()\r\n\t\t\t\t.subscribe(name => { this.semester = name; });\t\r\n\t\tthis.subscription3 = this.authService.getId()\r\n\t\t\t\t.subscribe(id => {this.id = id});\r\n\r\n\t}\r\n\tconfirm() {\r\n        this.confirmationService.confirm({\r\n            message: 'Are you sure that you want to proceed?',\r\n            header: 'Confirmation',\r\n            icon: 'pi pi-exclamation-triangle',\r\n            accept: () => {\r\n\t\t\t\tconsole.log(this.answerArray);\r\n\t\t\t\tconsole.log(this.answers)\r\n\t\t\t\t\r\n\t\t\t\tfor(var i=1;i<this.answers.length;i++) {\r\n\t\t\t\t\tthis.answer=[]\r\n\t\t\t\t\tif(this.answers[i]==this.answerArray[i]) {\r\n\t\t\t\t\t\tthis.marks+=1\r\n\t\t\t\t\t\tthis.answer.push(this.answers[i])\r\n\t\t\t\t\t\tthis.answer.push('True')\r\n\t\t\t\t\t\tthis.answer.push(this.answerArray[i])\r\n\t\t\r\n\t\t\t\t\t\tthis.final[this.items[i-1][1]] = this.answer\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif(this.answers[i]!=null) {\r\n\t\t\t\t\t\t\tthis.answer.push(this.answers[i])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.answer.push('NA')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.answer.push('False')\r\n\t\t\t\t\t\tthis.answer.push(this.answerArray[i])\r\n\t\t\t\t\t\tthis.final[this.items[i-1][1]] = this.answer\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\tconsole.log(this.final);\r\n\t\t\t\t\t// this.final['subject'] = (this.subject)\r\n\t\t\t\tthis.examservice.sendAttempted(this.final,this.examId,this.marks)\r\n\t\t\t\t.subscribe((resp) => {\r\n\t\t\t\t\tconsole.log(resp);\r\n\t\t\r\n\t\t\t\t})\r\n\t\t\t\tclearInterval(this.interval)\r\n\t\t\t\tconsole.log(this.marks);\r\n\t\t\t\tthis.examservice.sendResult(this.branch,this.semester,this.marks,this.subject,this.examId)\r\n\t\t\t\t\t.subscribe((name) => {console.log('Result Entered successfully',name)},\r\n\t\t\t\t\terror => {\r\n\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\tthis.errMess = error;\r\n\t\t\t\t\t\tconsole.log(this.errMess);\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t  );\r\n\t\t\t\t\r\n\t\t\t\t\t  this.examservice.setfinalFlag({subject:this.subject,subjectId:this.examId,completionFlag:true})\r\n\t\t\t\t\t  .subscribe((resp) => {\r\n\t\t\t\t\t\t  console.log(resp);\r\n\t\t\t\t\t  })\r\n\t\t\t\t\r\n\t\t\t\tthis.router.navigate(['/home']);\r\n            },\r\n            reject: () => {\r\n                this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];\r\n            }\r\n        });\r\n    }\r\n\r\n\tsearchQuestions() {\r\n\t\t\r\n\t\tthis.marks=0;\r\n\t\tthis.selectedRow=[];\r\n\t\tthis.seasons=[];\r\n\t\tthis.answerArray=[];\r\n\t\tthis.answers=[];\r\n\t\tthis.temp3=[]\r\n\t\tthis.questionnumber=0;\r\n\t\tthis.question=null;\r\n\t\tthis.arr = [];\r\n\t\tthis.flag1=true\r\n\t\tfor (var i=0; i<this.exammarks;i++) {\r\n\t\t\tthis.answerArray[i+1]='NA'\r\n\t\t\t// this.answers[i+1] = null\r\n\t\t}\r\n\t\tconsole.log(this.answerArray)\r\n\t\tconsole.log(this.answers);\r\n\t\twhile(this.arr.length < this.exammarks){\r\n\t\t\tvar r = Math.floor(Math.random() * 14) ;\r\n\t\t\tif(this.arr.indexOf(r) === -1) this.arr.push(r);\r\n\t\t\tthis.quecount = this.arr.length;\r\n\t\t}\r\n\r\n\t\tfor(var i=0;i<this.quecount;i++) {\r\n\t\t\tthis.mapping[i+1] = this.arr[i]\r\n\t\t}\r\n\t\t// this.mapping[this.quecount+1] = 11\r\n\t\t// this.mapping[this.quecount+11] = 22\r\n\t\tconsole.log(this.mapping);\r\n\r\n\t\tthis._localStorageService.clearAll();\r\n\r\n\t\tfor (var question in this.mapping) {\r\n\t\t\tthis.items.push([question, this.mapping[question]]);\r\n\t\t\tconsole.log(this.mapping[question]);\r\n\t\t\t\r\n\t\t\tthis._localStorageService.set(this.mapping[question].toString(),null)\r\n\t\t}\r\n\t\tconsole.log(this._localStorageService.keys());\r\n\r\n\t\t\r\n\r\n\t\tthis.items.sort(function(a, b) {\r\n\t\t\treturn a[0] - b[0];\r\n\t\t});\r\n\t\tconsole.log(this.items);\r\n\t\tconsole.log(this.items[0]);\r\n\r\n\r\n\t\tthis.questionnumber+=1\r\n\t\tthis.hasPrevNext(this.questionnumber,\"\")\r\n\t\tthis.selectedItem = (this.questionnumber-1);  \r\n\r\n\t}\r\n\r\n\thasPrevNext(id,message) {\r\n\t\t// console.log(this.selectedanswer);\r\n\t\tthis.seasons=[]\r\n\t\t// this.answerArray=[];\r\n\t\tthis.selectedanswer=null;\r\n\r\n\t\tif(message==\"n\")\r\n\t\tthis.questionnumber+=1\r\n\t\tif(message==\"p\")\r\n\t\tthis.questionnumber-=1\r\n\t\tif(message==\"l\")\r\n\r\n\t\tthis.questionnumber=parseInt(id);\r\n\t\tthis.getQuestion(id)\r\n\t\tconst ObjectLength = Object.keys(this.mapping).length\r\n\t\tthis.currentindex = id-1;\r\n\t\tthis.prev = (ObjectLength + this.currentindex - 1) % ObjectLength +1;\r\n\t\tthis.next = (ObjectLength + this.currentindex + 1) % ObjectLength +1;\r\n\t}\r\n\r\n\tgetQuestion(key) {\r\n\t\t\tthis.last=0;\r\n\t\t\tconsole.log(this.mapping);\r\n\t\t\t\r\n\t\t\t// this.examservice.getQuestionbyid(this.branch,this.semester,this.mapping[key])\r\n\t\t\tthis.examservice.getQuestionbyid(this.subject,this.mapping[key])\r\n\t\t\t\t.subscribe((question) => {this.question = question; console.log(this.question);\r\n\t\t\t\t\r\n\t\t\t\t this.seasons = [question.option1, question.option2, question.option3, question.option4];\r\n\t\t\t\t//  this.answerArray=[question.option1.ans, question.option2.ans, question.option3.ans, question.option4.ans];\r\n\t\t\t\t//  console.log(this.answerArray);\r\n\t\t\t\tconsole.log(this.seasons);\r\n\t\t\t\t\r\n\t\t\t\tthis.shuffle(this.seasons)\r\n\t\t\t\t this.answerArray[this.questionnumber] = this.question.ans\r\n\t\t\t\t console.log(this.answerArray);\r\n\t\t\t\t \r\n\t\t\t\t if(this.answers!=[]) {\r\n\t\t\t\t\tthis.last=this.answers[this.questionnumber]\r\n\t\t\t\t}\r\n\t\t\t\t});\t\t\r\n\t}\r\n\r\n\t\r\n\tshuffle(array) {\r\n\t\tarray.sort(() => Math.random() - 0.5);\r\n\t  }\r\n\t  \r\n\ttest() {\r\n\t\tif(this.answers[this.questionnumber]) {\r\n\t\tthis.testing[this.questionnumber] = true \r\n\tconsole.log(this.testing);\r\n\t}\r\n\t}\r\n\r\n\tstartTimer() {\r\n\t\tvar timeLeft = this.timeLeft\r\n\t\tvar minleft = this.minute\r\n\t    this.interval = setInterval(() => {\r\n\t\t\t\r\n\t\tif(this.timeLeft < 10 && this.timeLeft>1) {\r\n\t\t\tthis.timeLeft --;\r\n\t\t\tvar a = ('0' + this.timeLeft).slice(-2)\r\n\t\t\tthis.timeLeft = parseInt(a)\r\n\t\t\t// console.log(a,this.timeLeft);\r\n\t\t\t\r\n\t\t}\r\n\t      else if (this.timeLeft > 0) {\r\n\t\t\tthis.timeLeft--;\r\n\t\t\t\r\n\t\t  }\r\n\t\t  else if(this.minute > 0) {\r\n\t\t\tthis.minute--;\r\n\t\t\tthis.timeLeft = timeLeft;\r\n\r\n\t\t  } \r\n\t\t  else {\r\n\t\t\tconsole.log('Your answers');\r\n\t\t\tconsole.log(this.answers);\r\n\t\t\tclearInterval(this.interval)\r\n\t\t\tthis.confirm()\r\n\t\t\t\r\n\t      }\r\n\t    },1000)\r\n\t  }\r\n\r\n\tsubmit() {\r\n\r\n\t\t// for (var t=1;t<this.answers.length;t++) {\r\n\t\t// \t// var temp = this.items[t][1]\r\n\t\t// \tthis.final[this.items[t-1][1]] = this.answers[t]\r\n\t\t// \t// console.log(this.items[i]);\r\n\t\t// \t// console.log(this.answers[i]);\r\n\t\t// \t// console.log(i);\r\n\t\t// }\r\n\t\t// console.log(this.answers[1]);\r\n\t\t// console.log(this.items[0][1]);\r\n\t\tconsole.log(this.answerArray);\r\n\t\tconsole.log(this.answers)\r\n\t\t\r\n\t\tfor(var i=1;i<this.answers.length;i++) {\r\n\t\t\tthis.answer=[]\r\n\t\t\tif(this.answers[i]==this.answerArray[i]) {\r\n\t\t\t\tthis.marks+=1\r\n\t\t\t\tthis.answer.push(this.answers[i])\r\n\t\t\t\tthis.answer.push('True')\r\n\t\t\t\tthis.answer.push(this.answerArray[i])\r\n\r\n\t\t\t\tthis.final[this.items[i-1][1]] = this.answer\r\n\t\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif(this.answers[i]!=null) {\r\n\t\t\t\t\tthis.answer.push(this.answers[i])\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.answer.push('NA')\r\n\t\t\t\t}\r\n\t\t\t\tthis.answer.push('False')\r\n\t\t\t\tthis.answer.push(this.answerArray[i])\r\n\t\t\t\tthis.final[this.items[i-1][1]] = this.answer\r\n\t\t\t}\r\n\t\t}\r\n\t\t\tconsole.log(this.final);\r\n\t\t\t// this.final['subject'] = (this.subject)\r\n\t\tthis.examservice.sendAttempted(this.final,this.examId,this.marks)\r\n\t\t.subscribe((resp) => {\r\n\t\t\tconsole.log(resp);\r\n\r\n\t\t})\r\n\t\tclearInterval(this.interval)\r\n\t\tconsole.log(this.marks);\r\n\t\tthis.examservice.sendResult(this.branch,this.semester,this.marks,this.subject,this.examId)\r\n\t\t\t.subscribe((name) => {console.log('Result Entered successfully',name)},\r\n\t\t\terror => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tthis.errMess = error;\r\n\t\t\t\tconsole.log(this.errMess);\r\n\t\t\t  }\r\n\t\t\t  );\r\n\t\tthis.router.navigate(['/home']);\r\n\t\t}\r\n\r\n\tsavetemp(season) {\r\n\t\t\tthis.answers[this.questionnumber] = season\r\n\t\t\tconsole.log(this.answers);\r\n\t\t\tconsole.log(this.answerArray);\r\n\t\t\tthis.last=null\r\n\t\t\tconsole.log(this._localStorageService.keys());\r\n\t\t\t// var temp = []\r\n\t\t\t// temp.push(season)\r\n\t\t\t// temp.push(this.answerArray[this.questionnumber])\r\n\t\t\t\r\n\t\t\tthis._localStorageService.set(this.mapping[this.questionnumber].toString(),[season,this.answerArray[this.questionnumber]])\r\n\t\t\t// this._localStorageService.set('test'+this.mapping[this.questionnumber],this.answerArray[this.questionnumber])\r\n\t\t\t// this._localStorageService.set(this.)\r\n\t\t\tconsole.log(this.mapping[this.questionnumber],this._localStorageService.get(this.mapping[this.questionnumber].toString()));\r\n\t\t\t// console.log(this._localStorageService.get('test'+this.mapping[this.questionnumber].toString()));\r\n\t\t\t\r\n\r\n\t\t}\r\n\r\n\tsearchTests() {\r\n\t\tthis.exammarks = 0\r\n\t\tconsole.log('inside');\r\n\t\tconsole.log(this.semester);\r\n\t\tvar date2 = this.datePipe.transform(this.today,\"dd\")\r\n\t\tconsole.log(date2);\r\n\t\t\r\n\t\tthis.adminservice.searchExam(this.branch,this.semester)\r\n\t\t  .subscribe((tests) => { \r\n\t\t\t  console.log(tests)\r\n\t\t\tthis.exams = tests.exams[0];\r\n\t\t\tconsole.log(this.exams);\r\n\t\t\tthis.tempExam.push(this.exams)\r\n\t\t\tthis.exammarks=this.exams.marks\r\n\t\t\tthis.minute = this.exams.duration-1\r\n\t\t\tthis.examId = this.exams['_id']\r\n\t\t\tconsole.log(this.examId);\r\n\t\t\t\r\n\t\t\t// this.today = this.exams.date\r\n\t\t\tvar date1 = this.datePipe.transform(this.exams.date,\"dd\")\r\n\t\t\tvar time1 = this.exams.time\r\n\t\t\tvar date2 = this.datePipe.transform(this.today,\"dd\")\r\n\t\t\tvar time2 = this.datePipe.transform(this.today,\"HH:mm\")\r\n\r\n\t\t\tconsole.log(date1,date2,time1,time2);\r\n\r\n\t\t\tif(time1<=time2) {\r\n\t\t\t\tthis.subject = this.exams.subject\r\n\t\t\t\tthis.flag=true\r\n\t\t\t}\r\n\t\t\t\r\n\t\t  });\r\n\t  }\r\n\r\n\t  flagquestion() { \r\n\t\tthis.questionflag[this.questionnumber] = true\r\n\t\tconsole.log(this.questionflag);\r\n\t\t// this._localStorageService.set('test',null)\r\n\t\t// var test = this._localStorageService.get('test')\r\n\t\t// console.log(test);\r\n\r\n\t\t// this._localStorageService.set('test',1)\r\n\t\t// var test = this._localStorageService.get('test')\r\n\r\n\t\t// console.log(test);\r\n\t\t\r\n\t\t\r\n\t  }\r\n\t  removeflag() {\r\n\t\tthis.questionflag[this.questionnumber] = false\r\n\t\tconsole.log(this.questionflag);\r\n\t  }\r\n\t  flagandremoveattempt() {\r\n\t\tdelete this.answers[this.questionnumber]\r\n\t\tthis.questionflag[this.questionnumber] = true\r\n\t  }\r\n\r\n\t//   getVal() {\r\n\t// \t  return this.quecount\r\n\t//   }\r\n\r\n\t  setFlag() {\r\n\t\t  this.msg=null;\r\n\t\t//   var temp2 = 0;\r\n\t\t  this.examservice.getUser(this.id)\r\n\t\t  .subscribe((resp) => {\r\n\t\t\t  console.log(resp['user'][0]['attempted']);\r\n\t\t\t  var temp = resp['user'][0]['attempted']\r\n\t\t\t  for (var i =0;i<temp.length;i++) {\r\n\t\t\t\t  console.log(temp[i])\r\n\t\t\t\t//   if(temp[i]['subjectId']==this.examId) {\r\n\t\t\t\t// \t  this.attemptedFlag = true\r\n\t\t\t\t// \t  break\r\n\t\t\t\t//   }\r\n\t\t\t\t  if(temp[i]['subjectId']==this.examId && temp[i]['flag'] && !temp[i]['completionFlag'])\r\n\t\t\t\t  {\r\n\t\t\t\t\t  this.halfcomplete = true\r\n\t\t\t\t\t//   this.attemptedFlag = false\r\n\t\t\t\t\t  break\r\n\t\t\t\t  }\r\n\t\t\t\t  \r\n\t\t\t\t  else if(temp[i]['subjectId']==this.examId && temp[i]['flag'] && temp[i]['completionFlag'])\r\n\t\t\t\t   {\r\n\t\t\t\t\t  this.attemptedFlag = true\r\n\t\t\t\t\t//   this.halfcomplete = false\r\n\t\t\t\t\t  break\r\n\t\t\t\t   }\r\n\t\t\t  }\r\n\t\t\t  if(this.attemptedFlag) {\r\n\r\n\t\t\t\tthis.msg = ('Already attempted');\r\n\t\t\t\tthis.attemptedFlag = false\r\n\t\t\t  }\r\n\t\t\t  \r\n\t\t\t  else if(!this.attemptedFlag && !this.halfcomplete) {\r\n\t\t\t\t  this.attemptedFlag = true\r\n\t\t\t\tthis.examservice.setFlag({subject:this.subject,subjectId:this.examId,flag:true})\r\n\t\t\t\t.subscribe((resp) => {\r\n\t\t\t\t\tconsole.log(resp);\r\n\t\t\t\t})\r\n\t\t\t  }\r\n\r\n\t\t\t  if (this.halfcomplete) {\r\n\t\t\t\tthis.msg = ('want to continue Your Exam');\r\n\t\t\t\tconsole.log(this.msg);\r\n\t\t\t\t\r\n\t\t\t\t// this.halfcomplete = false\r\n\t\t\t}\r\n\r\n\t\t  })\r\n\r\n\t  }\r\n\t  selectCar(event: Event, car: Car) {\r\n\t\tthis.selectedCar = car;\r\n\t\tthis.displayDialog = true;\r\n\t\tevent.preventDefault();\r\n\t}\r\n\t\r\n\tonDialogHide() {\r\n\t\tthis.selectedCar = null;\r\n\t}\r\n\r\n\tcontinue() {\r\n\t\tthis.mapping = {}\r\n\t\tthis.items = []\r\n\t\tthis.marks=0;\r\n\t\tthis.answerArray=[]\r\n\t\tthis.answers=[]\r\n\r\n\t\tvar temp = this._localStorageService.keys()\r\n\t\tconsole.log(temp);\r\n\t\t\r\n\t\t// this.items.sort(function(a, b) {\r\n\t\t\t// return a[0] - b[0];\r\n\t\t// });\r\n\t\tfor(var i=0;i<temp.length;i++) {\r\n\t\t\tif(this._localStorageService.get(temp[i])) {\r\n\t\t\tvar temp1 = this._localStorageService.get(temp[i])\r\n\t\t\tconsole.log(temp1[0]);\r\n\r\n\t\t\tthis.answers[i+1]= this._localStorageService.get(temp[i])[0]\r\n\t\t\tthis.answerArray[i+1]= this._localStorageService.get(temp[i])[1]\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.answerArray[i+1] = 'NA'\r\n\t\t\t}\r\n\t\t\t// this.answerArray[i+1] = this._localStorageService.get('test'+temp[i])\r\n\t\t\tif(this.answers[i+1]){\r\n\t\t\tthis.testing[i+1] = true}\r\n\t\t\tthis.mapping[i+1] = temp[i]\r\n\t\t}\r\n\r\n\t\tconsole.log(this.answers,this.answerArray);\r\n\t\t\r\n\t\tfor (var question in this.mapping) {\r\n\t\t\tthis.items.push([question, this.mapping[question]]);\r\n\t\t\t// console.log(this.mapping[question]);\r\n\t\t\t\r\n\t\t\t// this._localStorageService.set(this.mapping[question],null)\r\n\t\t}\r\n\t\tthis.quecount = this.items.length\r\n\r\n\t\t// console.log(this._localStorageService.keys());\r\n\r\n\r\n\t\t// this.items.sort(function(a, b) {\r\n\t\t// \treturn a[0] - b[0];\r\n\t\t// });\r\n\r\n\t\tconsole.log(this.items,this.mapping,this.answers);\r\n\t\t\r\n\t\tthis.flag1=true\r\n\t\tthis.questionnumber=1\r\n\t\tthis.hasPrevNext(this.questionnumber,\"\")\r\n\t\tthis.selectedItem = (this.questionnumber-1);\r\n\r\n\r\n\r\n\t}\r\n\t\r\n}","\r\n<div *ngIf = \"flag1\">\r\n  <div class=\"totalquestion mat-elevation-z4 \">\r\n    <div *ngIf=\"quecount\"><b>{{quecount}}</b></div>\r\n    <div *ngIf=\"!quecount\"><b>NaN</b></div>\r\n  </div>\r\n\r\n  <div class=\"totalquestion1  \">Total Number of Questions</div>\r\n\r\n  <div class=\"questionnumber mat-elevation-z4 \">\r\n    <p *ngIf=\"questionnumber\"><b>{{questionnumber}}</b></p>\r\n    <p *ngIf=\"!questionnumber\"><b>NaN</b></p>\r\n  </div>\r\n\r\n  <div class=\"questionnumber1  \">Current Question Number</div>\r\n\r\n  <div class=\"attempted mat-elevation-z4 \">\r\n    <p><b>{{minute}}:{{timeLeft}}</b></p>  \r\n  </div>\r\n\r\n  <div class=\"attempted1\">\r\n    Clock Timer\r\n  </div>\r\n\r\n  <div class=\"selectedAnswer\">\r\n    <ng-container *ngIf=\"!selectedanswer && !last\">Not Attempted</ng-container>\r\n    <ng-container *ngIf=\"selectedanswer\">\r\n      Selected Answer is\r\n      <p><b>{{selectedanswer}}</b></p>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"last\">\r\n      Previously selectedOption Was :  <p><b>{{last}}</b></p>\r\n    </ng-container>\r\n  </div>\r\n\r\n\r\n  <div *ngIf=\"questionnumber>=1\" class=\"panel\" matRipple [matRippleColor]=\"mycolor\" [matRippleRadius]=\"radius\">\r\n    <div> \r\n      <a *ngFor=\"let num of items; let i = index\" class=\"disabled\" (click)=\"test()\" (click)=\"hasPrevNext(num[0],'l')\">\r\n        <div class=\"currentbutton mat-elevation-z8\" *ngIf=\"!answers[num[0]] && !questionflag[num[0]]\" (click)=\"setClickedRow(i)\" [class.select]=\"i==selectedItem\" > <p>{{num[0]}}</p></div>\r\n        <div class=\"attemptedbutton mat-elevation-z8\" *ngIf=\"answers[num[0]]\" (click)=\"setClickedRow(i)\"  [class.select]=\"answers[num[0]]\"><p>{{num[0]}}</p></div>\r\n        <div class=\"flagquestions mat-elevation-z8\" *ngIf=\"questionflag[num[0]] && !answers[num[0]]\" (click)=\"setClickedRow(i)\" [class.select]=\"questionflag[num[0]]\"><p>{{num[0]}}</p></div>\r\n      </a>\r\n      <br>\r\n\r\n      <div class=\"button1 \" *ngIf=\"!questionflag[questionnumber]\"><abbr title=\"Mark Question for Review\"><button mat-button class=\"mat-elevation-z4\" [disabled]=\"answers[questionnumber]\" (click)=\"flagquestion()\" > <i class=\"fa fa-flag-o fa-lg\" aria-hidden=\"true\"></i></button></abbr></div>\r\n      <div class=\"button1 \" *ngIf=\"questionflag[questionnumber]\"><abbr title=\"Remove Flag from Question\"><button mat-button  class=\"mat-elevation-z4\"  (click)=\"removeflag()\"> <i class=\"fa fa-flag fa-lg\" aria-hidden=\"true\"></i></button></abbr></div>\r\n      <div class=\"button1 \" ><abbr title=\"Remove Attempt and Flag Question\"><button mat-button class=\"mat-elevation-z4\" [disabled]=\"!answers[questionnumber]\" (click)=\"flagandremoveattempt()\" > <i class=\"fa fa-eraser fa-lg\" aria-hidden=\"true\"></i></button></abbr></div>\r\n      <div class=\"button1\"><button type=\"text\" (click)=\"confirm()\" pButton icon=\"pi pi-check\" label=\"Complete Exam\"></button></div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"outercoverquestion \" *ngIf =\"question\">\r\n    \r\n    <div class=\"question\">\r\n  \t  <h5>\r\n  \t    Question:\r\n  \t  </h5> \r\n  \t    {{question.question}} \r\n    </div>\r\n\r\n  <mat-radio-group class=\"example-radio-group \" [(ngModel)]=\"selectedanswer\" [disabled]=\"questionflag[questionnumber]\">\r\n      <label  *ngIf =\"question\"><h5>Pick your answer</h5></label>\r\n      <div class=\"example-radio-button\" *ngFor=\"let season of seasons; last as isLast\">\r\n        <!-- <mat-radio-button [value]=\"season\" (change)=\"savetemp(season)\" [disabled]=\"answers[questionnumber]\" [checked]=\"season==last\" [class.checked]=\"season==last\"> -->\r\n        <mat-radio-button [value]=\"season\" (change)=\"savetemp(season)\" [disabled]=\"testing[questionnumber]\" [checked]=\"season==last\" [class.checked]=\"season==last\">\r\n        </mat-radio-button>\r\n        {{season}}\r\n      </div>\r\n  </mat-radio-group>\r\n  <button class=\"prevbutton \" *ngIf=\"questionnumber>=1\" mat-button [disabled]=\"questionnumber==1\" [disabled]=\"testing[prev]\" (click)=\"test()\" (click)=\"hasPrevNext(prev,'p')\" (click)=\"setClickedRow(questionnumber-1)\" [class.select]=\"questionnumber-1 == selectedItem\">Previous</button>\r\n  <button class=\"nextbutton \" *ngIf=\"questionnumber>=1\" mat-button [disabled]=\"questionnumber==quecount\" [disabled]=\"testing[next]\" (click)=\"test()\" (click)=\"hasPrevNext(next,'n')\"  (click)=\"setClickedRow(questionnumber-1)\" [class.select]=\"questionnumber-1 == selectedItem\">Next</button>\r\n  <div class=\"button2\"><button type=\"text\" (click)=\"confirm()\" pButton icon=\"pi pi-check\" label=\"Complete Exam\"></button></div>\r\n  <p-progressBar *ngIf=\"question\" value=\"{{objectKeys(answers).length* quecount}}\"></p-progressBar>\r\n  <!-- <mat-progress-bar color=\"red\" class=\" \" *ngIf=\"question\" mode=\"determinate\" value=\"{{objectKeys(answers).length* quecount}}\"></mat-progress-bar> -->\r\n  </div>\r\n\r\n</div>\r\n\r\n<div *ngIf=\"attemptedFlag && !halfcomplete && flag && !flag1\"><a mat-button (click)=\"searchQuestions()\" (click)=\"startTimer()\" class=\"button\">Confirm You Want To Start Exam</a></div>\r\n\r\n<div *ngIf=\"!attemptedFlag && !halfcomplete && flag && !flag1\"><a mat-button (click)=\"setFlag()\"  class=\"button\">{{subject}}</a></div>\r\n\r\n<div *ngIf=!subject><p>No scheduled exam</p></div>\r\n\r\n<div *ngIf=\"!flag\"><a mat-button (click)=\"searchTests()\">Search Exams</a></div>\r\n\r\n<!-- <div *ngIf=\"msg\">{{msg}}</div> -->\r\n\r\n<!-- <div [hidden]=\"subject\"><app-atom-spinner\r\n  [animationDuration]=\"1000\"\r\n  [size]=\"60\"\r\n  [color]=\"'#ff1d5e'\"\r\n ></app-atom-spinner>\r\n</div> -->\r\n<p-confirmDialog header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n<div class=\"popup\"><p-messages [value]=\"msgs\"></p-messages></div>\r\n\r\n<p-dataView *ngIf=\"!halfcomplete && !attemptedFlag && flag && !flag1\" #dv [value]=\"tempExam\">\r\n  <p-header>\r\n      <div class=\"ui-helper-clearfix\">\r\n          <div class=\"p-grid\">\r\n              <!-- <div class=\"p-col-12 p-md-4\">\r\n                  <p-dropdown [options]=\"sortOptions\" [(ngModel)]=\"sortKey\" placeholder=\"Sort By\" (onChange)=\"onSortChange($event)\" [style]=\"{'min-width':'140px'}\"></p-dropdown>\r\n              </div> -->\r\n              \r\n              <div class=\"p-col-6 p-md-4\" style=\"text-align:right\">\r\n                  <p-dataViewLayoutOptions></p-dataViewLayoutOptions>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </p-header>\r\n  <ng-template let-car pTemplate=\"listItem\">\r\n      <div class=\"p-col-12\">\r\n          <div class=\"car-details\">\r\n              <div>\r\n                  <!-- <img src=\"assets/showcase/images/demo/car/{{car.brand}}.png\"> -->\r\n                  <div class=\"p-grid\">\r\n                      <div class=\"p-col-12\">Subject: <b>{{car.subject}}</b></div>\r\n                      <div class=\"p-col-12\">Date: <b>{{car.date | date}}</b></div>\r\n                      <div class=\"p-col-12\">Time: <b>{{car.time}}</b></div>\r\n                      <div class=\"p-col-12\">Marks: <b>{{car.marks}}</b></div>\r\n                  </div>\r\n              </div>\r\n              <button pButton type=\"button\" label=\"Set Flags\" (click)=\"selectCar($event, car)\"></button>\r\n          </div>\r\n      </div>\r\n  </ng-template>\r\n  <ng-template let-car pTemplate=\"gridItem\">\r\n      <div style=\"padding:.5em\" class=\"p-col-12 p-sm-3\">\r\n          <p-panel [header]=\"car._id\" [style]=\"{'text-align':'center'}\">\r\n              <!-- <img src=\"assets/showcase/images/demo/car/{{car.brand}}.png\" width=\"60\"> -->\r\n              <!-- <div class=\"car-detail\">{{car.subject}} - {{car.time}}</div> -->\r\n              <div class=\"car-detail\">Subject: <b>{{car.subject}}</b></div>\r\n                      <div class=\"car-detail\">Date: <b>{{car.date | date}}</b></div>\r\n                      <div class=\"car-detail\">Time: <b>{{car.time}}</b></div>\r\n                      <div class=\"car-detail\">Marks: <b>{{car.marks}}</b></div>\r\n              <button pButton type=\"button\" label=\"Start Exam\" (click)=\"selectCar($event, car)\" style=\"margin-top:0\"></button>\r\n          </p-panel>\r\n      </div>\r\n  </ng-template>\r\n</p-dataView>\r\n\r\n<p-dialog *ngIf=\"!halfcomplete && !attemptedFlag && flag && !flag1\" header=\"Exam Details\" [(visible)]=\"displayDialog\" [minY]=\"70\" showEffect=\"fade\" [modal]=\"true\" \r\n    [style]=\"{width: '225px'}\" (onAfterHide)=\"onDialogHide()\" [contentStyle]=\"{padding: '2em', textAlign: 'center'}\">\r\n    <div *ngIf=\"selectedCar\">\r\n        <!-- <img src=\"assets/showcase/images/demo/car/{{selectedCar.brand}}.png\"> -->\r\n        <strong>{{selectedCar.subject}} - {{selectedCar.marks}}</strong>\r\n        <button pButton type=\"button\" label=\"Click Here\" (click)=\"setFlag()\" style=\"margin-left:10px\"></button>\r\n    </div>\r\n    <div *ngIf=\"msg\">{{msg}}</div>\r\n\r\n</p-dialog>\r\n<div *ngIf=\"msg && halfcomplete && !attemptedFlag\">{{msg}} <button pButton type=\"button\" label=\"Click Here\" (click)=\"continue()\" (click)=\"startTimer()\" style=\"margin-left:10px\"></button></div>\r\n\r\n<p-sidebar *ngIf=\"!flag1\" [(visible)]=\"visibleSidebar5\" [fullScreen]=\"true\" [baseZIndex]=\"10000\">\r\n  <h1 style=\"font-weight:normal; text-align:center;\">Confirmation</h1>\r\n  <button style=\" left:43%;\" pButton type=\"button\" (click)=\"searchQuestions()\" (click)=\"startTimer()\" label=\"Confirm\" class=\"ui-button-success\"></button>\r\n  <button style=\"left: 44%;\" pButton type=\"button\" (click)=\"visibleSidebar5 = false\" label=\"Cancel\" class=\"ui-button-secondary\"></button>\r\n</p-sidebar>\r\n\r\n<!-- <button pButton type=\"button\" (click)=\"visibleSidebar1 = true\" icon=\"pi pi-arrow-right\"></button> -->\r\n<!-- <button pButton type=\"button\" (click)=\"visibleSidebar2 = true\" icon=\"pi pi-arrow-left\"></button> -->\r\n<!-- <button pButton type=\"button\" (click)=\"visibleSidebar3 = true\" icon=\"pi pi-arrow-down\"></button> -->\r\n<!-- <button pButton type=\"button\" (click)=\"visibleSidebar4 = true\" icon=\"pi pi-arrow-up\"></button> -->\r\n<button *ngIf=\"!halfcomplete && attemptedFlag && flag && !flag1\" pButton type=\"button\" (click)=\"visibleSidebar5 = true\" label=\"Confirmation Button\"></button>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { SigninService} from '../services/signin.service';\r\nimport { Router } from '@angular/router';\r\nimport {Signup} from '../shared/signup';\r\nimport { Exam} from '../shared/admin';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AdminService} from '../services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-header-component',\r\n  templateUrl: './header-component.component.html',\r\n  styleUrls: ['./header-component.component.scss']\r\n})\r\nexport class HeaderComponentComponent implements OnInit {\r\n\r\n  searchForm : FormGroup;\r\n  searchvalue: String;\r\n  username: string = undefined;\r\n  branch: string = undefined;\r\n  semester: string = undefined;\r\n  exams: Exam = null;\r\n  exams1: any;\r\n  subscription: Subscription;\r\n  subscription1: Subscription;\r\n  subscription2: Subscription;\r\n  ipAddress:any;\r\n  res: Object[];\r\n  res1:Signup[];\r\n  constructor(private authService: AuthService,\r\n    private router:Router,\r\n    private singupservice : SigninService,\r\n    private fb: FormBuilder,\r\n    private adminservices: AdminService) { }\r\n\r\n  ngOnInit(): void {\r\n    fetch('https://jsonip.com', { mode: 'cors' })\r\n  .then((resp) => resp.json())\r\n  .then((ip) => {\r\n    this.ipAddress=ip.ip\r\n    console.log(this.ipAddress);\r\n    // return ip.ip\r\n  });\r\n    this.authService.loadUserCredentials();\r\n    this.subscription = this.authService.getUsername()\r\n        .subscribe(name => { console.log(name); this.username = name; });\r\n    this.subscription1 = this.authService.getBranch()\r\n        .subscribe(name => { console.log(name); this.branch = name; });\r\n    // this.subscription2 = this.authService.getSemester()\r\n    //     .subscribe(name => { console.log(name); this.semester = name; });\r\n    \r\n    this.searchForm =  this.searchForm = this.fb.group ({\r\n      searchquery: ['', [Validators.required]]\r\n      });\r\n    }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  gologin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  logOut() {\r\n    console.log(this.username);\r\n    \r\n    this.singupservice.out(this.ipAddress,this.username)\r\n    .subscribe((res)=>{console.log(res);\r\n    })\r\n    this.username = undefined;\r\n      // console.log('hoil');\r\n      console.log(this.username);\r\n    this.authService.logOut();\r\n    this.router.navigate(['/home']);\r\n\r\n   }\r\n  getuser() {\r\n    this.singupservice.getusers()\r\n      \r\n      .subscribe(res => \r\n        {\r\n          this.res=res;\r\n          this.res1=res.users;\r\n          console.log(this.res1);\r\n        });\r\n  }\r\n}\r\n","<mat-toolbar class=\"Toolbar\">\r\n    <app-atom-spinner\r\n     [animationDuration]=\"1000\"\r\n     [size]=\"60\"\r\n     [color]=\"'#ff1d5e'\"\r\n    ></app-atom-spinner>\r\n\r\n    <!-- <span><img src=\"#\" height=30 width=41></span> -->\r\n    <button routerLink=\"/home\" routerLinkActive='active' mat-button class=\"buttons mat-elevation-z4\">Home</button>\r\n    <button routerLink=\"/exam\" routerLinkActive='active' mat-button class=\"buttons mat-elevation-z4\"> Exam </button>\r\n    <button routerLink=\"/result\" routerLinkActive='active' mat-button class=\"buttons mat-elevation-z4\"> Result </button>\r\n\r\n    <!-- <a routerLink=\"/#\" routerLinkActive='active' mat-button><span class=\"fa fa-info fa-lg\"></span> About</a> -->\r\n    <!-- <a mat-button (click)=\"searchTests()\"><span class=\"fa fa-list fa-lg\"></span> Tests</a> -->\r\n    <!-- <a routerLink=\"/#\" routerLinkActive='active' mat-button><span class=\"fa fa-address-card fa-lg\"></span> Contact</a> -->\r\n    <!-- <a mat-button (onclick)=\"search()\"><span class=\"fa fa-search fa-lg\"></span></a> -->\r\n    \r\n    <span class=\"flex-spacer\"></span>\r\n    <a mat-button *ngIf=\"!username\" (click)=\"gologin()\"><span class=\"fa fa-sign-in fa-lg\"></span> Login</a>\r\n    <a mat-button *ngIf=\"username\" (click)=\"logOut()\"><span class=\"fa fa-sign-in fa-lg\"></span> Logout</a>\r\n    <a mat-button *ngIf=\"username\">Welcome {{username}}</a>\r\n    \r\n</mat-toolbar>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { SigninService} from '../services/signin.service';\r\nimport { AdminService } from '../services/admin.service';\r\nimport { Router } from '@angular/router';\r\nimport {Signup} from '../shared/signup';\r\nimport {HomeService} from '../services/home.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { trigger,state,style,transition,animate } from '@angular/animations';\r\n// import dayGridPlugin from '@fullcalendar/daygrid';\r\n// import timeGridPlugin from '@fullcalendar/timegrid';\r\n// import interactionPlugin from '@fullcalendar/interaction';\r\n// import '@fullcalendar';\r\n\r\nexport interface Car {\r\n  subject;\r\n  date;\r\n  time;\r\n  marks;\r\n  _id;\r\n}\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n  animations: [\r\n    trigger('rowExpansionTrigger', [\r\n        state('void', style({\r\n            transform: 'translateX(-10%)',\r\n            opacity: 0\r\n        })),\r\n        state('active', style({\r\n            transform: 'translateX(0)',\r\n            opacity: 1\r\n        })),\r\n        transition('* <=> *', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\r\n    ])\r\n],\r\nstyles: [`      \r\n        .filter-container {\r\n            text-align: center;\r\n        }\r\n        .car-details {\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            padding: 2em;\r\n            border-bottom: 1px solid #d9dad9;\r\n        }\r\n        .car-details > div {\r\n            display: flex;\r\n            align-items: center;\r\n        }\r\n        .car-details > div img {\r\n            margin-right: 14px;\r\n        }\r\n        .car-detail {\r\n            padding: 0 1em 1em 1em;\r\n            border-bottom: 1px solid #d9dad9;\r\n            margin: 1em;\r\n        }\r\n        .ui-panel-content {\r\n            padding: 1em;\r\n        }\r\n        .dark-theme :host ::ng-deep .car-details,\r\n        .dark-theme :host ::ng-deep .car-detail {\r\n            border-bottom: 1px solid #191919;\r\n        }\r\n        \r\n        @media (max-width: 1024px) {\r\n            .car-details img {\r\n                 width: 75px;\r\n            }\r\n            .filter-container {\r\n                text-align: left;\r\n            }\r\n        }\r\n    `]\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  username: string;\r\n  subscription: Subscription;\r\n  branch: string;\r\n  subscription1: Subscription;\r\n  semester: string;\r\n  subscription2: Subscription;\r\n  res: Object[];\r\n  res1:Signup[];\r\n  staff:any;\r\n  update:any;\r\n  result:any;\r\n  interval:any;\r\n  exam=[];\r\n  cols:any;\r\n  allexams:any;\r\n  colsforall:any;\r\n  cars: Car[];\r\n  selectedCar: Car;\r\n  displayDialog: boolean;\r\n  options:any;\r\n  events={};\r\n  temp = [];\r\n  constructor(private authService: AuthService,\r\n    private router:Router,\r\n    private homeservice: HomeService,\r\n\t\tprivate datePipe: DatePipe) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.loadUserCredentials();\r\n    this.subscription = this.authService.getUsername()\r\n        .subscribe(name => { this.username = name; console.log(name);});\r\n        this.subscription1 = this.authService.getBranch()\r\n        .subscribe(name => { this.branch = name;console.log(this.branch); });\r\n        this.subscription2 = this.authService.getSemester()\r\n        .subscribe(name => { this.semester = name;console.log(name); });\r\n      this.interval = setInterval(() => {\r\n          this.getexam()\r\n          clearInterval(this.interval)\r\n          },2000)\r\n      // this.getexam()\r\n      // setTimeout(this.getexam,4000)\r\n      // var interval = setInterval(() => {\r\n        \r\n      //   for (var i=0;i<this.allexams.length;i++) {\r\n      //     this.temp.push(this.allexams[i])\r\n      //   }\r\n      //   this.events['data'] = this.temp\r\n\r\n      //   console.log(this.events);\r\n        \r\n\r\n      // //   this.options = {\r\n      // //     plugins:[ dayGridPlugin, timeGridPlugin, interactionPlugin ],\r\n      // //     // defaultDate: '2017-02-01',\r\n      // //     header: {\r\n      // //         left: 'prev,next',\r\n      // //         center: 'title',\r\n      // //         right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n      // //     },\r\n      // //     editable: true\r\n      // // };\r\n\r\n\r\n      //   clearInterval(interval)\r\n      //   },4000)\r\n      \r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n  \r\n  \r\n  getexam() {\r\n    this.exam=[]\r\n    this.cols=null;\r\n    console.log(this.branch);\r\n    \r\n    this.homeservice.getExam(this.branch,this.semester)\r\n    .subscribe((resp) => {\r\n      console.log(resp['exams']);\r\n      this.allexams = resp['exams'];\r\n      var temp = resp['exams']\r\n      for( var i=0;i<resp['exams'].length;i++) {\r\n        console.log(temp[i]);\r\n      var date1 = this.datePipe.transform(temp[i].date,\"dd\")\r\n      console.log(date1);\r\n\t\t\tvar date2 = this.datePipe.transform(Date.now(),\"dd\")\r\n        console.log(date2);\r\n      \r\n      if(date2<=date1 && parseInt(date1)-parseInt(date2)<2) {\r\n        this.exam.push(temp[i])\r\n      }\r\n      }\r\n      console.log(this.exam);\r\n      this.cols = [\r\n        { field: 'subject', header: 'Subject' }\r\n    ];\r\n    this.colsforall = [\r\n      { field: 'subject', header: 'Subject' },\r\n      { field: 'time', header: 'Time' },\r\n      { field: 'date', header: 'Date' },\r\n      { field: 'marks', header: 'Marks' },\r\n      { field: '_id', header: 'Exam-Id' }\r\n    ]\r\n    })\r\n\r\n  }\r\n\r\n  selectCar(event: Event, car: Car) {\r\n    this.selectedCar = car;\r\n    this.displayDialog = true;\r\n    event.preventDefault();\r\n}\r\n\r\n// onSortChange(event) {\r\n//     let value = event.value;\r\n\r\n//     if (value.indexOf('!') === 0) {\r\n//         this.sortOrder = -1;\r\n//         this.sortField = value.substring(1, value.length);\r\n//     }\r\n//     else {\r\n//         this.sortOrder = 1;\r\n//         this.sortField = value;\r\n//     }\r\n// }\r\n\r\nonDialogHide() {\r\n    this.selectedCar = null;\r\n}\r\n\r\nNotify(id) {\r\n  this.homeservice.NotifyExam({subject:id})\r\n  .subscribe((resp) => {\r\n    console.log(resp);\r\n\r\n  })\r\n}\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n \r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <p-card header=\"Scheduled Exams\" subheader=\"Within 2 days\" class=\"mat-elevation-z4\" styleClass=\"ui-card-shadow\">\r\n                    <button class=\"refreshbutton\" mat-raised-button (click)=\"getexam()\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></button>\r\n                    <!-- <p-header>\r\n                        Scheduled Exams\r\n                    </p-header> -->\r\n                    <div *ngIf=\"exam && cols\">\r\n                        <p-table [columns]=\"cols\" *ngIf=\"exam.length!=0; \" [value]=\"exam\" dataKey=\"subject\" [scrollable]=\"true\"  scrollHeight=\"150px\" \r\n                        [virtualScroll]=\"true\" [virtualRowHeight]=\"34\">\r\n                            <ng-template pTemplate=\"header\" let-columns>\r\n                                <tr>\r\n                                    <th style=\"width: 3em\"></th>\r\n                                    <th *ngFor=\"let col of columns\">\r\n                                        {{col.header}}\r\n                                        \r\n                                    </th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate=\"body\" let-rowData let-expanded=\"expanded\" let-columns=\"columns\">\r\n                                <tr>\r\n                                    <td>\r\n                                        <a href=\"#\" [pRowToggler]=\"rowData\">\r\n                                            <i [ngClass]=\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\"></i>\r\n                                        </a>\r\n                                    </td>\r\n                                    <td *ngFor=\"let col of columns\">\r\n                                        {{rowData[col.field]}}\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate=\"rowexpansion\" let-rowData let-columns=\"columns\">\r\n                                <tr>\r\n                                    <td [attr.colspan]=\"columns.length + 1\">\r\n                                        <div class=\"p-grid -fluid\" style=\"font-size:16px;padding:20px\">\r\n                                            <!-- <div class=\"p-col-12 p-md-3\" style=\"text-align:center\">\r\n                                                <img [attr.alt]=\"rowData.brand\" src=\"assets/showcase/images/demo/car/{{rowData.brand}}.png\">\r\n                                            </div> -->\r\n                                            <div class=\"p-col-12 p-md-9\">\r\n                                                <div class=\"p-grid\">\r\n                                                    <div class=\"p-col-12\">\r\n                                                        <b>Subject:</b> {{rowData.subject}}\r\n                                                    </div>\r\n                                                    <div class=\"p-col-12\">\r\n                                                        <b>Date:</b> {{rowData.date | date}}\r\n                                                    </div>\r\n                                                    <div class=\"p-col-12\">\r\n                                                        <b>Time:</b> {{rowData.time}}\r\n                                                    </div>\r\n                                                    <div class=\"p-col-12\">\r\n                                                        <b>Semester:</b> {{rowData.semester}}\r\n                                                    </div>\r\n                                                    <div class=\"p-col-12\">\r\n                                                        <b>Branch:</b> {{rowData.branch}}\r\n                                                    </div>\r\n                                                    <div class=\"p-col-12\">\r\n                                                       <button pButton type=\"button\" label=\"Notify\" icon=\"pi pi-check\" style=\"margin-right: .25em\" (click)=\"Notify(rowData._id)\"></button>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                        </p-table>\r\n                        <div *ngIf=\"exam.length==0\">No Scheduled Exams Within 2 days</div>\r\n                    </div>\r\n                    <div [hidden]=\"exam && cols\">\r\n                        <app-half-circle-spinner\r\n                  [animationDuration]=\"1000\"\r\n                  [size]=\"60\"\r\n                  [color]=\"'#ff1d5e'\"\r\n                ></app-half-circle-spinner>\r\n                    </div>\r\n                    <p-footer>\r\n                        <button pButton type=\"button\" label=\"Go To Exam Page\" icon=\"pi pi-check\" style=\"margin-right: .25em\" [routerLink]=\"['/exam']\"></button>\r\n                        <!-- <button pButton type=\"button\" label=\"Cancel\" icon=\"pi pi-times\" class=\"ui-button-secondary\"></button> -->\r\n                    </p-footer>\r\n                </p-card>\r\n            </div>\r\n            <div class=\"col-md-8\">\r\n                <!-- <p-card header=\"All Exams\" subheader=\"see details about your exam performance\" class=\"mat-elevation-z4\" styleClass=\"ui-card-shadow\">\r\n                    <button class=\"refreshbutton\" mat-raised-button (click)=\"getexam()\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></button>\r\n                   \r\n                    <div *ngIf=\"exam && cols\">\r\n                        <p-table #dt [columns]=\"colsforall\" [value]=\"allexams\" [paginator]=\"true\" [rows]=\"5\">\r\n                            <ng-template pTemplate=\"caption\">\r\n                                <div style=\"text-align: right\">        \r\n                                    <i class=\"pi pi-search\" style=\"margin:4px 4px 0 0\"></i>\r\n                                    <input type=\"text\" pInputText size=\"50\" placeholder=\"Search Here\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" style=\"width:auto\">\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate=\"header\" let-columns>\r\n                                <tr>\r\n                                    <th *ngFor=\"let col of columns\">\r\n                                        {{col.header}}\r\n                                    </th>\r\n                                </tr>\r\n                                \r\n                            </ng-template>\r\n                            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                                <tr [pSelectableRow]=\"rowData\">\r\n                                    <td *ngFor=\"let col of columns\" [routerLink]=\"['/exam', rowData['_id']]\">\r\n                                        {{rowData[col.field]}}\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                        </p-table>\r\n                       \r\n                    </div>\r\n                    <div [hidden]=\"exam && cols\">\r\n                        <app-half-circle-spinner\r\n                  [animationDuration]=\"1000\"\r\n                  [size]=\"60\"\r\n                  [color]=\"'#ff1d5e'\"\r\n                ></app-half-circle-spinner>\r\n                    </div>\r\n                    <p-footer>\r\n                        <button pButton type=\"button\" label=\"Go To Exam Page\" icon=\"pi pi-check\" style=\"margin-right: .25em\" [routerLink]=\"['/exam']\"></button>\r\n                    </p-footer>\r\n                </p-card> -->\r\n                <p-dataView #dv [value]=\"allexams\" [paginator]=\"true\" [rows]=\"5\" paginatorPosition=\"both\" filterBy=\"subject\">\r\n    <p-header>\r\n        <div class=\"ui-helper-clearfix\">\r\n            <div class=\"p-grid\">\r\n                <!-- <div class=\"p-col-12 p-md-4\">\r\n                    <p-dropdown [options]=\"sortOptions\" [(ngModel)]=\"sortKey\" placeholder=\"Sort By\" (onChange)=\"onSortChange($event)\" [style]=\"{'min-width':'140px'}\"></p-dropdown>\r\n                </div> -->\r\n                <div class=\"p-col-6 p-md-4 filter-container\">\r\n                    <div style=\"position:relative\">\r\n                        <input type=\"search\" pInputText placeholder=\"Search by subject\" (input)=\"dv.filter($event.target.value)\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"p-col-6 p-md-4\" style=\"text-align:right\">\r\n                    <p-dataViewLayoutOptions></p-dataViewLayoutOptions>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </p-header>\r\n    <ng-template let-car pTemplate=\"listItem\">\r\n        <div class=\"p-col-12\">\r\n            <div class=\"car-details\">\r\n                <div>\r\n                    <!-- <img src=\"assets/showcase/images/demo/car/{{car.brand}}.png\"> -->\r\n                    <div class=\"p-grid\">\r\n                        <div class=\"p-col-12\">Subject: <b>{{car.subject}}</b></div>\r\n                        <div class=\"p-col-12\">Date: <b>{{car.date | date}}</b></div>\r\n                        <div class=\"p-col-12\">Time: <b>{{car.time}}</b></div>\r\n                        <div class=\"p-col-12\">Marks: <b>{{car.marks}}</b></div>\r\n                    </div>\r\n                </div>\r\n                <button pButton type=\"button\" icon=\"pi pi-search\" (click)=\"selectCar($event, car)\"></button>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template let-car pTemplate=\"gridItem\">\r\n        <div style=\"padding:.5em\" class=\"p-col-12 p-sm-3\">\r\n            <p-panel [header]=\"car._id\" [style]=\"{'text-align':'center'}\">\r\n                <!-- <img src=\"assets/showcase/images/demo/car/{{car.brand}}.png\" width=\"60\"> -->\r\n                <div class=\"car-detail\">{{car.subject}} - {{car.time}}</div>\r\n                <button pButton type=\"button\" icon=\"pi pi-search\" (click)=\"selectCar($event, car)\" style=\"margin-top:0\"></button>\r\n            </p-panel>\r\n        </div>\r\n    </ng-template>\r\n</p-dataView>\r\n\r\n<p-dialog header=\"Exam Details\" [(visible)]=\"displayDialog\" [minY]=\"70\" showEffect=\"fade\" [modal]=\"true\" \r\n    [style]=\"{width: '225px'}\" (onAfterHide)=\"onDialogHide()\" [contentStyle]=\"{padding: '2em', textAlign: 'center'}\">\r\n    <div *ngIf=\"selectedCar\">\r\n        <!-- <img src=\"assets/showcase/images/demo/car/{{selectedCar.brand}}.png\"> -->\r\n        <strong>{{selectedCar.subject}} - {{selectedCar.marks}}</strong>\r\n        <button pButton type=\"button\" label=\"Click Here\" [routerLink]=\"['/exam', selectedCar._id]\" style=\"margin-left:10px\"></button>\r\n    </div>\r\n</p-dialog>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- <p-dataview [value]=\"allexams\" [loading]=\"loading\"> -->\r\n    <!-- Hello -->\r\n<!-- </p-dataview> -->","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport { login,returnlogin } from '../shared/login';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { GeneralService } from '../services/general.service'\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  onsubmitsignupvalues: login;\r\n  temp: login = null;\r\n  errMess: String =null;\r\n  returnmessage: returnlogin;\r\n  ipAddress:any;\r\n  subscription: Subscription;\r\n  username:any;\r\n  return: string = '';\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private router: Router,\r\n    private ip:GeneralService,\r\n    private authService: AuthService,\r\n    private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    // this.getIP();\r\n    this.route.queryParams\r\n      .subscribe(params => this.return = params['return'] || '/home');\r\n    fetch('https://jsonip.com', { mode: 'cors' })\r\n  .then((resp) => resp.json())\r\n  .then((ip) => {\r\n    this.ipAddress=ip.ip\r\n    console.log(this.ipAddress);\r\n    // return ip.ip\r\n  });\r\n    this.firstFormGroup = this.fb.group({\r\n      emailid: ['', [Validators.required, Validators.pattern] ]\r\n    });\r\n    this.secondFormGroup = this.fb.group({\r\n      password:['', [Validators.required,Validators.pattern]]\r\n    });\r\n\r\n    this.authService.loadUserCredentials();\r\n    this.subscription = this.authService.getUsername()\r\n        .subscribe(name => {  this.username = name; console.log(this.username); });\r\n  }\r\n\r\n  // getIP()  \r\n  // {  \r\n  //   this.ipAddress=this.ip.getIPAddress()  \r\n        \r\n  //     console.log('ipaddress' , this.ipAddress);\r\n  //   };  \r\n \r\n  onSubmitFirst()  {\r\n    \r\n    this.onsubmitsignupvalues = this.firstFormGroup.value;\r\n    this.onsubmitsignupvalues.username = this.onsubmitsignupvalues.emailid.slice(0,8);\r\n    delete this.onsubmitsignupvalues.emailid\r\n    console.log(this.onsubmitsignupvalues);\r\n    \r\n  }\r\n  onSubmitSecond() {\r\n    this.temp = (this.secondFormGroup.value);\r\n    Object.assign(this.onsubmitsignupvalues,this.temp);\r\n    console.log(this.onsubmitsignupvalues);\r\n    // console.log(this.username);\r\n    \r\n    this.authService.checkanotherlogin(this.onsubmitsignupvalues)\r\n    .subscribe(data => {\r\n      console.log(data);\r\n    \r\n    if(data.length==0){\r\n\r\n            this.authService.checkanotherIP(this.ipAddress)\r\n            .subscribe(data => {\r\n            console.log(data);\r\n\r\n            if(data.length==0){\r\n      \r\n                      this.authService.logIn(this.onsubmitsignupvalues,this.ipAddress)\r\n                        .subscribe(data =>  {     \r\n                        \r\n                            // console.log('inside');        \r\n                            console.log(data);\r\n                            console.log(this.errMess);\r\n                            // this.router.navigate(['/home']);\r\n                            this.router.navigateByUrl(this.return);\r\n                          },\r\n                        error => {\r\n                          console.log(error);\r\n                          this.errMess = error;\r\n                          console.log(this.errMess);\r\n                        },\r\n                      );\r\n                    }\r\n              else {\r\n                console.log('Same System cannot be use twice in one exam');\r\n                }\r\n              }\r\n            )\r\n    }\r\n  else {\r\n    console.log('Same User can\\'t login at same time');\r\n  }\r\n  });\r\n  }\r\n  reset() {\r\n    this.onsubmitsignupvalues=null;\r\n    this.temp=null;\r\n  }\r\n  \r\n\r\n}\r\n","<mat-horizontal-stepper labelPosition=\"bottom\" #stepper>\r\n    <mat-step [stepControl]=\"firstFormGroup\">\r\n      <form [formGroup]=\"firstFormGroup\" (ngSubmit)=\"onSubmitFirst()\">\r\n        <ng-template matStepLabel matStepperIcon=\"done\">Fill out your Email </ng-template>\r\n        <mat-form-field>\r\n          <mat-label>Email-Id</mat-label>\r\n          <input matInput placeholder=\"Enter Email-Id\" formControlName=\"emailid\" type=\"text\" required>\r\n        </mat-form-field>\r\n        <div>\r\n          <button mat-button matStepperNext [disabled]=\"firstFormGroup.invalid\">Next</button>\r\n        </div>\r\n      </form>\r\n    </mat-step>\r\n    <mat-step [stepControl]=\"secondFormGroup\">\r\n      <form [formGroup]=\"secondFormGroup\" (ngSubmit)=\"onSubmitSecond()\">\r\n        <ng-template matStepLabel>Fill out the details</ng-template>\r\n\r\n        <mat-form-field>\r\n            <mat-label>Password</mat-label>\r\n            <input matInput type=\"password\" formControlName=\"password\" placeholder=\"Enter Password\" required>\r\n        </mat-form-field>\r\n        \r\n        <div>\r\n          <button mat-button matStepperPrevious>Back</button>\r\n          <button mat-button matStepperNext [disabled]=\"secondFormGroup.invalid\">Confirm</button>\r\n          <button mat-button (click)=\"stepper.reset()\" (click)=\"reset()\">Reset</button>\r\n        </div>\r\n      </form>\r\n      <div *ngIf=\"errMess\">\r\n        <h2>Error</h2>\r\n        <h4>Kindly please check your Email-Id and Password</h4>\r\n      </div>\r\n\r\n    </mat-step>\r\n\r\n</mat-horizontal-stepper>","import { Component, OnInit,ViewChild,AfterViewInit } from '@angular/core';\r\nimport { ExamComponent} from '../exam/exam.component';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { ResultService } from '../services/result.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-result',\r\n  templateUrl: './result.component.html',\r\n  styleUrls: ['./result.component.scss']\r\n})\r\nexport class ResultComponent implements OnInit {\r\n\r\n  message:String;\r\n  username: string;\r\n  subscription: Subscription;\r\n  branch: string;\r\n  subscription1: Subscription;\r\n  semester: string;\r\n  subscription2: Subscription;\r\n  subscription3: Subscription;\r\n  id:any;\r\n  subjects =[];\r\n  temp = {}\r\n  UserbyId:any;\r\n  items=[];\r\n  attempts:any;\r\n\r\n  constructor(private authService :AuthService,\r\n    private resultservice: ResultService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.loadUserCredentials();\r\n    this.subscription = this.authService.getUsername()\r\n        .subscribe(name => { this.username = name; console.log(name);});\r\n    this.subscription1 = this.authService.getBranch()\r\n        .subscribe(name => { this.branch = name;console.log(this.branch); });\r\n    this.subscription2 = this.authService.getSemester()\r\n        .subscribe(name => { this.semester = name;console.log(name); });\r\n    this.subscription3 = this.authService.getId()\r\n        .subscribe(name => { this.id = name;console.log(name); });\r\n\r\n    this.resultservice.getUser()\r\n    .subscribe((user)=>{\r\n      console.log(user);\r\n\r\n      this.UserbyId = user['user'];\r\n      console.log(this.UserbyId);\r\n      \r\n      for (var i=0;i<this.UserbyId.attempted.length;i++) {\r\n        this.temp[this.UserbyId.attempted[i].subject] = this.UserbyId.attempted[i].subjectId\r\n        this.subjects.push(this.temp)\r\n        // this.subjects.push(this.UserbyId.attempted[i].subjectId)\r\n      }\r\n      this.subjects = [...new Set(this.subjects)]\r\n      console.log(this.subjects);\r\n      \r\n    })\r\n}\r\n\r\ngetAttempts(subject) {\r\n  this.items = []\r\n  this.attempts = []\r\n  \r\n  // console.log(this.exams.length);\r\n\r\n  // for (var i=0;i<this.exams.length;i++) {\r\n    // console.log(this.exams[i]);\r\n    // if(this.exams[i]['subject']==subject) {\r\n      // this.id = this.exams[i]['_id']\r\n      // break\r\n    // }\r\n  // }\r\n  console.log(this.id);\r\n\r\n  this.resultservice.getAttempts(subject,this.id)\r\n  .subscribe((resp) => {\r\n    console.log(resp);\r\n    var id = resp[0]['_id']\r\n    console.log(id);\r\n    this.attempts = resp\r\n    // this.attempt=resp[0]['attempt']\r\n\r\n    // for (var question in this.attempt) {\r\n      // this.items.push([question, this.attempt[question]]);\r\n    // }\r\n    \r\n    // this.items.sort(function(a, b) {\r\n      // return a[0] - b[0];\r\n    // });\r\n  })\r\n}\r\n  // getResult() {\r\n  //   this.result = this.examcomponent.answers\r\n  //   console.log(this.result);\r\n  // }\r\n \r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n \r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <div class=\"header\">\r\n                            <h4 class=\"title\">Details Of Student</h4>\r\n                            <p class=\"title category\">{{username}}</p>\r\n                        </div>\r\n                        <div >\r\n                          <div class=\"entry\">\r\n                            <p class=\"card-text\">Semester - {{semester}}</p>\r\n                              <hr>\r\n                            <p class=\"card-text\">Branch - {{branch}}</p>\r\n                            <hr>\r\n                            <h5>Exams Attempted</h5>\r\n                            <table class=\"table table-hover\">\r\n                                <tbody *ngFor=\"let i of subjects\">\r\n                                    <tr *ngFor=\"let j of i | keyvalue\">\r\n                                        <td>{{j.key}}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- *ngIf=\"!questionWise\" -->\r\n        <div >\r\n        <!-- <table *ngFor=\"let i of attempts\" class=\"table table-hover table-striped\">\r\n            <thead>\r\n                \r\n                <tr>\r\n                    <th><b>{{i['user']['username']}}</b></th>\r\n                    <th>\r\n                        {{i['subject']['date'] | date}}\r\n                    </th>\r\n                    <th>\r\n                        <p class=\"card-text\">Marks\r\n                            <b>{{i['marks']}}/{{i['subject']['marks']}}</b></p>\r\n                    </th>\r\n                </tr>\r\n                \r\n                <tr>\r\n                    <th>Question Number</th>\r\n                    <th>Answer Attempted</th>\r\n                    <th>Check</th>\r\n                    <th>Correct Answer</th>\r\n                \r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let a of i['attempt'] | keyvalue\">\r\n                    <td>{{a.key}}</td>\r\n                    <td>{{a.value[0]}}</td>\r\n                    <td>{{a.value[1]}}</td>\r\n                    <td>{{a.value[2]}}</td>\r\n                \r\n                </tr>\r\n            </tbody>\r\n        </table> -->\r\n        </div>\r\n        <!-- *ngIf=\"questionWise\" -->\r\n        <!-- <div >\r\n            <table *ngFor=\"let i of questionWise\" class=\"table table-hover table-striped\">\r\n                <thead>\r\n                \r\n                    <tr>\r\n                        <th><b>Question Number {{key}}</b></th>\r\n                        <th><b>{{i['user']['username']}}</b></th>\r\n                        <th>\r\n                            {{i['subject']['date'] | date}}\r\n                        </th>\r\n\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th>Question Number</th> -->\r\n                        <!-- <th>Answer Attempted</th>\r\n                        <th>Check</th>\r\n                        <th>Correct Answer</th>\r\n                    \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{{i.key}}</td> -->\r\n                        <!-- <td>{{i.attempt[0]}}</td>\r\n                        <td>{{i.attempt[1]}}</td>\r\n                        <td>{{i.attempt[2]}}</td>\r\n                    \r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n                    <button mat-button (click)=\"goBack()\">BACK</button>\r\n        \r\n        </div> -->\r\n        \r\n        <div *ngIf=\"!attempts\">\r\n        <h4>No Attempt for this given Exam</h4>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Exam } from '../shared/admin';\r\n\r\nimport { catchError, delay } from 'rxjs/operators';\r\n\r\nimport { Observable, of } from'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { baseURL } from '../shared/baseurl';\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n\r\n  config: any;\r\n\r\n  constructor(private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n\r\n  scheduleExam(exam:Exam): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json'\r\n      })\r\n    };\r\n    return this.http.post<any>(baseURL+ 'admin/',exam,httpOptions)\r\n    .pipe(catchError(this.processHTTPMsgService.handleError))\r\n    .pipe(delay(2000));\r\n  }\r\n\r\n  searchExam(branch:any,sem:any): Observable<any> {\r\n    console.log(branch);\r\n    console.log(sem);\r\n    // console.log(date);\r\n    \r\n    this.config = {\r\n      params: { branch:branch,\r\n                 sem:sem,\r\n                 \r\n             }};\r\n    return this.http.get<Exam>(baseURL+ 'admin/exam',this.config)\r\n    .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n  getstaff(): Observable<any> {\r\n    return this.http.get<any>(baseURL+ 'admin/getStaff')\r\n    .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n  verfied(id:any,update:any) : Observable<any> {\r\n    console.log(id);\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json'\r\n      })\r\n    };\r\n    this.config = {\r\n      params:{\r\n        id:id,\r\n        update:update\r\n      }\r\n    };\r\n    return this.http.put<any>(baseURL+'admin/getStaff',this.config,httpOptions)\r\n    .pipe(catchError(this.processHTTPMsgService.handleError));\r\n    \r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { login,returnlogin } from '../shared/login';\r\n\r\nimport { catchError, delay } from 'rxjs/operators';\r\n\r\nimport { Observable, of } from'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { baseURL } from '../shared/baseurl';\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AttemptService {\r\n\r\n  constructor(private http:HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n    \r\n    getAttempts(id:number) : Observable<any> {\r\n      // var config = {\r\n        // params: {\r\n          // subject:subject\r\n        // }\r\n      // }\r\n      return this.http.get<any>(baseURL + 'test/attempt/'+id)\r\n        .pipe(catchError(this.processHTTPMsgService.handleError))\r\n    }\r\n}\r\n\r\n\r\n","// import { Injectable } from '@angular/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot,RouterState } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  base_url: string;\r\n  \r\n    constructor(private router: Router\r\n        , private authService: AuthService) {}\r\n        // state: RouterState = this.router.routerState;\r\n        \r\n        // snapshot: RouterStateSnapshot = this.state.snapshot;\r\n        // root: ActivatedRouteSnapshot = this.snapshot.root;\r\n        // child = this.root.firstChild;\r\n        // id: Observable<string> = child.params.map(p => p.id);\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        // Check to see if a user has a valid token\r\n        if (this.authService.isLoggedIn()) {\r\n            // If they do, return true and allow the user to load app\r\n            return true;\r\n        }\r\n\r\n        // If not, they redirect them to the login page\r\n        this.router.navigate(['/login'], {\r\n          queryParams: {\r\n            return: state.url\r\n          }\r\n        });\r\n        return false;\r\n    }\r\n\r\n  // constructor() { }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private inj: Injector) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const authService = this.inj.get(AuthService);\r\n    // Get the auth header from the service.\r\n    const authToken = authService.getToken();\r\n    console.log(\"Interceptor: \" + authToken);\r\n    // Clone the request to add the new header.\r\n    const authReq = req.clone({headers: req.headers.set('Authorization', 'bearer ' + authToken)});\r\n        // Pass on the cloned request instead of the original request.\r\n        console.log('working');\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class UnauthorizedInterceptor implements HttpInterceptor {\r\n  constructor(private inj: Injector) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const authService = this.inj.get(AuthService);\r\n    const authToken = authService.getToken();\r\n\r\n    return next\r\n      .handle(req)\r\n      .pipe(tap((event: HttpEvent<any>) => {\r\n        // do nothing\r\n      }, (err: any) => {\r\n        if (err instanceof HttpErrorResponse) {\r\n          if (err.status === 401 && authToken) {\r\n            console.log('Unauthorized Interceptor: ', err);\r\n            authService.checkJWTtoken();\r\n          }\r\n        }\r\n      }));\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\nimport { baseURL } from '../shared/baseurl';\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\n\r\ninterface AuthResponse {\r\n  status: string;\r\n  success: string;\r\n  token: string;\r\n}\r\n\r\ninterface JWTResponse {\r\n  status: string;\r\n  success: string;\r\n  user: any;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  config:any;\r\n  tokenKey = 'JWT';\r\n  isAuthenticated: Boolean = false;\r\n  id: Subject<any> = new Subject<any>();\r\n  username: Subject<string> = new Subject<string>();\r\n  branch: Subject<string> = new Subject<string>();\r\n  semester: Subject<string> = new Subject<string>();\r\n  \r\n  authToken: string = undefined;\r\n\r\n   constructor(private http: HttpClient,\r\n     private processHTTPMsgService: ProcessHTTPMsgService) {\r\n   }\r\n\r\n   checkJWTtoken() {\r\n    this.http.get<JWTResponse>(baseURL + 'users/checkJWTtoken')\r\n    .subscribe(res => {\r\n      console.log('JWT Token Valid: ', res);\r\n      this.sendUsername(res.user.username);\r\n      this.sendBranch(res.user.branch);\r\n      this.sendSem(res.user.semester);\r\n      this.sendId(res.user._id);\r\n    },\r\n    err => {\r\n      console.log('JWT Token invalid: ', err);\r\n      this.destroyUserCredentials();\r\n    });\r\n  }\r\n  sendId(id:any) {\r\n    this.id.next(id);\r\n  }\r\n   sendUsername(name: string) {\r\n     this.username.next(name);\r\n   }\r\n   sendBranch(branch: string) {\r\n     this.branch.next(branch);\r\n   }\r\n   sendSem(sem:string) {\r\n     this.semester.next(sem);\r\n   }\r\n\r\n   clearUsername() {\r\n     this.username.next(undefined);\r\n     this.branch.next(undefined);\r\n     this.semester.next(undefined);\r\n   }\r\n\r\n   loadUserCredentials() {\r\n     const credentials = JSON.parse(localStorage.getItem(this.tokenKey));\r\n     console.log('loadUserCredentials ', credentials);\r\n     if (credentials && credentials.username !== undefined) {\r\n       this.useCredentials(credentials);\r\n       if (this.authToken) {\r\n        this.checkJWTtoken();\r\n       }\r\n     }\r\n   }\r\n\r\n   storeUserCredentials(credentials: any) {\r\n     console.log('storeUserCredentials ', credentials);\r\n     localStorage.setItem(this.tokenKey, JSON.stringify(credentials));\r\n     this.useCredentials(credentials);\r\n   }\r\n\r\n   useCredentials(credentials: any) {\r\n     this.isAuthenticated = true;\r\n     this.sendUsername(credentials.username);\r\n     this.authToken = credentials.token;\r\n   }\r\n\r\n   destroyUserCredentials() {\r\n     this.authToken = undefined;\r\n     this.clearUsername();\r\n     this.isAuthenticated = false;\r\n     localStorage.removeItem(this.tokenKey);\r\n   }\r\n\r\n   signUp() {\r\n\r\n   }\r\n\r\n   checkanotherlogin(username:any): Observable<any> {\r\n     this.config = {\r\n       params: {\r\n          'username':username.username\r\n       }\r\n     }\r\n     console.log(username);\r\n     \r\n     return this.http.get<any>(baseURL + 'users/activeuser',this.config)\r\n     .pipe(catchError(this.processHTTPMsgService.handleError))\r\n   }\r\n\r\n   checkanotherIP(ip:any): Observable<any> {\r\n    this.config = {\r\n      params: {\r\n         'ip':ip,\r\n      }\r\n    }\r\n    return this.http.get<any>(baseURL + 'users/ip',this.config)\r\n    .pipe(catchError(this.processHTTPMsgService.handleError))\r\n  }\r\n\r\n   logIn(user: any,ip:any): Observable<any> {\r\n    \r\n     return this.http.post<AuthResponse>(baseURL + 'users/login',\r\n       {'username': user.username, 'password': user.password, 'ip':ip})\r\n       .pipe( map(res => {\r\n           this.storeUserCredentials({username: user.username, token: res.token,branch:user.branch,semester:user.semester});\r\n           return {'success': true, 'username': user.username,'branch':user.branch,'semester':user.semester };\r\n       }),\r\n        catchError(error => this.processHTTPMsgService.handleError(error)));\r\n   }\r\n\r\n   logOut() {\r\n     this.destroyUserCredentials();\r\n   }\r\n\r\n   isLoggedIn(): Boolean {\r\n     return this.isAuthenticated;\r\n   }\r\n\r\n   getUsername(): Observable<string> {\r\n     return this.username.asObservable();\r\n   }\r\n\r\n   getBranch(): Observable<string> {\r\n    return this.branch.asObservable();\r\n  }\r\n  getSemester(): Observable<string> {\r\n    return this.semester.asObservable();\r\n  }\r\n  getId(): Observable<any> {\r\n    return this.id.asObservable();\r\n  }\r\n\r\n   getToken(): string {\r\n     return this.authToken;\r\n   }\r\n   \r\n}","import { Injectable } from '@angular/core';\r\nimport { login,returnlogin } from '../shared/login';\r\n\r\nimport { catchError, delay } from 'rxjs/operators';\r\n\r\nimport { Observable, of } from'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { baseURL } from '../shared/baseurl';\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExamService {\r\n\r\n  config:any;\r\n  constructor(private http:HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n\r\n  getQuestions() : Observable<any> {\r\n    return this.http.get<any>(baseURL + 'test/getquestion')\r\n    .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n  getQuestionbyid(subject:any,id:any) :Observable<any> {\r\n    console.log(id);\r\n    // console.log(branch);\r\n    // console.log(semester);\r\n    \r\n    \r\n    this.config = {\r\n      params : {\r\n        id:id,\r\n        subject:subject\r\n      }\r\n    };\r\n    return this.http.get<any>(baseURL + 'test/exams/',this.config)\r\n    .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n  sendResult(branch:any,semester:any,marks:any,subject:any,subjectId:any) :Observable<any> {\r\n    this.config ={}\r\n    // console.log(marks);\r\n    // console.log(branch);\r\n    // console.log(semester);\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json'\r\n      })\r\n    };\r\n    this.config = {\r\n      // params : {\r\n        \r\n        branch:branch,\r\n        semester:semester,\r\n        marks:marks,\r\n        subject:subject,\r\n        subjectId:subjectId\r\n      // }\r\n    };\r\n    return this.http.post<any>(baseURL + 'test/result' , this.config , httpOptions)\r\n        .pipe(catchError(this.processHTTPMsgService.handleError))\r\n        .pipe(delay(2000));\r\n  }\r\n  getResult(branch:any,semester:any) :Observable<any> {\r\n    this.config = {\r\n      params : {\r\n        branch:branch,\r\n        semester:semester,\r\n      }\r\n    }\r\n\r\n    return this.http.get<any>(baseURL+ 'test/result' , this.config)\r\n    .pipe(catchError(this.processHTTPMsgService.handleError))\r\n  }\r\n\r\n  sendAttempted(attempt:any,subject:any,marks:any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json'\r\n      })\r\n    };\r\n    console.log(subject);\r\n    \r\n    var config ={\r\n      // params : {\r\n        attempt : attempt,\r\n        subject:subject,\r\n        marks:marks\r\n      // }\r\n    }\r\n    return this.http.post<any>(baseURL + 'test/attempt/'+subject , config , httpOptions)\r\n        .pipe(catchError(this.processHTTPMsgService.handleError))\r\n        .pipe(delay(2000));\r\n  }\r\n\r\n  setFlag(attempt:any): Observable<any> {\r\n    console.log(attempt);\r\n    \r\n    return this.http.post<any>(baseURL+ 'users/setFlag',attempt)\r\n    .pipe(catchError(this.processHTTPMsgService.handleError))\r\n  }\r\n  \r\n  setfinalFlag(attempt:any): Observable<any> {\r\n    console.log(attempt);\r\n    \r\n    return this.http.put<any>(baseURL+ 'users/setFlag/'+attempt.subjectId,attempt)\r\n    .pipe(catchError(this.processHTTPMsgService.handleError))\r\n  }\r\n\r\n  getUser(id:any): Observable<any> {\r\n    return this.http.get<any>(baseURL+ 'users/' + id)\r\n    .pipe(catchError(this.processHTTPMsgService.handleError))\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { login,returnlogin } from '../shared/login';\r\n\r\nimport { catchError, delay } from 'rxjs/operators';\r\n\r\nimport { Observable, of } from'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { baseURL } from '../shared/baseurl';\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GeneralService {\r\n\r\n  constructor(private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n\r\n  // searchservice(): Observable<any> {\r\n    public getIPAddress()  \r\n  {  \r\n    // return this.http.get('');  \r\n    fetch('https://jsonip.com', { mode: 'cors' })\r\n  .then((resp) => resp.json())\r\n  .then((ip) => {\r\n    console.log(ip.ip);\r\n    return ip.ip\r\n  });\r\n  }  \r\n  // }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { login,returnlogin } from '../shared/login';\r\n\r\nimport { catchError, delay } from 'rxjs/operators';\r\n\r\nimport { Observable, of } from'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { baseURL } from '../shared/baseurl';\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HomeService {\r\n\r\n  constructor(private http:HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n\r\n  getExam(branch:any,semester:any) : Observable<any> {\r\n    console.log(branch);\r\n    var config = {\r\n      params: {\r\n         branch:branch,\r\n         semester:semester\r\n      }\r\n    }\r\n    return this.http.get<any>(baseURL + 'admin/examall' , config)\r\n    .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n  NotifyExam(config): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json'\r\n      })\r\n    };\r\n    return this.http.post<any>(baseURL + 'test/notify' , config , httpOptions)\r\n        .pipe(catchError(this.processHTTPMsgService.handleError))\r\n        // .pipe(delay(2000));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { throwError } from 'rxjs';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProcessHTTPMsgService {\r\n\r\n  constructor() { }\r\n\r\n  public handleError(error: HttpErrorResponse | any) {\r\n    let errMsg: string;\r\n\r\n    if (error.error instanceof ErrorEvent) {\r\n      errMsg = error.error.message;\r\n    } else {\r\n      errMsg = `${error.status} - ${error.statusText || ''} ${error.error}`;\r\n    }\r\n\r\n    return throwError(errMsg);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { login,returnlogin } from '../shared/login';\r\n\r\nimport { catchError, delay } from 'rxjs/operators';\r\n\r\nimport { Observable, of } from'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { baseURL } from '../shared/baseurl';\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResultService {\r\n\r\n  constructor(private http:HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n\r\n  getUser(): Observable<any> {\r\n    return this.http.get<any>(baseURL + 'users/byId')\r\n    .pipe(catchError(this.processHTTPMsgService.handleError));\r\n\r\n  }\r\n\r\n  getAttempts(subject:any,id:any) : Observable<any> {\r\n    var config = {\r\n      params: {\r\n        id:id,\r\n        subject:subject\r\n      }\r\n    }\r\n    return this.http.get<any>(baseURL + 'test/attempt',config)\r\n      .pipe(catchError(this.processHTTPMsgService.handleError))\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Signup,returnsignup } from '../shared/signup';\r\n// import { Observable } from 'rxjs';\r\nimport { catchError, delay } from 'rxjs/operators';\r\n\r\nimport { Observable, of } from'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { baseURL } from '../shared/baseurl';\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SigninService {\r\n  config:any;\r\n  constructor(private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n\r\n\r\n  signupPost(creaditial: Signup): Observable<returnsignup> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json'\r\n      })\r\n    };\r\n    return this.http.post<returnsignup>(baseURL + 'users/signup' , creaditial , httpOptions)\r\n        .pipe(catchError(this.processHTTPMsgService.handleError))\r\n        .pipe(delay(2000));\r\n  }\r\n\r\n  signupStaff(creaditial: Signup): Observable<returnsignup> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json'\r\n      })\r\n    };\r\n    return this.http.post<returnsignup>(baseURL + 'users/staffsignup' , creaditial , httpOptions)\r\n        .pipe(catchError(this.processHTTPMsgService.handleError))\r\n        .pipe(delay(2000));\r\n  }\r\n\r\n\r\n  getusers(): Observable<any> {\r\n    return this.http.get<Object[]>(baseURL + 'users/')\r\n        .pipe(catchError(this.processHTTPMsgService.handleError))\r\n        .pipe(delay(2000));\r\n  }\r\n\r\n  out(ip:string,username:string): Observable<any> {\r\n    this.config = {\r\n      params: {\r\n         'ip':ip,\r\n         'username':username\r\n      }\r\n    }\r\n    return this.http.get<any>(baseURL + 'users/logout',this.config)\r\n        .pipe(catchError(this.processHTTPMsgService.handleError))\r\n        .pipe(delay(2000));\r\n  }\r\n}\r\n","export const baseURL = 'http://localhost:3000/';","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Signup,returnsignup } from '../shared/signup';\r\nimport { Router } from '@angular/router';\r\nimport { SigninService } from '../services/signin.service';\r\nimport {Message} from 'primeng//api';\r\nimport {MessageService} from 'primeng/api';\r\n \r\ninterface Branch {\r\n  value:String;\r\n  viewValue: String;\r\n}\r\ninterface Sem {\r\n  value:Number;\r\n  viewValue: Number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss'],\r\n  providers: [MessageService],\r\n  styles: [`\r\n        :host ::ng-deep button {\r\n            margin-right: .25em;\r\n        }\r\n\r\n        :host ::ng-deep .ui-message,\r\n        :host ::ng-deep .ui-inputtext {\r\n            margin-right: .25em;\r\n        }\r\n\r\n        :host ::ng-deep .custom-message,\r\n        :host ::ng-deep img  {\r\n            align-self: center;\r\n            font-size: 16px;\r\n            margin-left: .5em;\r\n        }\r\n    `]\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n\r\n  branchs: Branch[] = [\r\n    {value: 'CSE', viewValue: 'CSE'},\r\n    {value: 'pizza-1', viewValue: 'Pizza'},\r\n    {value: 'tacos-2', viewValue: 'Tacos'}\r\n  ];\r\n  sem: Sem[] = [\r\n    {value: 1, viewValue: 1},\r\n    {value: 2, viewValue: 2},\r\n    {value: 3, viewValue: 3}\r\n  ];\r\n\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  thirdFormGroup: FormGroup;\r\n  errMess : String;\r\n  onsubmitsignupvalues : Signup;\r\n  returnmessage : returnsignup;\r\n  temp: Signup = null;\r\n  msgs: Message[] = [];\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private messageService: MessageService,\r\n    private router: Router,\r\n    private signupservice: SigninService,\r\n    @Inject('BaseURL') public baseURL ) {\r\n    // this.createForm();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.firstFormGroup = this.fb.group({\r\n      firstname: ['', [Validators.required] ],\r\n      lastname: ['', [Validators.required] ],\r\n      emailid: ['', [Validators.required, Validators.pattern] ]\r\n    });\r\n    this.secondFormGroup = this.fb.group({\r\n      branch:['',[Validators.required]],\r\n      semester:['',[Validators.required]],\r\n      contactno: ['', [Validators.required] ],\r\n    });\r\n    this.thirdFormGroup = this.fb.group({\r\n      password:['', [Validators.required,Validators.pattern]],\r\n      renterpassword:['', [Validators.required]],\r\n      staff: Boolean\r\n    });\r\n  }\r\n\r\n  onSubmitFirst()  {\r\n    this.onsubmitsignupvalues = this.firstFormGroup.value;\r\n    console.log(this.onsubmitsignupvalues);\r\n    \r\n  }\r\n  onSubmitSecond() {\r\n    this.temp = (this.secondFormGroup.value);\r\n    Object.assign(this.onsubmitsignupvalues,this.temp);\r\n    console.log(this.onsubmitsignupvalues);\r\n\r\n  }\r\n  onSubmitThird() {\r\n    \r\n    this.temp = this.thirdFormGroup.value;\r\n    Object.assign(this.onsubmitsignupvalues,this.temp);\r\n    delete this.onsubmitsignupvalues.renterpassword;\r\n    \r\n    if(this.onsubmitsignupvalues.staff) {\r\n      this.onsubmitsignupvalues.username = this.onsubmitsignupvalues.emailid;\r\n    this.onsubmitsignupvalues.admin = false;\r\n    this.onsubmitsignupvalues.student = false;\r\n    this.onsubmitsignupvalues.staff = false;\r\n    console.log(this.onsubmitsignupvalues);\r\n    this.signupservice.signupStaff(this.onsubmitsignupvalues)\r\n    .subscribe(staff => {\r\n      console.log('abcd');\r\n      console.log(staff);\r\n      this.returnmessage = staff;\r\n      if(this.returnmessage.err==\"A staff with the given username is already registered\") {    \r\n        this.router.navigate(['/']);\r\n        }\r\n      else {\r\n          this.router.navigate(['/login']);\r\n        }\r\n    },\r\n    errmess => { this.returnmessage = null; this.errMess = <any>errmess; });\r\n    }\r\n\r\n    else {\r\n    this.onsubmitsignupvalues.username = this.onsubmitsignupvalues.emailid.slice(0,8);\r\n    this.onsubmitsignupvalues.admin = false;\r\n    this.onsubmitsignupvalues.student = true;\r\n    this.onsubmitsignupvalues.staff = false;\r\n    \r\n    console.log(this.onsubmitsignupvalues);\r\n    this.signupservice.signupPost(this.onsubmitsignupvalues)\r\n    .subscribe( dish => {\r\n      console.log('abcd');\r\n      console.log(dish);\r\n      this.returnmessage = dish;\r\n      if(this.returnmessage.err==\"A user with the given username is already registered\") {    \r\n        this.router.navigate(['/']);\r\n        }\r\n      else {\r\n        this.msgs = [];\r\n        this.msgs.push({severity:'success', summary:'Success Message', detail:dish['status']+' '+dish['msg']});\r\n          this.router.navigate(['/signup']);\r\n                  this.firstFormGroup.reset();\r\n                  this.secondFormGroup.reset();\r\n                  this.thirdFormGroup.reset();\r\n\r\n            // this.examFormDirectives.resetForm({\r\n            // });\r\n        }\r\n    },\r\n    errmess => { this.returnmessage = null; this.errMess = <any>errmess;\r\n      this.msgs = [];\r\n      // console.log(errmess);\r\n      \r\n      this.msgs.push({severity:'error', summary:'Error:', detail:'Enter Valid Email Address'});\r\n     }, );\r\n  }\r\n  }\r\n  \r\n  reset() {\r\n    this.onsubmitsignupvalues = null;\r\n    this.temp = null;\r\n  }\r\n\r\n}\r\n\r\n  // createForm() {\r\n  //   this.signupForm = this.fb.group({\r\n  //     firstname: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(25)] ],\r\n  //     lastname: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(25)] ],\r\n  //     email: ['', [Validators.required, Validators.email] ],\r\n  //     branch:[''],\r\n  //     contactno: ['0', [Validators.required, Validators.pattern] ],\r\n  //     password:[''],\r\n  //     resetpassword:['']\r\n      \r\n  //   });\r\n\r\n  //   this.firstFormGroup.valueChanges\r\n  //     .subscribe(data => this.onValueChanged(data));\r\n\r\n  //   this.onValueChanged(); // (re)set validation messages now\r\n\r\n  // }\r\n\r\n  // onValueChanged(data?: any) {\r\n  //   if (!this.feedbackForm) { return; }\r\n  //   const form = this.feedbackForm;\r\n  //   for (const field in this.formErrors) {\r\n  //     if (this.formErrors.hasOwnProperty(field)) {\r\n  //       // clear previous error message (if any)\r\n  //       this.formErrors[field] = '';\r\n  //       const control = form.get(field);\r\n  //       if (control && control.dirty && !control.valid) {\r\n  //         const messages = this.validationMessages[field];\r\n  //         for (const key in control.errors) {\r\n  //           if (control.errors.hasOwnProperty(key)) {\r\n  //             this.formErrors[field] += messages[key] + ' ';\r\n  //           }\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n","<mat-horizontal-stepper labelPosition=\"bottom\" #stepper>\r\n    <mat-step [stepControl]=\"firstFormGroup\">\r\n      <form [formGroup]=\"firstFormGroup\" (ngSubmit)=\"onSubmitFirst()\">\r\n        <ng-template matStepLabel matStepperIcon=\"done\">Fill out your name and Email </ng-template>\r\n        <mat-form-field hintLabel=\"Max 15 characters\" appearance=\"fill\">\r\n          <mat-label>First Name</mat-label>\r\n          <input matInput #input maxlength=\"15\" placeholder=\"Enter First name\" formControlName=\"firstname\" type=\"text\" required>\r\n          <mat-hint align=\"end\">{{input.value?.length || 0}}/15</mat-hint>\r\n        </mat-form-field>\r\n        <mat-form-field hintLabel=\"Max 15 characters\" appearance=\"fill\">\r\n          <mat-label>Last Name</mat-label>\r\n          <input matInput #input1 maxlength=\"15\" placeholder=\"Enter Last name\" formControlName=\"lastname\" required>\r\n          <mat-hint align=\"end\">{{input1.value?.length || 0}}/15</mat-hint>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n          <mat-label>Email-Id</mat-label>\r\n          <input matInput placeholder=\"Enter Email Address\" formControlName=\"emailid\" pattern=\"(^.+.+.+.+.+\\b(nirmauni.ac.in)\\b)\" required>\r\n        </mat-form-field>\r\n        <div>\r\n          <button mat-button matStepperNext [disabled]=\"firstFormGroup.invalid\">Next</button>\r\n        </div>\r\n      </form>\r\n    </mat-step>\r\n    <mat-step [stepControl]=\"secondFormGroup\">\r\n      <form [formGroup]=\"secondFormGroup\" (ngSubmit)=\"onSubmitSecond()\">\r\n        <ng-template matStepLabel>Fill out the details</ng-template>\r\n        <mat-form-field>\r\n          <mat-label>Branch</mat-label>\r\n          <mat-select formControlName=\"branch\">\r\n            <mat-option *ngFor=\"let branch of branchs\" [value]=\"branch.value\" required>\r\n              {{branch.viewValue}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Semester</mat-label>\r\n          <mat-select formControlName=\"semester\">\r\n            <mat-option *ngFor=\"let branch of branchs\" [value]=\"branch.value\" required>\r\n              {{branch.viewValue}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field hintLabel=\"10 digits only\">\r\n            <mat-label>Mobile-No</mat-label>\r\n            <input matInput #input2 minlength=\"10\" maxlength=\"10\" formControlName=\"contactno\" placeholder=\"Enter Mobile number\" pattern=\"[6-9][0-9]*\" required>\r\n            <mat-hint align=\"end\">{{input2.value?.length || 0}}/10</mat-hint>\r\n        </mat-form-field>\r\n        \r\n        <div>\r\n          <button mat-button matStepperPrevious>Back</button>\r\n          <button mat-button matStepperNext [disabled]=\"secondFormGroup.invalid\">Next</button>\r\n        </div>\r\n      </form>\r\n    </mat-step>\r\n    <mat-step [stepControl]=\"thirdFormGroup\">\r\n      \r\n        <form [formGroup]=\"thirdFormGroup\" (ngSubmit)=\"onSubmitThird()\">\r\n            <ng-template matStepLabel>Enter password and re-enter password</ng-template>\r\n            <mat-form-field hintLabel=\"Minimimun length 8 digits\">\r\n              <mat-label>Password</mat-label>\r\n              <input matInput pPassword ui-password-info name=\"password\" #password minlength=\"8\" type=\"password\" formControlName=\"password\" placeholder=\"Enter Password\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" required >\r\n              \r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Re-Enter Password</mat-label>\r\n                <input matInput #input4 minlength=\"8\" type=\"password\" formControlName=\"renterpassword\" placeholder=\"Re-Enter Password\" pattern=\"{{ password.value }}\" >\r\n              </mat-form-field>\r\n              {{ thirdFormGroup.value.password }}\r\n\r\n            <div>\r\n              <button mat-button matStepperPrevious>Back</button>\r\n              <button *ngIf =\"temp&&onsubmitsignupvalues\" mat-button matStepperNext [disabled]=\"thirdFormGroup.invalid\">Confirm</button>\r\n              <button mat-button (click)=\"stepper.reset()\" (click)=\"reset()\">Reset</button>\r\n            </div>\r\n            <mat-slide-toggle formControlName=\"staff\">Staff-Member? Please slide</mat-slide-toggle>\r\n          </form>\r\n          <div> Some important instuctions:\r\n            <ul>\r\n              <li>If two password doesn't match then next button will remain disappered</li>\r\n              <li>pattern must be follow as given below</li>\r\n              <ul>\r\n              <li>Minimimun Length of password is 8.</li>\r\n              <li>Password must contain one Uppercase, one integer and one lowercase characters.</li>\r\n            </ul>\r\n          </ul>\r\n           \r\n          </div>\r\n    </mat-step>\r\n    <!-- <mat-step *ngIf =\"temp&&temp1&&temp2\">\r\n      <ng-template matStepLabel>You're Done. Thank You for Sign-In</ng-template>\r\n      <p>We will try to give you best service.</p>\r\n      <div>\r\n        <button mat-button matStepperPrevious>Back</button>\r\n        <button mat-button (click)=\"stepper.reset()\" (click)=\"reset()\">Reset</button>\r\n         <button mat-button (click)=\"Confirm()\">Confirm </button> -->\r\n         <!-- <button mat-button routerLink=\"/home\">Home</button> --> -->\r\n      <!-- </div> -->\r\n    <!-- </mat-step> --> -->\r\n  </mat-horizontal-stepper>\r\n\r\n  <p-messages [(value)]=\"msgs\"></p-messages>\r\n  <!-- <p-messages -->\r\n","\r\nimport { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { Location, LocationStrategy, PathLocationStrategy, PopStateEvent } from '@angular/common';\r\nimport 'rxjs/add/operator/filter';\r\n// import { NavbarComponent } from '../../shared/navbar/navbar.component';\r\nimport { Router, NavigationEnd, NavigationStart } from '@angular/router';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n// import PerfectScrollbar from 'perfect-scrollbar';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-staff',\r\n  templateUrl: './staff.component.html',\r\n  styleUrls: ['./staff.component.scss']\r\n})\r\nexport class StaffComponent implements OnInit {\r\n\r\n\r\n  private _router: Subscription;\r\n  private lastPoppedUrl: string;\r\n  private yScrollStack: number[] = [];\r\n\r\n  constructor( public location: Location, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    console.log(this.router)\r\n      const isWindows = navigator.platform.indexOf('Win') > -1 ? true : false;\r\n\r\n      if (isWindows) {\r\n          // if we are on windows OS we activate the perfectScrollbar function\r\n\r\n          document.getElementsByTagName('body')[0].classList.add('perfect-scrollbar-on');\r\n      } else {\r\n          document.getElementsByTagName('body')[0].classList.remove('perfect-scrollbar-off');\r\n      }\r\n      const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\r\n      const elemSidebar = <HTMLElement>document.querySelector('.sidebar .sidebar-wrapper');\r\n\r\n      this.location.subscribe((ev:PopStateEvent) => {\r\n          this.lastPoppedUrl = ev.url;\r\n      });\r\n       this.router.events.subscribe((event:any) => {\r\n          if (event instanceof NavigationStart) {\r\n             if (event.url != this.lastPoppedUrl)\r\n                 this.yScrollStack.push(window.scrollY);\r\n         } else if (event instanceof NavigationEnd) {\r\n             if (event.url == this.lastPoppedUrl) {\r\n                 this.lastPoppedUrl = undefined;\r\n                 window.scrollTo(0, this.yScrollStack.pop());\r\n             } else\r\n                 window.scrollTo(0, 0);\r\n         }\r\n      });\r\n      this._router = this.router.events.filter(event => event instanceof NavigationEnd).subscribe((event: NavigationEnd) => {\r\n           elemMainPanel.scrollTop = 0;\r\n           elemSidebar.scrollTop = 0;\r\n      });\r\n      if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n          // let ps = new PerfectScrollbar(elemMainPanel);\r\n          // ps = new PerfectScrollbar(elemSidebar);\r\n      }\r\n  }\r\n  ngAfterViewInit() {\r\n      this.runOnRouteChange();\r\n  }\r\n  isMap(path){\r\n      var titlee = this.location.prepareExternalUrl(this.location.path());\r\n      titlee = titlee.slice( 1 );\r\n      if(path == titlee){\r\n          return false;\r\n      }\r\n      else {\r\n          return true;\r\n      }\r\n  }\r\n  runOnRouteChange(): void {\r\n    if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n      const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\r\n      // const ps = new PerfectScrollbar(elemMainPanel);\r\n      // ps.update();\r\n    }\r\n  }\r\n  isMac(): boolean {\r\n      let bool = false;\r\n      if (navigator.platform.toUpperCase().indexOf('MAC') >= 0 || navigator.platform.toUpperCase().indexOf('IPAD') >= 0) {\r\n          bool = true;\r\n      }\r\n      return bool;\r\n  }\r\n\r\n}\r\n","<p>staff works!</p>\r\n<router-outlet></router-outlet>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}