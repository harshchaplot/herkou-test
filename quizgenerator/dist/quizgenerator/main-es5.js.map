{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/app-routing/app-routing.module.ts","webpack:///src/app/app-routing/routes.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/attempt/attempt.component.ts","webpack:///src/app/attempt/attempt.component.html","webpack:///src/app/exam/exam.component.ts","webpack:///src/app/exam/exam.component.html","webpack:///src/app/header-component/header-component.component.ts","webpack:///src/app/header-component/header-component.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/result/result.component.ts","webpack:///src/app/result/result.component.html","webpack:///src/app/services/admin.service.ts","webpack:///src/app/services/attempt.service.ts","webpack:///src/app/services/auth-guard.service.ts","webpack:///src/app/services/auth.interceptor.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/exam.service.ts","webpack:///src/app/services/general.service.ts","webpack:///src/app/services/home.service.ts","webpack:///src/app/services/process-httpmsg.service.ts","webpack:///src/app/services/result.service.ts","webpack:///src/app/services/signin.service.ts","webpack:///src/app/shared/baseurl.ts","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/app/staff/staff.component.ts","webpack:///src/app/staff/staff.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminComponent","location","route","fb","examschedule","baseURL","branchs","value","viewValue","sem","formErrors","validationMessages","createForm","examForm","group","subject","required","time","date","Date","branch","semester","valueChanges","subscribe","data","onValueChanged","form","field","hasOwnProperty","control","get","dirty","valid","messages","key","errors","examData","console","log","scheduleExam","exam","reset","examFormDirectives","resetForm","onSubmit","selector","templateUrl","styleUrls","AppRoutingModule","forRoot","declarations","imports","routes","path","component","redirectTo","pathMatch","canActivate","AppComponent","title","AppModule","provide","useValue","useClass","multi","preserveScrollPosition","prefix","storageType","providers","bootstrap","AttemptComponent","attemptservice","attempts","params","pipe","getAttempts","resp","errmess","errMess","push","severity","summary","detail","ExamComponent","examservice","confirmationService","authService","router","adminservice","datePipe","_localStorageService","message","temp","answer","temp1","items","temp3","mapping","undefined","username","questionnumber","answerArray","answers","timeLeft","today","now","flag","flag1","questionflag","objectKeys","Object","mycolor","radius","attemptedFlag","msgs","testing","tempExam","halfcomplete","setClickedRow","index","selectedItem","selectedRow","transform","loadUserCredentials","subscription","getUsername","name","subscription1","getBranch","subscription2","getSemester","subscription3","getId","confirm","header","icon","accept","i","length","marks","sendAttempted","examId","clearInterval","interval","sendResult","error","setfinalFlag","subjectId","completionFlag","navigate","reject","seasons","question","arr","exammarks","r","Math","floor","random","indexOf","quecount","clearAll","set","toString","sort","a","b","hasPrevNext","selectedanswer","parseInt","getQuestion","ObjectLength","currentindex","prev","next","last","getQuestionbyid","option1","option2","option3","option4","shuffle","ans","array","minleft","minute","setInterval","slice","season","date2","searchExam","tests","exams","duration","date1","time1","time2","msg","getUser","setFlag","event","car","selectedCar","displayDialog","preventDefault","styles","HeaderComponentComponent","singupservice","adminservices","fetch","mode","json","ip","ipAddress","searchForm","searchquery","unsubscribe","out","res","logOut","getusers","res1","users","HomeComponent","homeservice","events","getexam","cols","getExam","allexams","colsforall","NotifyExam","onDialogHide","opacity","animations","LoginComponent","queryParams","firstFormGroup","emailid","pattern","secondFormGroup","password","onsubmitsignupvalues","assign","checkanotherlogin","checkanotherIP","logIn","navigateByUrl","onSubmitFirst","onSubmitSecond","ResultComponent","resultservice","subjects","user","UserbyId","attempted","Set","AdminService","http","processHTTPMsgService","httpOptions","headers","post","handleError","config","update","put","providedIn","AttemptService","AuthGuardService","state","isLoggedIn","url","AuthInterceptor","inj","authToken","getToken","authReq","clone","handle","UnauthorizedInterceptor","err","status","checkJWTtoken","AuthService","tokenKey","isAuthenticated","sendUsername","sendBranch","sendSem","sendId","_id","destroyUserCredentials","credentials","JSON","parse","localStorage","getItem","useCredentials","setItem","stringify","token","clearUsername","removeItem","storeUserCredentials","asObservable","ExamService","attempt","GeneralService","HomeService","ProcessHTTPMsgService","errMsg","ErrorEvent","statusText","ResultService","SigninService","creaditial","SignupComponent","messageService","signupservice","firstname","lastname","contactno","thirdFormGroup","renterpassword","staff","Boolean","admin","student","signupStaff","returnmessage","signupPost","dish","onSubmitThird","StaffComponent","yScrollStack","isWindows","navigator","platform","document","getElementsByTagName","classList","add","remove","elemMainPanel","querySelector","elemSidebar","ev","lastPoppedUrl","window","scrollY","scrollTo","pop","_router","filter","scrollTop","matchMedia","matches","isMac","runOnRouteChange","titlee","prepareExternalUrl","bool","toUpperCase","environment","production","bootstrapModule"],"mappings":"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A;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAA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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { FormBuilder,FormGroup,Validators } from '@angular/forms';\r\nimport { Router,Params, ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { Exam } from '../shared/admin';\r\nimport { AdminService } from '../services/admin.service';\r\n\r\ninterface Branch {\r\n  value:String;\r\n  viewValue: String;\r\n}\r\ninterface Sem {\r\n  value:Number;\r\n  viewValue: Number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  branchs: Branch[] = [\r\n    {value: 'CSE', viewValue: 'CSE'},\r\n    {value: 'pizza-1', viewValue: 'Pizza'},\r\n    {value: 'tacos-2', viewValue: 'Tacos'}\r\n  ];\r\n  sem: Sem[] = [\r\n    {value: 1, viewValue: 1},\r\n    {value: 2, viewValue: 2},\r\n    {value: 3, viewValue: 3}\r\n  ];\r\n  examForm : FormGroup;\r\n  examData : Exam;\r\n  formErrors = {\r\n    'Subject': '',\r\n    'Brach': '',\r\n  };\r\n\r\n  validationMessages = {\r\n    'Subject': {\r\n      'required':      'First Name is required.',\r\n      'minlength':     'First Name must be at least 2 characters long.',\r\n      'maxlength':     'FirstName cannot be more than 25 characters long.'\r\n    },\r\n    'Branch': {\r\n      'required':      'Comment is required.',\r\n      'minlength':     'Comment must be at least 2 characters long.',\r\n      'maxlength':     'Comment cannot be more than 25 characters long.'\r\n    },\r\n    \r\n  };\r\n\r\n  @ViewChild('fform') examFormDirectives;\r\n\r\n  constructor(\r\n    private location : Location,\r\n    private route : ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private examschedule : AdminService,\r\n    @Inject('BaseURL') public baseURL)\r\n    {  \r\n       this.createForm();\r\n    }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  createForm() {\r\n    this.examForm = this.fb.group({\r\n      subject: ['', [Validators.required]],\r\n      time: [, [Validators.required]],\r\n      date: Date(), \r\n      branch:[''],\r\n      semester:['']\r\n    });\r\n\r\n    this.examForm.valueChanges\r\n      .subscribe(data => this.onValueChanged(data));\r\n\r\n    this.onValueChanged(); // (re)set validation messages now\r\n\r\n  }\r\n\r\n  onValueChanged(data?: any) {\r\n    if (!this.examForm) { return; }\r\n    const form = this.examForm;\r\n    for (const field in this.formErrors) {\r\n      if (this.formErrors.hasOwnProperty(field)) {\r\n        // clear previous error message (if any)\r\n        this.formErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && control.dirty && !control.valid) {\r\n          const messages = this.validationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.formErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  onSubmit() {\r\n    this.examData = this.examForm.value;\r\n    console.log(this.examData);\r\n    this.examschedule.scheduleExam(this.examData)\r\n      .subscribe((exam) => {this.examData=exam})\r\n    this.examForm.reset();\r\n    this.examFormDirectives.resetForm({\r\n    });\r\n  }\r\n}\r\n","<form novalidate [formGroup]=\"examForm\" #fform=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n    <p>\r\n      <mat-form-field>\r\n        <input matInput #input formControlName=\"subject\" placeholder=\"Enter Subject name\" type=\"text\" required>\r\n        <mat-hint align=\"end\">{{input.value?.length || 0}}</mat-hint>\r\n      </mat-form-field>\r\n    </p>\r\n    <p>\r\n        <mat-form-field>\r\n            <mat-label>Branch</mat-label>\r\n            <mat-select formControlName=\"branch\">\r\n              <mat-option *ngFor=\"let branch of branchs\" [value]=\"branch.value\" required>\r\n                {{branch.viewValue}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n    </p>\r\n    <p>\r\n          <mat-form-field>\r\n            <mat-label>Semester</mat-label>\r\n            <mat-select formControlName=\"semester\">\r\n              <mat-option *ngFor=\"let branch of sem\" [value]=\"branch.value\" required>\r\n                {{branch.viewValue}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n    </p>\r\n    <p>\r\n        <mat-form-field>\r\n            <mat-label>Choose a date</mat-label>\r\n            <input matInput formControlName=\"date\" [matDatepicker]=\"picker\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n        </mat-form-field>\r\n    </p>\r\n    <p>\r\n        <mat-form-field>\r\n            <mat-label>Pick Time</mat-label>\r\n            <input matInput formControlName=\"time\" placeholder=\"Enter Time With AM OR PM\" type=\"time\" required>\r\n        </mat-form-field>\r\n    </p>\r\n\r\n    <button type=\"submit\" mat-button class=\"background-primary text-floral-white\" [disabled]=\"examForm.invalid\">Submit</button>\r\n</form>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { routes } from './routes';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [ RouterModule ],\n})\nexport class AppRoutingModule { }\n","import { Routes } from '@angular/router';\r\nimport { AdminComponent } from '../admin/admin.component';\r\nimport { HomeComponent } from '../home/home.component';\r\n// import { ContactComponent } from '../contact/contact.component';\r\nimport { ExamComponent } from '../exam/exam.component';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { ResultComponent} from '../result/result.component'\r\nimport { SignupComponent} from '../signup/signup.component';\r\nimport {StaffComponent} from '../staff/staff.component';\r\nimport {StaffModule} from '../staff/staff.module'\r\nimport {AuthGuardService} from '../services/auth-guard.service';\r\nimport {AttemptComponent} from '../attempt/attempt.component';\r\nexport const routes: Routes = [\r\n    {path: 'signup', component:SignupComponent},\r\n    {path: 'login', component: LoginComponent},\r\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n  {path: 'home',canActivate: [AuthGuardService], component: HomeComponent},\r\n  { path: 'admin',component: AdminComponent },\r\n  { path: 'exam',canActivate: [AuthGuardService],component: ExamComponent},\r\n  { path: 'result',canActivate: [AuthGuardService], component:ResultComponent },\r\n  {path: 'exam/:id', component:AttemptComponent},\r\n  // {\r\n  //   path: '',\r\n  //   redirectTo: 'staffhome',\r\n  //   pathMatch: 'full',\r\n  // }, {\r\n  //   {\r\n  //   path: '',\r\n  //   canActivate: [AuthGuardService],\r\n  //   component: StaffComponent,\r\n  //   children: [\r\n  //       {\r\n  //     path: '',\r\n  //     loadChildren: '../staff/staff.module#StaffModule'\r\n  // }]}\r\n];\r\n\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'quizgenerator';\n}\n","<app-header-component></app-header-component>\r\n<router-outlet></router-outlet>","// Components\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing/app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\n\r\n// Services\r\nimport { SigninService } from './services/signin.service';\r\nimport { ProcessHTTPMsgService } from './services/process-httpmsg.service';\r\nimport { AuthService } from './services/auth.service';\r\n// Shared\r\nimport { baseURL } from './shared/baseurl';\r\n\r\nimport { HttpModule } from '@angular/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\r\n\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport {  MatButtonModule } from '@angular/material/button';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatLineModule } from '@angular/material/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet'\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\nimport {TableModule} from 'primeng/table';\r\n\r\nimport 'hammerjs';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nimport { AuthInterceptor,UnauthorizedInterceptor } from './services/auth.interceptor';\r\nimport { HeaderComponentComponent } from './header-component/header-component.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { ExamComponent } from './exam/exam.component';\r\n\r\nimport { DatePipe } from '@angular/common';\r\n\r\nimport {AtomSpinnerModule} from 'angular-epic-spinners';\r\nimport {HalfCircleSpinnerModule} from 'angular-epic-spinners';\r\n\r\nimport {SpringSpinnerModule} from 'angular-epic-spinners';\r\nimport {enableProdMode} from '@angular/core';\r\n\r\nimport { SemipolarSpinnerModule } from \"angular-epic-spinners\";\r\nimport { ResultComponent } from './result/result.component';\r\nimport { StaffComponent } from './staff/staff.component';\r\nimport { StaffHomeComponent } from './staff-home/staff-home.component';\r\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\r\nimport {MessagesModule} from 'primeng/messages';\r\nimport {ProgressBarModule} from 'primeng/progressbar';\r\n// import {ConfirmationService} from 'primeng/api';\r\n// import {AccordionModule} from 'primeng/accordion';     //accordion and accordion tab\r\n// import {MenuItem} from 'primeng/api';   \r\nimport {PasswordModule} from 'primeng/password';\r\nimport {CardModule} from 'primeng/card';\r\nimport { AttemptComponent } from './attempt/attempt.component';\r\nimport {DataViewModule} from 'primeng/dataview';\r\n// import {DataViewDemo} from './dataviewdemo';\r\n// import {DataViewDemoRoutingModule} from './dataviewdemo-routing.module';\r\n// import {DataViewModule} from 'primeng/dataview';\r\nimport {PanelModule} from 'primeng/panel';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {DialogModule} from 'primeng/dialog';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport {TabViewModule} from 'primeng/tabview';\r\n\r\n// import {FullCalendarDemo} from './fullcalendardemo';\r\n// import {FullCalendarDemoRoutingModule} from './fullcalendardemo-routing.module';\r\nimport {FullCalendarModule} from 'primeng/fullcalendar';\r\n// import {DialogModule} from 'primeng/dialog';\r\n// import {InputTextModule} from 'primeng/inputtext';\r\nimport {CalendarModule} from 'primeng/calendar';\r\nimport {CheckboxModule} from 'primeng/checkbox';\r\n// import {ButtonModule} from 'primeng/button';\r\n// import {TabViewModule} from 'primeng/tabview';\r\nimport {CodeHighlighterModule} from 'primeng/codehighlighter';\r\nimport {SidebarModule} from 'primeng/sidebar';\r\nimport {ToggleButtonModule} from 'primeng/togglebutton';\r\nimport { BackButtonDisableModule } from 'angular-disable-browser-back-button';\r\n// import {MessagesModule} from 'primeng/messages';\r\nimport {MessageModule} from 'primeng/message';\r\nimport { LocalStorageModule } from 'angular-2-local-storage';\r\n// import {CalendarModule} from 'primeng/calendar';\r\n\r\nenableProdMode();\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SignupComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    HeaderComponentComponent,\r\n    AdminComponent,\r\n    ExamComponent,\r\n    ResultComponent,\r\n    StaffComponent,\r\n    AttemptComponent,\r\n    \r\n  ],\r\n  imports: [\r\n    A11yModule,ClipboardModule,DragDropModule,PortalModule,ScrollingModule,CdkStepperModule,CdkTableModule,CdkTreeModule,MatBottomSheetModule,MatButtonToggleModule,MatChipsModule,\r\n    MatDatepickerModule,MatDividerModule,MatExpansionModule,MatIconModule,MatMenuModule,MatNativeDateModule,MatRippleModule,MatPaginatorModule,MatProgressBarModule,MatRadioModule,\r\n    MatSidenavModule,MatSnackBarModule,MatSortModule,MatTableModule,MatTabsModule,MatTooltipModule,MatTreeModule,ConfirmDialogModule,MessagesModule,PasswordModule,CardModule,TableModule,HalfCircleSpinnerModule,\r\n    ProgressBarModule,ToggleButtonModule,BackButtonDisableModule.forRoot({\r\n      preserveScrollPosition: true\r\n    }),MessagesModule,MessageModule,LocalStorageModule.forRoot({\r\n      prefix: 'my-app',\r\n      storageType: 'localStorage'\r\n  }),CalendarModule,\r\n    DataViewModule,PanelModule,InputTextModule,ButtonModule,DialogModule,DropdownModule,TableModule,TabViewModule,FullCalendarModule,CalendarModule,CheckboxModule,CodeHighlighterModule,SidebarModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCheckboxModule,\r\n    FormsModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    ReactiveFormsModule,\r\n    MatProgressSpinnerModule,\r\n    MatSliderModule,\r\n    MatStepperModule,\r\n    MatButtonModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatDialogModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    BrowserAnimationsModule,\r\n    MatLineModule,\r\n    FlexLayoutModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    SemipolarSpinnerModule,\r\n    AtomSpinnerModule,\r\n    SpringSpinnerModule,\r\n\r\n    \r\n  ],\r\n  providers: [SigninService,,\r\n    DatePipe,\r\n  ProcessHTTPMsgService,\r\n  AuthService,\r\n  {provide: 'BaseURL', useValue: baseURL},\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthInterceptor,\r\n    multi: true\r\n  },\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: UnauthorizedInterceptor,\r\n    multi: true\r\n  }\r\n],\r\n\r\n\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Params, ActivatedRoute } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { Location } from '@angular/common';\nimport {AttemptService} from '../services/attempt.service';\n@Component({\n  selector: 'app-attempt',\n  templateUrl: './attempt.component.html',\n  styleUrls: ['./attempt.component.scss']\n})\nexport class AttemptComponent implements OnInit {\n\n  attempts=[];\n  errMess:any;\n  constructor(private route: ActivatedRoute,\n    private attemptservice:AttemptService) { }\n\n  ngOnInit(): void {\n\n    this.route.params.pipe(switchMap((params: Params) => { return this.attemptservice.getAttempts(params['id'])}))\n    .subscribe((resp) => {\n      console.log(resp);\n      this.attempts = resp;\n      \n    },errmess => {\n      console.log(errmess)\n      this.errMess = []\n      this.errMess.push({severity:'error', summary:'Error:', detail:'You Have Not Verified Your Email Address'});\n      console.log(this.errMess);\n      \n    })\n  }\n\n}\n","\n<div >\n    <table *ngFor=\"let i of attempts\" class=\"table table-hover table-striped\">\n        <thead>\n            \n            <tr>\n                <th><b>{{i['user']['username']}}</b></th>\n                <th>\n                    {{i['subject']['date'] | date}}\n                </th>\n                <th>\n                    <p class=\"card-text\">Marks\n                        <b>{{i['marks']}}/{{i['subject']['marks']}}</b></p>\n                </th>\n            </tr>\n            \n            <tr>\n                <th>Question Number</th>\n                <th>Answer Attempted</th>\n                <th>Check</th>\n                <th>Correct Answer</th>\n            \n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let a of i['attempt'] | keyvalue\">\n                <td>{{a.key}}</td>\n                <td>{{a.value[0]}}</td>\n                <td>{{a.value[1]}}</td>\n                <td>{{a.value[2]}}</td>\n            \n            </tr>\n        </tbody>\n    </table>\n</div>  \n<div *ngIf=\"attempts.length==0 && !errMess\">\n    No Attempt for this Exam\n</div>\n<p-messages [(value)]=\"errMess\"></p-messages>\n","import { Component, OnInit } from '@angular/core';\nimport { ExamService } from '../services/exam.service';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport {Router } from '@angular/router';\nimport { timer } from 'rxjs';\nimport { FormBuilder,FormGroup,Validators, FormGroupDirective,FormControl } from '@angular/forms';\nimport { AdminService } from '../services/admin.service';\nimport { DatePipe } from '@angular/common';\nimport {HeaderComponentComponent} from '../header-component/header-component.component';\nimport { Injectable } from '@angular/core';\nimport {  CanActivate } from '@angular/router';\n// import { AuthService } from './auth.service';\nimport {ConfirmationService} from 'primeng/api';\nimport {Message} from 'primeng/api';\nimport { LocalStorageService } from 'angular-2-local-storage';\n\nexport interface Car {\n\tsubject;\n\tdate;\n\ttime;\n\tmarks;\n\t_id;\n  }\n\n@Component({\n\tselector: 'app-exam',\n\ttemplateUrl: './exam.component.html',\n\tstyleUrls: ['./exam.component.scss'],\n\tproviders: [ConfirmationService],\n\tstyles: [`      \n        .filter-container {\n            text-align: center;\n        }\n        .car-details {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            padding: 2em;\n            border-bottom: 1px solid #d9dad9;\n        }\n        .car-details > div {\n            display: flex;\n            align-items: center;\n        }\n        .car-details > div img {\n            margin-right: 14px;\n        }\n        .car-detail {\n            padding: 0 1em 1em 1em;\n            border-bottom: 1px solid #d9dad9;\n            margin: 1em;\n        }\n        .ui-panel-content {\n            padding: 1em;\n        }\n        .dark-theme :host ::ng-deep .car-details,\n        .dark-theme :host ::ng-deep .car-detail {\n            border-bottom: 1px solid #191919;\n        }\n        \n        @media (max-width: 1024px) {\n            .car-details img {\n                 width: 75px;\n            }\n            .filter-container {\n                text-align: left;\n            }\n        }\n    `]\n})\nexport class ExamComponent implements OnInit {\n\tpublic message = 'Hola Mundo!';\n\tarr:any[];\n\ttemp = [];\n\tid:any;\n\tanswer = [];\n\ttemp1={};\n\titems = []\n\tprev:any;\n\tnext:any;\n\ttemp3 = [];\n\tmapping:any = {};\n\tquecount: any;\n\tsubscription: Subscription;\n\tsubscription1: Subscription;\n\tsubscription2: Subscription;\n\tsubscription3: Subscription;\n\tbranch: string = undefined;\n\tsemester: string = undefined;\n\tusername:String = undefined;\n\tquestion:any;\n\tquestionnumber:number=null ;\n\tselectedanswer: string;\n\tseasons:string[];\n\tanswerArray = [];\n\tcurrentindex:any;\n\tselectedRow : any;\n\tsetClickedRow : Function;\n\tselectedItem : any;\n\tanswers =[];\n\tlast:any;\n\ttimeLeft: number = 60;\n\tminute: number;\n  \tinterval:any;\n\tmarks:any;\n\terrMess:any;\n\texams:any;\n\tsubject:any;\n\texammarks:number;\n\ttoday = Date.now()\n\tflag:Boolean=false;\n\tflag1:Boolean=false;\n\tquestionflag={};\n\tobjectKeys = Object.keys;\n\tmycolor = 'red';\n\tradius = 3;\n\tfinal ={};\n\texamId:any;\n\tattemptedFlag:Boolean=false;\n\tmsg:String;\n\t// msgs:any;\n\tmsgs: Message[] = [];\n\ttesting={};\n\ttempExam=[];\n\tselectedCar: Car;\n  displayDialog: boolean;\n  visibleSidebar5;\n  documents:any;\n  halfcomplete:Boolean=false;\n\n\tconstructor(private examservice: ExamService,\n\t\tprivate confirmationService: ConfirmationService,\n\t\tprivate authService: AuthService,\n\t\tprivate fb: FormBuilder,\n\t\tprivate router:Router,\n\t\tprivate adminservice:AdminService,\n\t\tprivate datePipe: DatePipe,\n\t\tprivate _localStorageService: LocalStorageService) { \n\t\t\tthis.setClickedRow = function(index){\n\t\t\t\tif(index!=\"empty\"){\n\t\t\t\tthis.selectedItem = index;\n\t\t\t\tthis.selectedRow[index]=this.answers;\n\t\t\t\t}  \n\t\t\t}\t\n\t\t}\n\n\tngOnInit(): void {\n\t\t// console.log(this._localStorageService.getStorageType())\n\t\tvar date = new Date();\n   console.log(this.datePipe.transform(date,\"yyyy-MM-dd\"));\n\t\tthis.authService.loadUserCredentials();\n\t\tthis.subscription = this.authService.getUsername()\n\t\t\t\t.subscribe(name => { this.username = name; });\n\t\tthis.subscription1 = this.authService.getBranch()\n\t\t\t\t.subscribe(name => { this.branch = name; });\n\t\tthis.subscription2 = this.authService.getSemester()\n\t\t\t\t.subscribe(name => { this.semester = name; });\t\n\t\tthis.subscription3 = this.authService.getId()\n\t\t\t\t.subscribe(id => {this.id = id});\n\n\t}\n\tconfirm() {\n        this.confirmationService.confirm({\n            message: 'Are you sure that you want to proceed?',\n            header: 'Confirmation',\n            icon: 'pi pi-exclamation-triangle',\n            accept: () => {\n\t\t\t\tconsole.log(this.answerArray);\n\t\t\t\tconsole.log(this.answers)\n\t\t\t\t\n\t\t\t\tfor(var i=1;i<this.answers.length;i++) {\n\t\t\t\t\tthis.answer=[]\n\t\t\t\t\tif(this.answers[i]==this.answerArray[i]) {\n\t\t\t\t\t\tthis.marks+=1\n\t\t\t\t\t\tthis.answer.push(this.answers[i])\n\t\t\t\t\t\tthis.answer.push('True')\n\t\t\t\t\t\tthis.answer.push(this.answerArray[i])\n\t\t\n\t\t\t\t\t\tthis.final[this.items[i-1][1]] = this.answer\n\t\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif(this.answers[i]!=null) {\n\t\t\t\t\t\t\tthis.answer.push(this.answers[i])\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.answer.push('NA')\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.answer.push('False')\n\t\t\t\t\t\tthis.answer.push(this.answerArray[i])\n\t\t\t\t\t\tthis.final[this.items[i-1][1]] = this.answer\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\tconsole.log(this.final);\n\t\t\t\t\t// this.final['subject'] = (this.subject)\n\t\t\t\tthis.examservice.sendAttempted(this.final,this.examId,this.marks)\n\t\t\t\t.subscribe((resp) => {\n\t\t\t\t\tconsole.log(resp);\n\t\t\n\t\t\t\t})\n\t\t\t\tclearInterval(this.interval)\n\t\t\t\tconsole.log(this.marks);\n\t\t\t\tthis.examservice.sendResult(this.branch,this.semester,this.marks,this.subject,this.examId)\n\t\t\t\t\t.subscribe((name) => {console.log('Result Entered successfully',name)},\n\t\t\t\t\terror => {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\tthis.errMess = error;\n\t\t\t\t\t\tconsole.log(this.errMess);\n\t\t\t\t\t  }\n\t\t\t\t\t  );\n\t\t\t\t\n\t\t\t\t\t  this.examservice.setfinalFlag({subject:this.subject,subjectId:this.examId,completionFlag:true})\n\t\t\t\t\t  .subscribe((resp) => {\n\t\t\t\t\t\t  console.log(resp);\n\t\t\t\t\t  })\n\t\t\t\t\n\t\t\t\tthis.router.navigate(['/home']);\n            },\n            reject: () => {\n                this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];\n            }\n        });\n    }\n\n\tsearchQuestions() {\n\t\t\n\t\tthis.marks=0;\n\t\tthis.selectedRow=[];\n\t\tthis.seasons=[];\n\t\tthis.answerArray=[];\n\t\tthis.answers=[];\n\t\tthis.temp3=[]\n\t\tthis.questionnumber=0;\n\t\tthis.question=null;\n\t\tthis.arr = [];\n\t\tthis.flag1=true\n\t\tfor (var i=0; i<this.exammarks;i++) {\n\t\t\tthis.answerArray[i+1]='NA'\n\t\t\t// this.answers[i+1] = null\n\t\t}\n\t\tconsole.log(this.answerArray)\n\t\tconsole.log(this.answers);\n\t\twhile(this.arr.length < this.exammarks){\n\t\t\tvar r = Math.floor(Math.random() * 14) ;\n\t\t\tif(this.arr.indexOf(r) === -1) this.arr.push(r);\n\t\t\tthis.quecount = this.arr.length;\n\t\t}\n\n\t\tfor(var i=0;i<this.quecount;i++) {\n\t\t\tthis.mapping[i+1] = this.arr[i]\n\t\t}\n\t\t// this.mapping[this.quecount+1] = 11\n\t\t// this.mapping[this.quecount+11] = 22\n\t\tconsole.log(this.mapping);\n\n\t\tthis._localStorageService.clearAll();\n\n\t\tfor (var question in this.mapping) {\n\t\t\tthis.items.push([question, this.mapping[question]]);\n\t\t\tconsole.log(this.mapping[question]);\n\t\t\t\n\t\t\tthis._localStorageService.set(this.mapping[question].toString(),null)\n\t\t}\n\t\tconsole.log(this._localStorageService.keys());\n\n\t\t\n\n\t\tthis.items.sort(function(a, b) {\n\t\t\treturn a[0] - b[0];\n\t\t});\n\t\tconsole.log(this.items);\n\t\tconsole.log(this.items[0]);\n\n\n\t\tthis.questionnumber+=1\n\t\tthis.hasPrevNext(this.questionnumber,\"\")\n\t\tthis.selectedItem = (this.questionnumber-1);  \n\n\t}\n\n\thasPrevNext(id,message) {\n\t\t// console.log(this.selectedanswer);\n\t\tthis.seasons=[]\n\t\t// this.answerArray=[];\n\t\tthis.selectedanswer=null;\n\n\t\tif(message==\"n\")\n\t\tthis.questionnumber+=1\n\t\tif(message==\"p\")\n\t\tthis.questionnumber-=1\n\t\tif(message==\"l\")\n\n\t\tthis.questionnumber=parseInt(id);\n\t\tthis.getQuestion(id)\n\t\tconst ObjectLength = Object.keys(this.mapping).length\n\t\tthis.currentindex = id-1;\n\t\tthis.prev = (ObjectLength + this.currentindex - 1) % ObjectLength +1;\n\t\tthis.next = (ObjectLength + this.currentindex + 1) % ObjectLength +1;\n\t}\n\n\tgetQuestion(key) {\n\t\t\tthis.last=0;\n\t\t\tconsole.log(this.mapping);\n\t\t\t\n\t\t\t// this.examservice.getQuestionbyid(this.branch,this.semester,this.mapping[key])\n\t\t\tthis.examservice.getQuestionbyid(this.subject,this.mapping[key])\n\t\t\t\t.subscribe((question) => {this.question = question; console.log(this.question);\n\t\t\t\t\n\t\t\t\t this.seasons = [question.option1, question.option2, question.option3, question.option4];\n\t\t\t\t//  this.answerArray=[question.option1.ans, question.option2.ans, question.option3.ans, question.option4.ans];\n\t\t\t\t//  console.log(this.answerArray);\n\t\t\t\tconsole.log(this.seasons);\n\t\t\t\t\n\t\t\t\tthis.shuffle(this.seasons)\n\t\t\t\t this.answerArray[this.questionnumber] = this.question.ans\n\t\t\t\t console.log(this.answerArray);\n\t\t\t\t \n\t\t\t\t if(this.answers!=[]) {\n\t\t\t\t\tthis.last=this.answers[this.questionnumber]\n\t\t\t\t}\n\t\t\t\t});\t\t\n\t}\n\n\t\n\tshuffle(array) {\n\t\tarray.sort(() => Math.random() - 0.5);\n\t  }\n\t  \n\ttest() {\n\t\tif(this.answers[this.questionnumber]) {\n\t\tthis.testing[this.questionnumber] = true \n\tconsole.log(this.testing);\n\t}\n\t}\n\n\tstartTimer() {\n\t\tvar timeLeft = this.timeLeft\n\t\tvar minleft = this.minute\n\t    this.interval = setInterval(() => {\n\t\t\t\n\t\tif(this.timeLeft < 10 && this.timeLeft>1) {\n\t\t\tthis.timeLeft --;\n\t\t\tvar a = ('0' + this.timeLeft).slice(-2)\n\t\t\tthis.timeLeft = parseInt(a)\n\t\t\t// console.log(a,this.timeLeft);\n\t\t\t\n\t\t}\n\t      else if (this.timeLeft > 0) {\n\t\t\tthis.timeLeft--;\n\t\t\t\n\t\t  }\n\t\t  else if(this.minute > 0) {\n\t\t\tthis.minute--;\n\t\t\tthis.timeLeft = timeLeft;\n\n\t\t  } \n\t\t  else {\n\t\t\tconsole.log('Your answers');\n\t\t\tconsole.log(this.answers);\n\t\t\tclearInterval(this.interval)\n\t\t\tthis.confirm()\n\t\t\t\n\t      }\n\t    },1000)\n\t  }\n\n\tsubmit() {\n\n\t\t// for (var t=1;t<this.answers.length;t++) {\n\t\t// \t// var temp = this.items[t][1]\n\t\t// \tthis.final[this.items[t-1][1]] = this.answers[t]\n\t\t// \t// console.log(this.items[i]);\n\t\t// \t// console.log(this.answers[i]);\n\t\t// \t// console.log(i);\n\t\t// }\n\t\t// console.log(this.answers[1]);\n\t\t// console.log(this.items[0][1]);\n\t\tconsole.log(this.answerArray);\n\t\tconsole.log(this.answers)\n\t\t\n\t\tfor(var i=1;i<this.answers.length;i++) {\n\t\t\tthis.answer=[]\n\t\t\tif(this.answers[i]==this.answerArray[i]) {\n\t\t\t\tthis.marks+=1\n\t\t\t\tthis.answer.push(this.answers[i])\n\t\t\t\tthis.answer.push('True')\n\t\t\t\tthis.answer.push(this.answerArray[i])\n\n\t\t\t\tthis.final[this.items[i-1][1]] = this.answer\n\t\t\t\t}\n\t\t\telse {\n\t\t\t\tif(this.answers[i]!=null) {\n\t\t\t\t\tthis.answer.push(this.answers[i])\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.answer.push('NA')\n\t\t\t\t}\n\t\t\t\tthis.answer.push('False')\n\t\t\t\tthis.answer.push(this.answerArray[i])\n\t\t\t\tthis.final[this.items[i-1][1]] = this.answer\n\t\t\t}\n\t\t}\n\t\t\tconsole.log(this.final);\n\t\t\t// this.final['subject'] = (this.subject)\n\t\tthis.examservice.sendAttempted(this.final,this.examId,this.marks)\n\t\t.subscribe((resp) => {\n\t\t\tconsole.log(resp);\n\n\t\t})\n\t\tclearInterval(this.interval)\n\t\tconsole.log(this.marks);\n\t\tthis.examservice.sendResult(this.branch,this.semester,this.marks,this.subject,this.examId)\n\t\t\t.subscribe((name) => {console.log('Result Entered successfully',name)},\n\t\t\terror => {\n\t\t\t\tconsole.log(error);\n\t\t\t\tthis.errMess = error;\n\t\t\t\tconsole.log(this.errMess);\n\t\t\t  }\n\t\t\t  );\n\t\tthis.router.navigate(['/home']);\n\t\t}\n\n\tsavetemp(season) {\n\t\t\tthis.answers[this.questionnumber] = season\n\t\t\tconsole.log(this.answers);\n\t\t\tconsole.log(this.answerArray);\n\t\t\tthis.last=null\n\t\t\tconsole.log(this._localStorageService.keys());\n\t\t\t// var temp = []\n\t\t\t// temp.push(season)\n\t\t\t// temp.push(this.answerArray[this.questionnumber])\n\t\t\t\n\t\t\tthis._localStorageService.set(this.mapping[this.questionnumber].toString(),[season,this.answerArray[this.questionnumber]])\n\t\t\t// this._localStorageService.set('test'+this.mapping[this.questionnumber],this.answerArray[this.questionnumber])\n\t\t\t// this._localStorageService.set(this.)\n\t\t\tconsole.log(this.mapping[this.questionnumber],this._localStorageService.get(this.mapping[this.questionnumber].toString()));\n\t\t\t// console.log(this._localStorageService.get('test'+this.mapping[this.questionnumber].toString()));\n\t\t\t\n\n\t\t}\n\n\tsearchTests() {\n\t\tthis.exammarks = 0\n\t\tconsole.log('inside');\n\t\tconsole.log(this.semester);\n\t\tvar date2 = this.datePipe.transform(this.today,\"dd\")\n\t\tconsole.log(date2);\n\t\t\n\t\tthis.adminservice.searchExam(this.branch,this.semester)\n\t\t  .subscribe((tests) => { \n\t\t\t  console.log(tests)\n\t\t\tthis.exams = tests.exams[0];\n\t\t\tconsole.log(this.exams);\n\t\t\tthis.tempExam.push(this.exams)\n\t\t\tthis.exammarks=this.exams.marks\n\t\t\tthis.minute = this.exams.duration-1\n\t\t\tthis.examId = this.exams['_id']\n\t\t\tconsole.log(this.examId);\n\t\t\t\n\t\t\t// this.today = this.exams.date\n\t\t\tvar date1 = this.datePipe.transform(this.exams.date,\"dd\")\n\t\t\tvar time1 = this.exams.time\n\t\t\tvar date2 = this.datePipe.transform(this.today,\"dd\")\n\t\t\tvar time2 = this.datePipe.transform(this.today,\"HH:mm\")\n\n\t\t\tconsole.log(date1,date2,time1,time2);\n\n\t\t\tif(time1<=time2) {\n\t\t\t\tthis.subject = this.exams.subject\n\t\t\t\tthis.flag=true\n\t\t\t}\n\t\t\t\n\t\t  });\n\t  }\n\n\t  flagquestion() { \n\t\tthis.questionflag[this.questionnumber] = true\n\t\tconsole.log(this.questionflag);\n\t\t// this._localStorageService.set('test',null)\n\t\t// var test = this._localStorageService.get('test')\n\t\t// console.log(test);\n\n\t\t// this._localStorageService.set('test',1)\n\t\t// var test = this._localStorageService.get('test')\n\n\t\t// console.log(test);\n\t\t\n\t\t\n\t  }\n\t  removeflag() {\n\t\tthis.questionflag[this.questionnumber] = false\n\t\tconsole.log(this.questionflag);\n\t  }\n\t  flagandremoveattempt() {\n\t\tdelete this.answers[this.questionnumber]\n\t\tthis.questionflag[this.questionnumber] = true\n\t  }\n\n\t//   getVal() {\n\t// \t  return this.quecount\n\t//   }\n\n\t  setFlag() {\n\t\t  this.msg=null;\n\t\t//   var temp2 = 0;\n\t\t  this.examservice.getUser(this.id)\n\t\t  .subscribe((resp) => {\n\t\t\t  console.log(resp['user'][0]['attempted']);\n\t\t\t  var temp = resp['user'][0]['attempted']\n\t\t\t  for (var i =0;i<temp.length;i++) {\n\t\t\t\t  console.log(temp[i])\n\t\t\t\t//   if(temp[i]['subjectId']==this.examId) {\n\t\t\t\t// \t  this.attemptedFlag = true\n\t\t\t\t// \t  break\n\t\t\t\t//   }\n\t\t\t\t  if(temp[i]['subjectId']==this.examId && temp[i]['flag'] && !temp[i]['completionFlag'])\n\t\t\t\t  {\n\t\t\t\t\t  this.halfcomplete = true\n\t\t\t\t\t//   this.attemptedFlag = false\n\t\t\t\t\t  break\n\t\t\t\t  }\n\t\t\t\t  \n\t\t\t\t  else if(temp[i]['subjectId']==this.examId && temp[i]['flag'] && temp[i]['completionFlag'])\n\t\t\t\t   {\n\t\t\t\t\t  this.attemptedFlag = true\n\t\t\t\t\t//   this.halfcomplete = false\n\t\t\t\t\t  break\n\t\t\t\t   }\n\t\t\t  }\n\t\t\t  if(this.attemptedFlag) {\n\n\t\t\t\tthis.msg = ('Already attempted');\n\t\t\t\tthis.attemptedFlag = false\n\t\t\t  }\n\t\t\t  \n\t\t\t  else if(!this.attemptedFlag && !this.halfcomplete) {\n\t\t\t\t  this.attemptedFlag = true\n\t\t\t\tthis.examservice.setFlag({subject:this.subject,subjectId:this.examId,flag:true})\n\t\t\t\t.subscribe((resp) => {\n\t\t\t\t\tconsole.log(resp);\n\t\t\t\t})\n\t\t\t  }\n\n\t\t\t  if (this.halfcomplete) {\n\t\t\t\tthis.msg = ('want to continue Your Exam');\n\t\t\t\tconsole.log(this.msg);\n\t\t\t\t\n\t\t\t\t// this.halfcomplete = false\n\t\t\t}\n\n\t\t  })\n\n\t  }\n\t  selectCar(event: Event, car: Car) {\n\t\tthis.selectedCar = car;\n\t\tthis.displayDialog = true;\n\t\tevent.preventDefault();\n\t}\n\t\n\tonDialogHide() {\n\t\tthis.selectedCar = null;\n\t}\n\n\tcontinue() {\n\t\tthis.mapping = {}\n\t\tthis.items = []\n\t\tthis.marks=0;\n\t\tthis.answerArray=[]\n\t\tthis.answers=[]\n\n\t\tvar temp = this._localStorageService.keys()\n\t\tconsole.log(temp);\n\t\t\n\t\t// this.items.sort(function(a, b) {\n\t\t\t// return a[0] - b[0];\n\t\t// });\n\t\tfor(var i=0;i<temp.length;i++) {\n\t\t\tif(this._localStorageService.get(temp[i])) {\n\t\t\tvar temp1 = this._localStorageService.get(temp[i])\n\t\t\tconsole.log(temp1[0]);\n\n\t\t\tthis.answers[i+1]= this._localStorageService.get(temp[i])[0]\n\t\t\tthis.answerArray[i+1]= this._localStorageService.get(temp[i])[1]\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.answerArray[i+1] = 'NA'\n\t\t\t}\n\t\t\t// this.answerArray[i+1] = this._localStorageService.get('test'+temp[i])\n\t\t\tif(this.answers[i+1]){\n\t\t\tthis.testing[i+1] = true}\n\t\t\tthis.mapping[i+1] = temp[i]\n\t\t}\n\n\t\tconsole.log(this.answers,this.answerArray);\n\t\t\n\t\tfor (var question in this.mapping) {\n\t\t\tthis.items.push([question, this.mapping[question]]);\n\t\t\t// console.log(this.mapping[question]);\n\t\t\t\n\t\t\t// this._localStorageService.set(this.mapping[question],null)\n\t\t}\n\t\tthis.quecount = this.items.length\n\n\t\t// console.log(this._localStorageService.keys());\n\n\n\t\t// this.items.sort(function(a, b) {\n\t\t// \treturn a[0] - b[0];\n\t\t// });\n\n\t\tconsole.log(this.items,this.mapping,this.answers);\n\t\t\n\t\tthis.flag1=true\n\t\tthis.questionnumber=1\n\t\tthis.hasPrevNext(this.questionnumber,\"\")\n\t\tthis.selectedItem = (this.questionnumber-1);\n\n\n\n\t}\n\t\n}","\n<div *ngIf = \"flag1\">\n  <div class=\"totalquestion mat-elevation-z4 \">\n    <div *ngIf=\"quecount\"><b>{{quecount}}</b></div>\n    <div *ngIf=\"!quecount\"><b>NaN</b></div>\n  </div>\n\n  <div class=\"totalquestion1  \">Total Number of Questions</div>\n\n  <div class=\"questionnumber mat-elevation-z4 \">\n    <p *ngIf=\"questionnumber\"><b>{{questionnumber}}</b></p>\n    <p *ngIf=\"!questionnumber\"><b>NaN</b></p>\n  </div>\n\n  <div class=\"questionnumber1  \">Current Question Number</div>\n\n  <div class=\"attempted mat-elevation-z4 \">\n    <p><b>{{minute}}:{{timeLeft}}</b></p>  \n  </div>\n\n  <div class=\"attempted1\">\n    Clock Timer\n  </div>\n\n  <div class=\"selectedAnswer\">\n    <ng-container *ngIf=\"!selectedanswer && !last\">Not Attempted</ng-container>\n    <ng-container *ngIf=\"selectedanswer\">\n      Selected Answer is\n      <p><b>{{selectedanswer}}</b></p>\n    </ng-container>\n    <ng-container *ngIf=\"last\">\n      Previously selectedOption Was :  <p><b>{{last}}</b></p>\n    </ng-container>\n  </div>\n\n\n  <div *ngIf=\"questionnumber>=1\" class=\"panel\" matRipple [matRippleColor]=\"mycolor\" [matRippleRadius]=\"radius\">\n    <div> \n      <a *ngFor=\"let num of items; let i = index\" class=\"disabled\" (click)=\"test()\" (click)=\"hasPrevNext(num[0],'l')\">\n        <div class=\"currentbutton mat-elevation-z8\" *ngIf=\"!answers[num[0]] && !questionflag[num[0]]\" (click)=\"setClickedRow(i)\" [class.select]=\"i==selectedItem\" > <p>{{num[0]}}</p></div>\n        <div class=\"attemptedbutton mat-elevation-z8\" *ngIf=\"answers[num[0]]\" (click)=\"setClickedRow(i)\"  [class.select]=\"answers[num[0]]\"><p>{{num[0]}}</p></div>\n        <div class=\"flagquestions mat-elevation-z8\" *ngIf=\"questionflag[num[0]] && !answers[num[0]]\" (click)=\"setClickedRow(i)\" [class.select]=\"questionflag[num[0]]\"><p>{{num[0]}}</p></div>\n      </a>\n      <br>\n\n      <div class=\"button1 \" *ngIf=\"!questionflag[questionnumber]\"><abbr title=\"Mark Question for Review\"><button mat-button class=\"mat-elevation-z4\" [disabled]=\"answers[questionnumber]\" (click)=\"flagquestion()\" > <i class=\"fa fa-flag-o fa-lg\" aria-hidden=\"true\"></i></button></abbr></div>\n      <div class=\"button1 \" *ngIf=\"questionflag[questionnumber]\"><abbr title=\"Remove Flag from Question\"><button mat-button  class=\"mat-elevation-z4\"  (click)=\"removeflag()\"> <i class=\"fa fa-flag fa-lg\" aria-hidden=\"true\"></i></button></abbr></div>\n      <div class=\"button1 \" ><abbr title=\"Remove Attempt and Flag Question\"><button mat-button class=\"mat-elevation-z4\" [disabled]=\"!answers[questionnumber]\" (click)=\"flagandremoveattempt()\" > <i class=\"fa fa-eraser fa-lg\" aria-hidden=\"true\"></i></button></abbr></div>\n      <div class=\"button1\"><button type=\"text\" (click)=\"confirm()\" pButton icon=\"pi pi-check\" label=\"Complete Exam\"></button></div>\n    </div>\n  </div>\n\n  <div class=\"outercoverquestion \" *ngIf =\"question\">\n    \n    <div class=\"question\">\n  \t  <h5>\n  \t    Question:\n  \t  </h5> \n  \t    {{question.question}} \n    </div>\n\n  <mat-radio-group class=\"example-radio-group \" [(ngModel)]=\"selectedanswer\" [disabled]=\"questionflag[questionnumber]\">\n      <label  *ngIf =\"question\"><h5>Pick your answer</h5></label>\n      <div class=\"example-radio-button\" *ngFor=\"let season of seasons; last as isLast\">\n        <!-- <mat-radio-button [value]=\"season\" (change)=\"savetemp(season)\" [disabled]=\"answers[questionnumber]\" [checked]=\"season==last\" [class.checked]=\"season==last\"> -->\n        <mat-radio-button [value]=\"season\" (change)=\"savetemp(season)\" [disabled]=\"testing[questionnumber]\" [checked]=\"season==last\" [class.checked]=\"season==last\">\n        </mat-radio-button>\n        {{season}}\n      </div>\n  </mat-radio-group>\n  <button class=\"prevbutton \" *ngIf=\"questionnumber>=1\" mat-button [disabled]=\"questionnumber==1\" [disabled]=\"testing[prev]\" (click)=\"test()\" (click)=\"hasPrevNext(prev,'p')\" (click)=\"setClickedRow(questionnumber-1)\" [class.select]=\"questionnumber-1 == selectedItem\">Previous</button>\n  <button class=\"nextbutton \" *ngIf=\"questionnumber>=1\" mat-button [disabled]=\"questionnumber==quecount\" [disabled]=\"testing[next]\" (click)=\"test()\" (click)=\"hasPrevNext(next,'n')\"  (click)=\"setClickedRow(questionnumber-1)\" [class.select]=\"questionnumber-1 == selectedItem\">Next</button>\n  <div class=\"button2\"><button type=\"text\" (click)=\"confirm()\" pButton icon=\"pi pi-check\" label=\"Complete Exam\"></button></div>\n  <p-progressBar *ngIf=\"question\" value=\"{{objectKeys(answers).length* quecount}}\"></p-progressBar>\n  <!-- <mat-progress-bar color=\"red\" class=\" \" *ngIf=\"question\" mode=\"determinate\" value=\"{{objectKeys(answers).length* quecount}}\"></mat-progress-bar> -->\n  </div>\n\n</div>\n\n<div *ngIf=\"attemptedFlag && !halfcomplete && flag && !flag1\"><a mat-button (click)=\"searchQuestions()\" (click)=\"startTimer()\" class=\"button\">Confirm You Want To Start Exam</a></div>\n\n<div *ngIf=\"!attemptedFlag && !halfcomplete && flag && !flag1\"><a mat-button (click)=\"setFlag()\"  class=\"button\">{{subject}}</a></div>\n\n<div *ngIf=!subject><p>No scheduled exam</p></div>\n\n<div *ngIf=\"!flag\"><a mat-button (click)=\"searchTests()\">Search Exams</a></div>\n\n<!-- <div *ngIf=\"msg\">{{msg}}</div> -->\n\n<!-- <div [hidden]=\"subject\"><app-atom-spinner\n  [animationDuration]=\"1000\"\n  [size]=\"60\"\n  [color]=\"'#ff1d5e'\"\n ></app-atom-spinner>\n</div> -->\n<p-confirmDialog header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\n<div class=\"popup\"><p-messages [value]=\"msgs\"></p-messages></div>\n\n<p-dataView *ngIf=\"!halfcomplete && !attemptedFlag && flag && !flag1\" #dv [value]=\"tempExam\">\n  <p-header>\n      <div class=\"ui-helper-clearfix\">\n          <div class=\"p-grid\">\n              <!-- <div class=\"p-col-12 p-md-4\">\n                  <p-dropdown [options]=\"sortOptions\" [(ngModel)]=\"sortKey\" placeholder=\"Sort By\" (onChange)=\"onSortChange($event)\" [style]=\"{'min-width':'140px'}\"></p-dropdown>\n              </div> -->\n              \n              <div class=\"p-col-6 p-md-4\" style=\"text-align:right\">\n                  <p-dataViewLayoutOptions></p-dataViewLayoutOptions>\n              </div>\n          </div>\n      </div>\n  </p-header>\n  <ng-template let-car pTemplate=\"listItem\">\n      <div class=\"p-col-12\">\n          <div class=\"car-details\">\n              <div>\n                  <!-- <img src=\"assets/showcase/images/demo/car/{{car.brand}}.png\"> -->\n                  <div class=\"p-grid\">\n                      <div class=\"p-col-12\">Subject: <b>{{car.subject}}</b></div>\n                      <div class=\"p-col-12\">Date: <b>{{car.date | date}}</b></div>\n                      <div class=\"p-col-12\">Time: <b>{{car.time}}</b></div>\n                      <div class=\"p-col-12\">Marks: <b>{{car.marks}}</b></div>\n                  </div>\n              </div>\n              <button pButton type=\"button\" label=\"Set Flags\" (click)=\"selectCar($event, car)\"></button>\n          </div>\n      </div>\n  </ng-template>\n  <ng-template let-car pTemplate=\"gridItem\">\n      <div style=\"padding:.5em\" class=\"p-col-12 p-sm-3\">\n          <p-panel [header]=\"car._id\" [style]=\"{'text-align':'center'}\">\n              <!-- <img src=\"assets/showcase/images/demo/car/{{car.brand}}.png\" width=\"60\"> -->\n              <!-- <div class=\"car-detail\">{{car.subject}} - {{car.time}}</div> -->\n              <div class=\"car-detail\">Subject: <b>{{car.subject}}</b></div>\n                      <div class=\"car-detail\">Date: <b>{{car.date | date}}</b></div>\n                      <div class=\"car-detail\">Time: <b>{{car.time}}</b></div>\n                      <div class=\"car-detail\">Marks: <b>{{car.marks}}</b></div>\n              <button pButton type=\"button\" label=\"Start Exam\" (click)=\"selectCar($event, car)\" style=\"margin-top:0\"></button>\n          </p-panel>\n      </div>\n  </ng-template>\n</p-dataView>\n\n<p-dialog *ngIf=\"!halfcomplete && !attemptedFlag && flag && !flag1\" header=\"Exam Details\" [(visible)]=\"displayDialog\" [minY]=\"70\" showEffect=\"fade\" [modal]=\"true\" \n    [style]=\"{width: '225px'}\" (onAfterHide)=\"onDialogHide()\" [contentStyle]=\"{padding: '2em', textAlign: 'center'}\">\n    <div *ngIf=\"selectedCar\">\n        <!-- <img src=\"assets/showcase/images/demo/car/{{selectedCar.brand}}.png\"> -->\n        <strong>{{selectedCar.subject}} - {{selectedCar.marks}}</strong>\n        <button pButton type=\"button\" label=\"Click Here\" (click)=\"setFlag()\" style=\"margin-left:10px\"></button>\n    </div>\n    <div *ngIf=\"msg\">{{msg}}</div>\n\n</p-dialog>\n<div *ngIf=\"msg && halfcomplete && !attemptedFlag\">{{msg}} <button pButton type=\"button\" label=\"Click Here\" (click)=\"continue()\" (click)=\"startTimer()\" style=\"margin-left:10px\"></button></div>\n\n<p-sidebar *ngIf=\"!flag1\" [(visible)]=\"visibleSidebar5\" [fullScreen]=\"true\" [baseZIndex]=\"10000\">\n  <h1 style=\"font-weight:normal; text-align:center;\">Confirmation</h1>\n  <button style=\" left:43%;\" pButton type=\"button\" (click)=\"searchQuestions()\" (click)=\"startTimer()\" label=\"Confirm\" class=\"ui-button-success\"></button>\n  <button style=\"left: 44%;\" pButton type=\"button\" (click)=\"visibleSidebar5 = false\" label=\"Cancel\" class=\"ui-button-secondary\"></button>\n</p-sidebar>\n\n<!-- <button pButton type=\"button\" (click)=\"visibleSidebar1 = true\" icon=\"pi pi-arrow-right\"></button> -->\n<!-- <button pButton type=\"button\" (click)=\"visibleSidebar2 = true\" icon=\"pi pi-arrow-left\"></button> -->\n<!-- <button pButton type=\"button\" (click)=\"visibleSidebar3 = true\" icon=\"pi pi-arrow-down\"></button> -->\n<!-- <button pButton type=\"button\" (click)=\"visibleSidebar4 = true\" icon=\"pi pi-arrow-up\"></button> -->\n<button *ngIf=\"!halfcomplete && attemptedFlag && flag && !flag1\" pButton type=\"button\" (click)=\"visibleSidebar5 = true\" label=\"Confirmation Button\"></button>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { SigninService} from '../services/signin.service';\r\nimport { Router } from '@angular/router';\r\nimport {Signup} from '../shared/signup';\r\nimport { Exam} from '../shared/admin';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AdminService} from '../services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-header-component',\r\n  templateUrl: './header-component.component.html',\r\n  styleUrls: ['./header-component.component.scss']\r\n})\r\nexport class HeaderComponentComponent implements OnInit {\r\n\r\n  searchForm : FormGroup;\r\n  searchvalue: String;\r\n  username: string = undefined;\r\n  branch: string = undefined;\r\n  semester: string = undefined;\r\n  exams: Exam = null;\r\n  exams1: any;\r\n  subscription: Subscription;\r\n  subscription1: Subscription;\r\n  subscription2: Subscription;\r\n  ipAddress:any;\r\n  res: Object[];\r\n  res1:Signup[];\r\n  constructor(private authService: AuthService,\r\n    private router:Router,\r\n    private singupservice : SigninService,\r\n    private fb: FormBuilder,\r\n    private adminservices: AdminService) { }\r\n\r\n  ngOnInit(): void {\r\n    fetch('https://jsonip.com', { mode: 'cors' })\r\n  .then((resp) => resp.json())\r\n  .then((ip) => {\r\n    this.ipAddress=ip.ip\r\n    console.log(this.ipAddress);\r\n    // return ip.ip\r\n  });\r\n    this.authService.loadUserCredentials();\r\n    this.subscription = this.authService.getUsername()\r\n        .subscribe(name => { console.log(name); this.username = name; });\r\n    this.subscription1 = this.authService.getBranch()\r\n        .subscribe(name => { console.log(name); this.branch = name; });\r\n    // this.subscription2 = this.authService.getSemester()\r\n    //     .subscribe(name => { console.log(name); this.semester = name; });\r\n    \r\n    this.searchForm =  this.searchForm = this.fb.group ({\r\n      searchquery: ['', [Validators.required]]\r\n      });\r\n    }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  gologin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  logOut() {\r\n    console.log(this.username);\r\n    \r\n    this.singupservice.out(this.ipAddress,this.username)\r\n    .subscribe((res)=>{console.log(res);\r\n    })\r\n    this.username = undefined;\r\n      // console.log('hoil');\r\n      console.log(this.username);\r\n    this.authService.logOut();\r\n    this.router.navigate(['/home']);\r\n\r\n   }\r\n  getuser() {\r\n    this.singupservice.getusers()\r\n      \r\n      .subscribe(res => \r\n        {\r\n          this.res=res;\r\n          this.res1=res.users;\r\n          console.log(this.res1);\r\n        });\r\n  }\r\n}\r\n","<mat-toolbar class=\"Toolbar\">\r\n    <app-atom-spinner\r\n     [animationDuration]=\"1000\"\r\n     [size]=\"60\"\r\n     [color]=\"'#ff1d5e'\"\r\n    ></app-atom-spinner>\r\n\r\n    <!-- <span><img src=\"#\" height=30 width=41></span> -->\r\n    <button routerLink=\"/home\" routerLinkActive='active' mat-button class=\"buttons mat-elevation-z4\">Home</button>\r\n    <button routerLink=\"/exam\" routerLinkActive='active' mat-button class=\"buttons mat-elevation-z4\"> Exam </button>\r\n    <button routerLink=\"/result\" routerLinkActive='active' mat-button class=\"buttons mat-elevation-z4\"> Result </button>\r\n\r\n    <!-- <a routerLink=\"/#\" routerLinkActive='active' mat-button><span class=\"fa fa-info fa-lg\"></span> About</a> -->\r\n    <!-- <a mat-button (click)=\"searchTests()\"><span class=\"fa fa-list fa-lg\"></span> Tests</a> -->\r\n    <!-- <a routerLink=\"/#\" routerLinkActive='active' mat-button><span class=\"fa fa-address-card fa-lg\"></span> Contact</a> -->\r\n    <!-- <a mat-button (onclick)=\"search()\"><span class=\"fa fa-search fa-lg\"></span></a> -->\r\n    \r\n    <span class=\"flex-spacer\"></span>\r\n    <a mat-button *ngIf=\"!username\" (click)=\"gologin()\"><span class=\"fa fa-sign-in fa-lg\"></span> Login</a>\r\n    <a mat-button *ngIf=\"username\" (click)=\"logOut()\"><span class=\"fa fa-sign-in fa-lg\"></span> Logout</a>\r\n    <a mat-button *ngIf=\"username\">Welcome {{username}}</a>\r\n    \r\n</mat-toolbar>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { SigninService} from '../services/signin.service';\r\nimport { AdminService } from '../services/admin.service';\r\nimport { Router } from '@angular/router';\r\nimport {Signup} from '../shared/signup';\r\nimport {HomeService} from '../services/home.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { trigger,state,style,transition,animate } from '@angular/animations';\r\n// import dayGridPlugin from '@fullcalendar/daygrid';\r\n// import timeGridPlugin from '@fullcalendar/timegrid';\r\n// import interactionPlugin from '@fullcalendar/interaction';\r\n// import '@fullcalendar';\r\n\r\nexport interface Car {\r\n  subject;\r\n  date;\r\n  time;\r\n  marks;\r\n  _id;\r\n}\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n  animations: [\r\n    trigger('rowExpansionTrigger', [\r\n        state('void', style({\r\n            transform: 'translateX(-10%)',\r\n            opacity: 0\r\n        })),\r\n        state('active', style({\r\n            transform: 'translateX(0)',\r\n            opacity: 1\r\n        })),\r\n        transition('* <=> *', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\r\n    ])\r\n],\r\nstyles: [`      \r\n        .filter-container {\r\n            text-align: center;\r\n        }\r\n        .car-details {\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            padding: 2em;\r\n            border-bottom: 1px solid #d9dad9;\r\n        }\r\n        .car-details > div {\r\n            display: flex;\r\n            align-items: center;\r\n        }\r\n        .car-details > div img {\r\n            margin-right: 14px;\r\n        }\r\n        .car-detail {\r\n            padding: 0 1em 1em 1em;\r\n            border-bottom: 1px solid #d9dad9;\r\n            margin: 1em;\r\n        }\r\n        .ui-panel-content {\r\n            padding: 1em;\r\n        }\r\n        .dark-theme :host ::ng-deep .car-details,\r\n        .dark-theme :host ::ng-deep .car-detail {\r\n            border-bottom: 1px solid #191919;\r\n        }\r\n        \r\n        @media (max-width: 1024px) {\r\n            .car-details img {\r\n                 width: 75px;\r\n            }\r\n            .filter-container {\r\n                text-align: left;\r\n            }\r\n        }\r\n    `]\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  username: string;\r\n  subscription: Subscription;\r\n  branch: string;\r\n  subscription1: Subscription;\r\n  semester: string;\r\n  subscription2: Subscription;\r\n  res: Object[];\r\n  res1:Signup[];\r\n  staff:any;\r\n  update:any;\r\n  result:any;\r\n  interval:any;\r\n  exam=[];\r\n  cols:any;\r\n  allexams:any;\r\n  colsforall:any;\r\n  cars: Car[];\r\n  selectedCar: Car;\r\n  displayDialog: boolean;\r\n  options:any;\r\n  events={};\r\n  temp = [];\r\n  constructor(private authService: AuthService,\r\n    private router:Router,\r\n    private homeservice: HomeService,\r\n\t\tprivate datePipe: DatePipe) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.loadUserCredentials();\r\n    this.subscription = this.authService.getUsername()\r\n        .subscribe(name => { this.username = name; console.log(name);});\r\n        this.subscription1 = this.authService.getBranch()\r\n        .subscribe(name => { this.branch = name;console.log(this.branch); });\r\n        this.subscription2 = this.authService.getSemester()\r\n        .subscribe(name => { this.semester = name;console.log(name); });\r\n      this.interval = setInterval(() => {\r\n          this.getexam()\r\n          clearInterval(this.interval)\r\n          },2000)\r\n      // this.getexam()\r\n      // setTimeout(this.getexam,4000)\r\n      // var interval = setInterval(() => {\r\n        \r\n      //   for (var i=0;i<this.allexams.length;i++) {\r\n      //     this.temp.push(this.allexams[i])\r\n      //   }\r\n      //   this.events['data'] = this.temp\r\n\r\n      //   console.log(this.events);\r\n        \r\n\r\n      // //   this.options = {\r\n      // //     plugins:[ dayGridPlugin, timeGridPlugin, interactionPlugin ],\r\n      // //     // defaultDate: '2017-02-01',\r\n      // //     header: {\r\n      // //         left: 'prev,next',\r\n      // //         center: 'title',\r\n      // //         right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n      // //     },\r\n      // //     editable: true\r\n      // // };\r\n\r\n\r\n      //   clearInterval(interval)\r\n      //   },4000)\r\n      \r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n  \r\n  \r\n  getexam() {\r\n    this.exam=[]\r\n    this.cols=null;\r\n    console.log(this.branch);\r\n    \r\n    this.homeservice.getExam(this.branch,this.semester)\r\n    .subscribe((resp) => {\r\n      console.log(resp['exams']);\r\n      this.allexams = resp['exams'];\r\n      var temp = resp['exams']\r\n      for( var i=0;i<resp['exams'].length;i++) {\r\n        console.log(temp[i]);\r\n      var date1 = this.datePipe.transform(temp[i].date,\"dd\")\r\n      console.log(date1);\r\n\t\t\tvar date2 = this.datePipe.transform(Date.now(),\"dd\")\r\n        console.log(date2);\r\n      \r\n      if(date2<=date1 && parseInt(date1)-parseInt(date2)<2) {\r\n        this.exam.push(temp[i])\r\n      }\r\n      }\r\n      console.log(this.exam);\r\n      this.cols = [\r\n        { field: 'subject', header: 'Subject' }\r\n    ];\r\n    this.colsforall = [\r\n      { field: 'subject', header: 'Subject' },\r\n      { field: 'time', header: 'Time' },\r\n      { field: 'date', header: 'Date' },\r\n      { field: 'marks', header: 'Marks' },\r\n      { field: '_id', header: 'Exam-Id' }\r\n    ]\r\n    })\r\n\r\n  }\r\n\r\n  selectCar(event: Event, car: Car) {\r\n    this.selectedCar = car;\r\n    this.displayDialog = true;\r\n    event.preventDefault();\r\n}\r\n\r\n// onSortChange(event) {\r\n//     let value = event.value;\r\n\r\n//     if (value.indexOf('!') === 0) {\r\n//         this.sortOrder = -1;\r\n//         this.sortField = value.substring(1, value.length);\r\n//     }\r\n//     else {\r\n//         this.sortOrder = 1;\r\n//         this.sortField = value;\r\n//     }\r\n// }\r\n\r\nonDialogHide() {\r\n    this.selectedCar = null;\r\n}\r\n\r\nNotify(id) {\r\n  this.homeservice.NotifyExam({subject:id})\r\n  .subscribe((resp) => {\r\n    console.log(resp);\r\n\r\n  })\r\n}\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n \r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <p-card header=\"Scheduled Exams\" subheader=\"Within 2 days\" class=\"mat-elevation-z4\" styleClass=\"ui-card-shadow\">\r\n                    <button class=\"refreshbutton\" mat-raised-button (click)=\"getexam()\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></button>\r\n                    <!-- <p-header>\r\n                        Scheduled Exams\r\n                    </p-header> -->\r\n                    <div *ngIf=\"exam && cols\">\r\n                        <p-table [columns]=\"cols\" *ngIf=\"exam.length!=0; \" [value]=\"exam\" dataKey=\"subject\" [scrollable]=\"true\"  scrollHeight=\"150px\" \r\n                        [virtualScroll]=\"true\" [virtualRowHeight]=\"34\">\r\n                            <ng-template pTemplate=\"header\" let-columns>\r\n                                <tr>\r\n                                    <th style=\"width: 3em\"></th>\r\n                                    <th *ngFor=\"let col of columns\">\r\n                                        {{col.header}}\r\n                                        \r\n                                    </th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate=\"body\" let-rowData let-expanded=\"expanded\" let-columns=\"columns\">\r\n                                <tr>\r\n                                    <td>\r\n                                        <a href=\"#\" [pRowToggler]=\"rowData\">\r\n                                            <i [ngClass]=\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\"></i>\r\n                                        </a>\r\n                                    </td>\r\n                                    <td *ngFor=\"let col of columns\">\r\n                                        {{rowData[col.field]}}\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate=\"rowexpansion\" let-rowData let-columns=\"columns\">\r\n                                <tr>\r\n                                    <td [attr.colspan]=\"columns.length + 1\">\r\n                                        <div class=\"p-grid -fluid\" style=\"font-size:16px;padding:20px\">\r\n                                            <!-- <div class=\"p-col-12 p-md-3\" style=\"text-align:center\">\r\n                                                <img [attr.alt]=\"rowData.brand\" src=\"assets/showcase/images/demo/car/{{rowData.brand}}.png\">\r\n                                            </div> -->\r\n                                            <div class=\"p-col-12 p-md-9\">\r\n                                                <div class=\"p-grid\">\r\n                                                    <div class=\"p-col-12\">\r\n                                                        <b>Subject:</b> {{rowData.subject}}\r\n                                                    </div>\r\n                                                    <div class=\"p-col-12\">\r\n                                                        <b>Date:</b> {{rowData.date | date}}\r\n                                                    </div>\r\n                                                    <div class=\"p-col-12\">\r\n                                                        <b>Time:</b> {{rowData.time}}\r\n                                                    </div>\r\n                                                    <div class=\"p-col-12\">\r\n                                                        <b>Semester:</b> {{rowData.semester}}\r\n                                                    </div>\r\n                                                    <div class=\"p-col-12\">\r\n                                                        <b>Branch:</b> {{rowData.branch}}\r\n                                                    </div>\r\n                                                    <div class=\"p-col-12\">\r\n                                                       <button pButton type=\"button\" label=\"Notify\" icon=\"pi pi-check\" style=\"margin-right: .25em\" (click)=\"Notify(rowData._id)\"></button>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                        </p-table>\r\n                        <div *ngIf=\"exam.length==0\">No Scheduled Exams Within 2 days</div>\r\n                    </div>\r\n                    <div [hidden]=\"exam && cols\">\r\n                        <app-half-circle-spinner\r\n                  [animationDuration]=\"1000\"\r\n                  [size]=\"60\"\r\n                  [color]=\"'#ff1d5e'\"\r\n                ></app-half-circle-spinner>\r\n                    </div>\r\n                    <p-footer>\r\n                        <button pButton type=\"button\" label=\"Go To Exam Page\" icon=\"pi pi-check\" style=\"margin-right: .25em\" [routerLink]=\"['/exam']\"></button>\r\n                        <!-- <button pButton type=\"button\" label=\"Cancel\" icon=\"pi pi-times\" class=\"ui-button-secondary\"></button> -->\r\n                    </p-footer>\r\n                </p-card>\r\n            </div>\r\n            <div class=\"col-md-8\">\r\n                <!-- <p-card header=\"All Exams\" subheader=\"see details about your exam performance\" class=\"mat-elevation-z4\" styleClass=\"ui-card-shadow\">\r\n                    <button class=\"refreshbutton\" mat-raised-button (click)=\"getexam()\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></button>\r\n                   \r\n                    <div *ngIf=\"exam && cols\">\r\n                        <p-table #dt [columns]=\"colsforall\" [value]=\"allexams\" [paginator]=\"true\" [rows]=\"5\">\r\n                            <ng-template pTemplate=\"caption\">\r\n                                <div style=\"text-align: right\">        \r\n                                    <i class=\"pi pi-search\" style=\"margin:4px 4px 0 0\"></i>\r\n                                    <input type=\"text\" pInputText size=\"50\" placeholder=\"Search Here\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" style=\"width:auto\">\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate=\"header\" let-columns>\r\n                                <tr>\r\n                                    <th *ngFor=\"let col of columns\">\r\n                                        {{col.header}}\r\n                                    </th>\r\n                                </tr>\r\n                                \r\n                            </ng-template>\r\n                            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                                <tr [pSelectableRow]=\"rowData\">\r\n                                    <td *ngFor=\"let col of columns\" [routerLink]=\"['/exam', rowData['_id']]\">\r\n                                        {{rowData[col.field]}}\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                        </p-table>\r\n                       \r\n                    </div>\r\n                    <div [hidden]=\"exam && cols\">\r\n                        <app-half-circle-spinner\r\n                  [animationDuration]=\"1000\"\r\n                  [size]=\"60\"\r\n                  [color]=\"'#ff1d5e'\"\r\n                ></app-half-circle-spinner>\r\n                    </div>\r\n                    <p-footer>\r\n                        <button pButton type=\"button\" label=\"Go To Exam Page\" icon=\"pi pi-check\" style=\"margin-right: .25em\" [routerLink]=\"['/exam']\"></button>\r\n                    </p-footer>\r\n                </p-card> -->\r\n                <p-dataView #dv [value]=\"allexams\" [paginator]=\"true\" [rows]=\"5\" paginatorPosition=\"both\" filterBy=\"subject\">\r\n    <p-header>\r\n        <div class=\"ui-helper-clearfix\">\r\n            <div class=\"p-grid\">\r\n                <!-- <div class=\"p-col-12 p-md-4\">\r\n                    <p-dropdown [options]=\"sortOptions\" [(ngModel)]=\"sortKey\" placeholder=\"Sort By\" (onChange)=\"onSortChange($event)\" [style]=\"{'min-width':'140px'}\"></p-dropdown>\r\n                </div> -->\r\n                <div class=\"p-col-6 p-md-4 filter-container\">\r\n                    <div style=\"position:relative\">\r\n                        <input type=\"search\" pInputText placeholder=\"Search by subject\" (input)=\"dv.filter($event.target.value)\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"p-col-6 p-md-4\" style=\"text-align:right\">\r\n                    <p-dataViewLayoutOptions></p-dataViewLayoutOptions>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </p-header>\r\n    <ng-template let-car pTemplate=\"listItem\">\r\n        <div class=\"p-col-12\">\r\n            <div class=\"car-details\">\r\n                <div>\r\n                    <!-- <img src=\"assets/showcase/images/demo/car/{{car.brand}}.png\"> -->\r\n                    <div class=\"p-grid\">\r\n                        <div class=\"p-col-12\">Subject: <b>{{car.subject}}</b></div>\r\n                        <div class=\"p-col-12\">Date: <b>{{car.date | date}}</b></div>\r\n                        <div class=\"p-col-12\">Time: <b>{{car.time}}</b></div>\r\n                        <div class=\"p-col-12\">Marks: <b>{{car.marks}}</b></div>\r\n                    </div>\r\n                </div>\r\n                <button pButton type=\"button\" icon=\"pi pi-search\" (click)=\"selectCar($event, car)\"></button>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template let-car pTemplate=\"gridItem\">\r\n        <div style=\"padding:.5em\" class=\"p-col-12 p-sm-3\">\r\n            <p-panel [header]=\"car._id\" [style]=\"{'text-align':'center'}\">\r\n                <!-- <img src=\"assets/showcase/images/demo/car/{{car.brand}}.png\" width=\"60\"> -->\r\n                <div class=\"car-detail\">{{car.subject}} - {{car.time}}</div>\r\n                <button pButton type=\"button\" icon=\"pi pi-search\" (click)=\"selectCar($event, car)\" style=\"margin-top:0\"></button>\r\n            </p-panel>\r\n        </div>\r\n    </ng-template>\r\n</p-dataView>\r\n\r\n<p-dialog header=\"Exam Details\" [(visible)]=\"displayDialog\" [minY]=\"70\" showEffect=\"fade\" [modal]=\"true\" \r\n    [style]=\"{width: '225px'}\" (onAfterHide)=\"onDialogHide()\" [contentStyle]=\"{padding: '2em', textAlign: 'center'}\">\r\n    <div *ngIf=\"selectedCar\">\r\n        <!-- <img src=\"assets/showcase/images/demo/car/{{selectedCar.brand}}.png\"> -->\r\n        <strong>{{selectedCar.subject}} - {{selectedCar.marks}}</strong>\r\n        <button pButton type=\"button\" label=\"Click Here\" [routerLink]=\"['/exam', selectedCar._id]\" style=\"margin-left:10px\"></button>\r\n    </div>\r\n</p-dialog>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- <p-dataview [value]=\"allexams\" [loading]=\"loading\"> -->\r\n    <!-- Hello -->\r\n<!-- </p-dataview> -->","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport { login,returnlogin } from '../shared/login';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { GeneralService } from '../services/general.service'\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  onsubmitsignupvalues: login;\r\n  temp: login = null;\r\n  errMess: String =null;\r\n  returnmessage: returnlogin;\r\n  ipAddress:any;\r\n  subscription: Subscription;\r\n  username:any;\r\n  return: string = '';\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private router: Router,\r\n    private ip:GeneralService,\r\n    private authService: AuthService,\r\n    private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    // this.getIP();\r\n    this.route.queryParams\r\n      .subscribe(params => this.return = params['return'] || '/home');\r\n    fetch('https://jsonip.com', { mode: 'cors' })\r\n  .then((resp) => resp.json())\r\n  .then((ip) => {\r\n    this.ipAddress=ip.ip\r\n    console.log(this.ipAddress);\r\n    // return ip.ip\r\n  });\r\n    this.firstFormGroup = this.fb.group({\r\n      emailid: ['', [Validators.required, Validators.pattern] ]\r\n    });\r\n    this.secondFormGroup = this.fb.group({\r\n      password:['', [Validators.required,Validators.pattern]]\r\n    });\r\n\r\n    this.authService.loadUserCredentials();\r\n    this.subscription = this.authService.getUsername()\r\n        .subscribe(name => {  this.username = name; console.log(this.username); });\r\n  }\r\n\r\n  // getIP()  \r\n  // {  \r\n  //   this.ipAddress=this.ip.getIPAddress()  \r\n        \r\n  //     console.log('ipaddress' , this.ipAddress);\r\n  //   };  \r\n \r\n  onSubmitFirst()  {\r\n    \r\n    this.onsubmitsignupvalues = this.firstFormGroup.value;\r\n    this.onsubmitsignupvalues.username = this.onsubmitsignupvalues.emailid.slice(0,8);\r\n    delete this.onsubmitsignupvalues.emailid\r\n    console.log(this.onsubmitsignupvalues);\r\n    \r\n  }\r\n  onSubmitSecond() {\r\n    this.temp = (this.secondFormGroup.value);\r\n    Object.assign(this.onsubmitsignupvalues,this.temp);\r\n    console.log(this.onsubmitsignupvalues);\r\n    // console.log(this.username);\r\n    \r\n    this.authService.checkanotherlogin(this.onsubmitsignupvalues)\r\n    .subscribe(data => {\r\n      console.log(data);\r\n    \r\n    if(data.length==0){\r\n\r\n            this.authService.checkanotherIP(this.ipAddress)\r\n            .subscribe(data => {\r\n            console.log(data);\r\n\r\n            if(data.length==0){\r\n      \r\n                      this.authService.logIn(this.onsubmitsignupvalues,this.ipAddress)\r\n                        .subscribe(data =>  {     \r\n                        \r\n                            // console.log('inside');        \r\n                            console.log(data);\r\n                            console.log(this.errMess);\r\n                            // this.router.navigate(['/home']);\r\n                            this.router.navigateByUrl(this.return);\r\n                          },\r\n                        error => {\r\n                          console.log(error);\r\n                          this.errMess = error;\r\n                          console.log(this.errMess);\r\n                        },\r\n                      );\r\n                    }\r\n              else {\r\n                console.log('Same System cannot be use twice in one exam');\r\n                }\r\n              }\r\n            )\r\n    }\r\n  else {\r\n    console.log('Same User can\\'t login at same time');\r\n  }\r\n  });\r\n  }\r\n  reset() {\r\n    this.onsubmitsignupvalues=null;\r\n    this.temp=null;\r\n  }\r\n  \r\n\r\n}\r\n","<mat-horizontal-stepper labelPosition=\"bottom\" #stepper>\r\n    <mat-step [stepControl]=\"firstFormGroup\">\r\n      <form [formGroup]=\"firstFormGroup\" (ngSubmit)=\"onSubmitFirst()\">\r\n        <ng-template matStepLabel matStepperIcon=\"done\">Fill out your Email </ng-template>\r\n        <mat-form-field>\r\n          <mat-label>Email-Id</mat-label>\r\n          <input matInput placeholder=\"Enter Email-Id\" formControlName=\"emailid\" type=\"text\" required>\r\n        </mat-form-field>\r\n        <div>\r\n          <button mat-button matStepperNext [disabled]=\"firstFormGroup.invalid\">Next</button>\r\n        </div>\r\n      </form>\r\n    </mat-step>\r\n    <mat-step [stepControl]=\"secondFormGroup\">\r\n      <form [formGroup]=\"secondFormGroup\" (ngSubmit)=\"onSubmitSecond()\">\r\n        <ng-template matStepLabel>Fill out the details</ng-template>\r\n\r\n        <mat-form-field>\r\n            <mat-label>Password</mat-label>\r\n            <input matInput type=\"password\" formControlName=\"password\" placeholder=\"Enter Password\" required>\r\n        </mat-form-field>\r\n        \r\n        <div>\r\n          <button mat-button matStepperPrevious>Back</button>\r\n          <button mat-button matStepperNext [disabled]=\"secondFormGroup.invalid\">Confirm</button>\r\n          <button mat-button (click)=\"stepper.reset()\" (click)=\"reset()\">Reset</button>\r\n        </div>\r\n      </form>\r\n      <div *ngIf=\"errMess\">\r\n        <h2>Error</h2>\r\n        <h4>Kindly please check your Email-Id and Password</h4>\r\n      </div>\r\n\r\n    </mat-step>\r\n\r\n</mat-horizontal-stepper>","import { Component, OnInit,ViewChild,AfterViewInit } from '@angular/core';\nimport { ExamComponent} from '../exam/exam.component';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { ResultService } from '../services/result.service';\n\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.scss']\n})\nexport class ResultComponent implements OnInit {\n\n  message:String;\n  username: string;\n  subscription: Subscription;\n  branch: string;\n  subscription1: Subscription;\n  semester: string;\n  subscription2: Subscription;\n  subscription3: Subscription;\n  id:any;\n  subjects =[];\n  temp = {}\n  UserbyId:any;\n  items=[];\n  attempts:any;\n\n  constructor(private authService :AuthService,\n    private resultservice: ResultService) { }\n\n  ngOnInit(): void {\n    this.authService.loadUserCredentials();\n    this.subscription = this.authService.getUsername()\n        .subscribe(name => { this.username = name; console.log(name);});\n    this.subscription1 = this.authService.getBranch()\n        .subscribe(name => { this.branch = name;console.log(this.branch); });\n    this.subscription2 = this.authService.getSemester()\n        .subscribe(name => { this.semester = name;console.log(name); });\n    this.subscription3 = this.authService.getId()\n        .subscribe(name => { this.id = name;console.log(name); });\n\n    this.resultservice.getUser()\n    .subscribe((user)=>{\n      console.log(user);\n\n      this.UserbyId = user['user'];\n      console.log(this.UserbyId);\n      \n      for (var i=0;i<this.UserbyId.attempted.length;i++) {\n        this.temp[this.UserbyId.attempted[i].subject] = this.UserbyId.attempted[i].subjectId\n        this.subjects.push(this.temp)\n        // this.subjects.push(this.UserbyId.attempted[i].subjectId)\n      }\n      this.subjects = [...new Set(this.subjects)]\n      console.log(this.subjects);\n      \n    })\n}\n\ngetAttempts(subject) {\n  this.items = []\n  this.attempts = []\n  \n  // console.log(this.exams.length);\n\n  // for (var i=0;i<this.exams.length;i++) {\n    // console.log(this.exams[i]);\n    // if(this.exams[i]['subject']==subject) {\n      // this.id = this.exams[i]['_id']\n      // break\n    // }\n  // }\n  console.log(this.id);\n\n  this.resultservice.getAttempts(subject,this.id)\n  .subscribe((resp) => {\n    console.log(resp);\n    var id = resp[0]['_id']\n    console.log(id);\n    this.attempts = resp\n    // this.attempt=resp[0]['attempt']\n\n    // for (var question in this.attempt) {\n      // this.items.push([question, this.attempt[question]]);\n    // }\n    \n    // this.items.sort(function(a, b) {\n      // return a[0] - b[0];\n    // });\n  })\n}\n  // getResult() {\n  //   this.result = this.examcomponent.answers\n  //   console.log(this.result);\n  // }\n \n\n}\n","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n \n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <div class=\"header\">\n                            <h4 class=\"title\">Details Of Student</h4>\n                            <p class=\"title category\">{{username}}</p>\n                        </div>\n                        <div >\n                          <div class=\"entry\">\n                            <p class=\"card-text\">Semester - {{semester}}</p>\n                              <hr>\n                            <p class=\"card-text\">Branch - {{branch}}</p>\n                            <hr>\n                            <h5>Exams Attempted</h5>\n                            <table class=\"table table-hover\">\n                                <tbody *ngFor=\"let i of subjects\">\n                                    <tr *ngFor=\"let j of i | keyvalue\">\n                                        <td>{{j.key}}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                          </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- *ngIf=\"!questionWise\" -->\n        <div >\n        <!-- <table *ngFor=\"let i of attempts\" class=\"table table-hover table-striped\">\n            <thead>\n                \n                <tr>\n                    <th><b>{{i['user']['username']}}</b></th>\n                    <th>\n                        {{i['subject']['date'] | date}}\n                    </th>\n                    <th>\n                        <p class=\"card-text\">Marks\n                            <b>{{i['marks']}}/{{i['subject']['marks']}}</b></p>\n                    </th>\n                </tr>\n                \n                <tr>\n                    <th>Question Number</th>\n                    <th>Answer Attempted</th>\n                    <th>Check</th>\n                    <th>Correct Answer</th>\n                \n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let a of i['attempt'] | keyvalue\">\n                    <td>{{a.key}}</td>\n                    <td>{{a.value[0]}}</td>\n                    <td>{{a.value[1]}}</td>\n                    <td>{{a.value[2]}}</td>\n                \n                </tr>\n            </tbody>\n        </table> -->\n        </div>\n        <!-- *ngIf=\"questionWise\" -->\n        <!-- <div >\n            <table *ngFor=\"let i of questionWise\" class=\"table table-hover table-striped\">\n                <thead>\n                \n                    <tr>\n                        <th><b>Question Number {{key}}</b></th>\n                        <th><b>{{i['user']['username']}}</b></th>\n                        <th>\n                            {{i['subject']['date'] | date}}\n                        </th>\n\n                    </tr>\n\n                    <tr>\n                        <th>Question Number</th> -->\n                        <!-- <th>Answer Attempted</th>\n                        <th>Check</th>\n                        <th>Correct Answer</th>\n                    \n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>{{i.key}}</td> -->\n                        <!-- <td>{{i.attempt[0]}}</td>\n                        <td>{{i.attempt[1]}}</td>\n                        <td>{{i.attempt[2]}}</td>\n                    \n                    </tr>\n                </tbody>\n            </table>\n                    <button mat-button (click)=\"goBack()\">BACK</button>\n        \n        </div> -->\n        \n        <div *ngIf=\"!attempts\">\n        <h4>No Attempt for this given Exam</h4>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { Exam } from '../shared/admin';\r\n\r\nimport { catchError, delay } from 'rxjs/operators';\r\n\r\nimport { Observable, of } from'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { baseURL } from '../shared/baseurl';\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n\r\n  config: any;\r\n\r\n  constructor(private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n\r\n  scheduleExam(exam:Exam): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json'\r\n      })\r\n    };\r\n    return this.http.post<any>(baseURL+ 'admin/',exam,httpOptions)\r\n    .pipe(catchError(this.processHTTPMsgService.handleError))\r\n    .pipe(delay(2000));\r\n  }\r\n\r\n  searchExam(branch:any,sem:any): Observable<any> {\r\n    console.log(branch);\r\n    console.log(sem);\r\n    // console.log(date);\r\n    \r\n    this.config = {\r\n      params: { branch:branch,\r\n                 sem:sem,\r\n                 \r\n             }};\r\n    return this.http.get<Exam>(baseURL+ 'admin/exam',this.config)\r\n    .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n  getstaff(): Observable<any> {\r\n    return this.http.get<any>(baseURL+ 'admin/getStaff')\r\n    .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n  verfied(id:any,update:any) : Observable<any> {\r\n    console.log(id);\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json'\r\n      })\r\n    };\r\n    this.config = {\r\n      params:{\r\n        id:id,\r\n        update:update\r\n      }\r\n    };\r\n    return this.http.put<any>(baseURL+'admin/getStaff',this.config,httpOptions)\r\n    .pipe(catchError(this.processHTTPMsgService.handleError));\r\n    \r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { login,returnlogin } from '../shared/login';\n\nimport { catchError, delay } from 'rxjs/operators';\n\nimport { Observable, of } from'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { baseURL } from '../shared/baseurl';\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttemptService {\n\n  constructor(private http:HttpClient,\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\n    \n    getAttempts(id:number) : Observable<any> {\n      // var config = {\n        // params: {\n          // subject:subject\n        // }\n      // }\n      return this.http.get<any>(baseURL + 'test/attempt/'+id)\n        .pipe(catchError(this.processHTTPMsgService.handleError))\n    }\n}\n\n\n","// import { Injectable } from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot,RouterState } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  base_url: string;\n  \n    constructor(private router: Router\n        , private authService: AuthService) {}\n        // state: RouterState = this.router.routerState;\n        \n        // snapshot: RouterStateSnapshot = this.state.snapshot;\n        // root: ActivatedRouteSnapshot = this.snapshot.root;\n        // child = this.root.firstChild;\n        // id: Observable<string> = child.params.map(p => p.id);\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        // Check to see if a user has a valid token\n        if (this.authService.isLoggedIn()) {\n            // If they do, return true and allow the user to load app\n            return true;\n        }\n\n        // If not, they redirect them to the login page\n        this.router.navigate(['/login'], {\n          queryParams: {\n            return: state.url\n          }\n        });\n        return false;\n    }\n\n  // constructor() { }\n}\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private inj: Injector) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const authService = this.inj.get(AuthService);\r\n    // Get the auth header from the service.\r\n    const authToken = authService.getToken();\r\n    console.log(\"Interceptor: \" + authToken);\r\n    // Clone the request to add the new header.\r\n    const authReq = req.clone({headers: req.headers.set('Authorization', 'bearer ' + authToken)});\r\n        // Pass on the cloned request instead of the original request.\r\n        console.log('working');\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class UnauthorizedInterceptor implements HttpInterceptor {\r\n  constructor(private inj: Injector) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const authService = this.inj.get(AuthService);\r\n    const authToken = authService.getToken();\r\n\r\n    return next\r\n      .handle(req)\r\n      .pipe(tap((event: HttpEvent<any>) => {\r\n        // do nothing\r\n      }, (err: any) => {\r\n        if (err instanceof HttpErrorResponse) {\r\n          if (err.status === 401 && authToken) {\r\n            console.log('Unauthorized Interceptor: ', err);\r\n            authService.checkJWTtoken();\r\n          }\r\n        }\r\n      }));\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\nimport { baseURL } from '../shared/baseurl';\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\n\r\ninterface AuthResponse {\r\n  status: string;\r\n  success: string;\r\n  token: string;\r\n}\r\n\r\ninterface JWTResponse {\r\n  status: string;\r\n  success: string;\r\n  user: any;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  config:any;\r\n  tokenKey = 'JWT';\r\n  isAuthenticated: Boolean = false;\r\n  id: Subject<any> = new Subject<any>();\r\n  username: Subject<string> = new Subject<string>();\r\n  branch: Subject<string> = new Subject<string>();\r\n  semester: Subject<string> = new Subject<string>();\r\n  \r\n  authToken: string = undefined;\r\n\r\n   constructor(private http: HttpClient,\r\n     private processHTTPMsgService: ProcessHTTPMsgService) {\r\n   }\r\n\r\n   checkJWTtoken() {\r\n    this.http.get<JWTResponse>(baseURL + 'users/checkJWTtoken')\r\n    .subscribe(res => {\r\n      console.log('JWT Token Valid: ', res);\r\n      this.sendUsername(res.user.username);\r\n      this.sendBranch(res.user.branch);\r\n      this.sendSem(res.user.semester);\r\n      this.sendId(res.user._id);\r\n    },\r\n    err => {\r\n      console.log('JWT Token invalid: ', err);\r\n      this.destroyUserCredentials();\r\n    });\r\n  }\r\n  sendId(id:any) {\r\n    this.id.next(id);\r\n  }\r\n   sendUsername(name: string) {\r\n     this.username.next(name);\r\n   }\r\n   sendBranch(branch: string) {\r\n     this.branch.next(branch);\r\n   }\r\n   sendSem(sem:string) {\r\n     this.semester.next(sem);\r\n   }\r\n\r\n   clearUsername() {\r\n     this.username.next(undefined);\r\n     this.branch.next(undefined);\r\n     this.semester.next(undefined);\r\n   }\r\n\r\n   loadUserCredentials() {\r\n     const credentials = JSON.parse(localStorage.getItem(this.tokenKey));\r\n     console.log('loadUserCredentials ', credentials);\r\n     if (credentials && credentials.username !== undefined) {\r\n       this.useCredentials(credentials);\r\n       if (this.authToken) {\r\n        this.checkJWTtoken();\r\n       }\r\n     }\r\n   }\r\n\r\n   storeUserCredentials(credentials: any) {\r\n     console.log('storeUserCredentials ', credentials);\r\n     localStorage.setItem(this.tokenKey, JSON.stringify(credentials));\r\n     this.useCredentials(credentials);\r\n   }\r\n\r\n   useCredentials(credentials: any) {\r\n     this.isAuthenticated = true;\r\n     this.sendUsername(credentials.username);\r\n     this.authToken = credentials.token;\r\n   }\r\n\r\n   destroyUserCredentials() {\r\n     this.authToken = undefined;\r\n     this.clearUsername();\r\n     this.isAuthenticated = false;\r\n     localStorage.removeItem(this.tokenKey);\r\n   }\r\n\r\n   signUp() {\r\n\r\n   }\r\n\r\n   checkanotherlogin(username:any): Observable<any> {\r\n     this.config = {\r\n       params: {\r\n          'username':username.username\r\n       }\r\n     }\r\n     console.log(username);\r\n     \r\n     return this.http.get<any>(baseURL + 'users/activeuser',this.config)\r\n     .pipe(catchError(this.processHTTPMsgService.handleError))\r\n   }\r\n\r\n   checkanotherIP(ip:any): Observable<any> {\r\n    this.config = {\r\n      params: {\r\n         'ip':ip,\r\n      }\r\n    }\r\n    return this.http.get<any>(baseURL + 'users/ip',this.config)\r\n    .pipe(catchError(this.processHTTPMsgService.handleError))\r\n  }\r\n\r\n   logIn(user: any,ip:any): Observable<any> {\r\n    \r\n     return this.http.post<AuthResponse>(baseURL + 'users/login',\r\n       {'username': user.username, 'password': user.password, 'ip':ip})\r\n       .pipe( map(res => {\r\n           this.storeUserCredentials({username: user.username, token: res.token,branch:user.branch,semester:user.semester});\r\n           return {'success': true, 'username': user.username,'branch':user.branch,'semester':user.semester };\r\n       }),\r\n        catchError(error => this.processHTTPMsgService.handleError(error)));\r\n   }\r\n\r\n   logOut() {\r\n     this.destroyUserCredentials();\r\n   }\r\n\r\n   isLoggedIn(): Boolean {\r\n     return this.isAuthenticated;\r\n   }\r\n\r\n   getUsername(): Observable<string> {\r\n     return this.username.asObservable();\r\n   }\r\n\r\n   getBranch(): Observable<string> {\r\n    return this.branch.asObservable();\r\n  }\r\n  getSemester(): Observable<string> {\r\n    return this.semester.asObservable();\r\n  }\r\n  getId(): Observable<any> {\r\n    return this.id.asObservable();\r\n  }\r\n\r\n   getToken(): string {\r\n     return this.authToken;\r\n   }\r\n   \r\n}","import { Injectable } from '@angular/core';\nimport { login,returnlogin } from '../shared/login';\n\nimport { catchError, delay } from 'rxjs/operators';\n\nimport { Observable, of } from'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { baseURL } from '../shared/baseurl';\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExamService {\n\n  config:any;\n  constructor(private http:HttpClient,\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\n\n  getQuestions() : Observable<any> {\n    return this.http.get<any>(baseURL + 'test/getquestion')\n    .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n  getQuestionbyid(subject:any,id:any) :Observable<any> {\n    console.log(id);\n    // console.log(branch);\n    // console.log(semester);\n    \n    \n    this.config = {\n      params : {\n        id:id,\n        subject:subject\n      }\n    };\n    return this.http.get<any>(baseURL + 'test/exams/',this.config)\n    .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n\n  sendResult(branch:any,semester:any,marks:any,subject:any,subjectId:any) :Observable<any> {\n    this.config ={}\n    // console.log(marks);\n    // console.log(branch);\n    // console.log(semester);\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    this.config = {\n      // params : {\n        \n        branch:branch,\n        semester:semester,\n        marks:marks,\n        subject:subject,\n        subjectId:subjectId\n      // }\n    };\n    return this.http.post<any>(baseURL + 'test/result' , this.config , httpOptions)\n        .pipe(catchError(this.processHTTPMsgService.handleError))\n        .pipe(delay(2000));\n  }\n  getResult(branch:any,semester:any) :Observable<any> {\n    this.config = {\n      params : {\n        branch:branch,\n        semester:semester,\n      }\n    }\n\n    return this.http.get<any>(baseURL+ 'test/result' , this.config)\n    .pipe(catchError(this.processHTTPMsgService.handleError))\n  }\n\n  sendAttempted(attempt:any,subject:any,marks:any): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log(subject);\n    \n    var config ={\n      // params : {\n        attempt : attempt,\n        subject:subject,\n        marks:marks\n      // }\n    }\n    return this.http.post<any>(baseURL + 'test/attempt/'+subject , config , httpOptions)\n        .pipe(catchError(this.processHTTPMsgService.handleError))\n        .pipe(delay(2000));\n  }\n\n  setFlag(attempt:any): Observable<any> {\n    console.log(attempt);\n    \n    return this.http.post<any>(baseURL+ 'users/setFlag',attempt)\n    .pipe(catchError(this.processHTTPMsgService.handleError))\n  }\n  \n  setfinalFlag(attempt:any): Observable<any> {\n    console.log(attempt);\n    \n    return this.http.put<any>(baseURL+ 'users/setFlag/'+attempt.subjectId,attempt)\n    .pipe(catchError(this.processHTTPMsgService.handleError))\n  }\n\n  getUser(id:any): Observable<any> {\n    return this.http.get<any>(baseURL+ 'users/' + id)\n    .pipe(catchError(this.processHTTPMsgService.handleError))\n  }\n  \n}\n","import { Injectable } from '@angular/core';\r\nimport { login,returnlogin } from '../shared/login';\r\n\r\nimport { catchError, delay } from 'rxjs/operators';\r\n\r\nimport { Observable, of } from'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { baseURL } from '../shared/baseurl';\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GeneralService {\r\n\r\n  constructor(private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n\r\n  // searchservice(): Observable<any> {\r\n    public getIPAddress()  \r\n  {  \r\n    // return this.http.get('');  \r\n    fetch('https://jsonip.com', { mode: 'cors' })\r\n  .then((resp) => resp.json())\r\n  .then((ip) => {\r\n    console.log(ip.ip);\r\n    return ip.ip\r\n  });\r\n  }  \r\n  // }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { login,returnlogin } from '../shared/login';\n\nimport { catchError, delay } from 'rxjs/operators';\n\nimport { Observable, of } from'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { baseURL } from '../shared/baseurl';\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n  constructor(private http:HttpClient,\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\n\n  getExam(branch:any,semester:any) : Observable<any> {\n    console.log(branch);\n    var config = {\n      params: {\n         branch:branch,\n         semester:semester\n      }\n    }\n    return this.http.get<any>(baseURL + 'admin/examall' , config)\n    .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n\n  NotifyExam(config): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    return this.http.post<any>(baseURL + 'test/notify' , config , httpOptions)\n        .pipe(catchError(this.processHTTPMsgService.handleError))\n        // .pipe(delay(2000));\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { throwError } from 'rxjs';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProcessHTTPMsgService {\r\n\r\n  constructor() { }\r\n\r\n  public handleError(error: HttpErrorResponse | any) {\r\n    let errMsg: string;\r\n\r\n    if (error.error instanceof ErrorEvent) {\r\n      errMsg = error.error.message;\r\n    } else {\r\n      errMsg = `${error.status} - ${error.statusText || ''} ${error.error}`;\r\n    }\r\n\r\n    return throwError(errMsg);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { login,returnlogin } from '../shared/login';\n\nimport { catchError, delay } from 'rxjs/operators';\n\nimport { Observable, of } from'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { baseURL } from '../shared/baseurl';\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResultService {\n\n  constructor(private http:HttpClient,\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\n\n  getUser(): Observable<any> {\n    return this.http.get<any>(baseURL + 'users/byId')\n    .pipe(catchError(this.processHTTPMsgService.handleError));\n\n  }\n\n  getAttempts(subject:any,id:any) : Observable<any> {\n    var config = {\n      params: {\n        id:id,\n        subject:subject\n      }\n    }\n    return this.http.get<any>(baseURL + 'test/attempt',config)\n      .pipe(catchError(this.processHTTPMsgService.handleError))\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Signup,returnsignup } from '../shared/signup';\r\n// import { Observable } from 'rxjs';\r\nimport { catchError, delay } from 'rxjs/operators';\r\n\r\nimport { Observable, of } from'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { baseURL } from '../shared/baseurl';\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SigninService {\r\n  config:any;\r\n  constructor(private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n\r\n\r\n  signupPost(creaditial: Signup): Observable<returnsignup> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json'\r\n      })\r\n    };\r\n    return this.http.post<returnsignup>(baseURL + 'users/signup' , creaditial , httpOptions)\r\n        .pipe(catchError(this.processHTTPMsgService.handleError))\r\n        .pipe(delay(2000));\r\n  }\r\n\r\n  signupStaff(creaditial: Signup): Observable<returnsignup> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json'\r\n      })\r\n    };\r\n    return this.http.post<returnsignup>(baseURL + 'users/staffsignup' , creaditial , httpOptions)\r\n        .pipe(catchError(this.processHTTPMsgService.handleError))\r\n        .pipe(delay(2000));\r\n  }\r\n\r\n\r\n  getusers(): Observable<any> {\r\n    return this.http.get<Object[]>(baseURL + 'users/')\r\n        .pipe(catchError(this.processHTTPMsgService.handleError))\r\n        .pipe(delay(2000));\r\n  }\r\n\r\n  out(ip:string,username:string): Observable<any> {\r\n    this.config = {\r\n      params: {\r\n         'ip':ip,\r\n         'username':username\r\n      }\r\n    }\r\n    return this.http.get<any>(baseURL + 'users/logout',this.config)\r\n        .pipe(catchError(this.processHTTPMsgService.handleError))\r\n        .pipe(delay(2000));\r\n  }\r\n}\r\n","export const baseURL = 'http://localhost:3000/';","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Signup,returnsignup } from '../shared/signup';\r\nimport { Router } from '@angular/router';\r\nimport { SigninService } from '../services/signin.service';\r\nimport {Message} from 'primeng//api';\r\nimport {MessageService} from 'primeng/api';\r\n \r\ninterface Branch {\r\n  value:String;\r\n  viewValue: String;\r\n}\r\ninterface Sem {\r\n  value:Number;\r\n  viewValue: Number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss'],\r\n  providers: [MessageService],\r\n  styles: [`\r\n        :host ::ng-deep button {\r\n            margin-right: .25em;\r\n        }\r\n\r\n        :host ::ng-deep .ui-message,\r\n        :host ::ng-deep .ui-inputtext {\r\n            margin-right: .25em;\r\n        }\r\n\r\n        :host ::ng-deep .custom-message,\r\n        :host ::ng-deep img  {\r\n            align-self: center;\r\n            font-size: 16px;\r\n            margin-left: .5em;\r\n        }\r\n    `]\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n\r\n  branchs: Branch[] = [\r\n    {value: 'CSE', viewValue: 'CSE'},\r\n    {value: 'pizza-1', viewValue: 'Pizza'},\r\n    {value: 'tacos-2', viewValue: 'Tacos'}\r\n  ];\r\n  sem: Sem[] = [\r\n    {value: 1, viewValue: 1},\r\n    {value: 2, viewValue: 2},\r\n    {value: 3, viewValue: 3}\r\n  ];\r\n\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  thirdFormGroup: FormGroup;\r\n  errMess : String;\r\n  onsubmitsignupvalues : Signup;\r\n  returnmessage : returnsignup;\r\n  temp: Signup = null;\r\n  msgs: Message[] = [];\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private messageService: MessageService,\r\n    private router: Router,\r\n    private signupservice: SigninService,\r\n    @Inject('BaseURL') public baseURL ) {\r\n    // this.createForm();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.firstFormGroup = this.fb.group({\r\n      firstname: ['', [Validators.required] ],\r\n      lastname: ['', [Validators.required] ],\r\n      emailid: ['', [Validators.required, Validators.pattern] ]\r\n    });\r\n    this.secondFormGroup = this.fb.group({\r\n      branch:['',[Validators.required]],\r\n      semester:['',[Validators.required]],\r\n      contactno: ['', [Validators.required] ],\r\n    });\r\n    this.thirdFormGroup = this.fb.group({\r\n      password:['', [Validators.required,Validators.pattern]],\r\n      renterpassword:['', [Validators.required]],\r\n      staff: Boolean\r\n    });\r\n  }\r\n\r\n  onSubmitFirst()  {\r\n    this.onsubmitsignupvalues = this.firstFormGroup.value;\r\n    console.log(this.onsubmitsignupvalues);\r\n    \r\n  }\r\n  onSubmitSecond() {\r\n    this.temp = (this.secondFormGroup.value);\r\n    Object.assign(this.onsubmitsignupvalues,this.temp);\r\n    console.log(this.onsubmitsignupvalues);\r\n\r\n  }\r\n  onSubmitThird() {\r\n    \r\n    this.temp = this.thirdFormGroup.value;\r\n    Object.assign(this.onsubmitsignupvalues,this.temp);\r\n    delete this.onsubmitsignupvalues.renterpassword;\r\n    \r\n    if(this.onsubmitsignupvalues.staff) {\r\n      this.onsubmitsignupvalues.username = this.onsubmitsignupvalues.emailid;\r\n    this.onsubmitsignupvalues.admin = false;\r\n    this.onsubmitsignupvalues.student = false;\r\n    this.onsubmitsignupvalues.staff = false;\r\n    console.log(this.onsubmitsignupvalues);\r\n    this.signupservice.signupStaff(this.onsubmitsignupvalues)\r\n    .subscribe(staff => {\r\n      console.log('abcd');\r\n      console.log(staff);\r\n      this.returnmessage = staff;\r\n      if(this.returnmessage.err==\"A staff with the given username is already registered\") {    \r\n        this.router.navigate(['/']);\r\n        }\r\n      else {\r\n          this.router.navigate(['/login']);\r\n        }\r\n    },\r\n    errmess => { this.returnmessage = null; this.errMess = <any>errmess; });\r\n    }\r\n\r\n    else {\r\n    this.onsubmitsignupvalues.username = this.onsubmitsignupvalues.emailid.slice(0,8);\r\n    this.onsubmitsignupvalues.admin = false;\r\n    this.onsubmitsignupvalues.student = true;\r\n    this.onsubmitsignupvalues.staff = false;\r\n    \r\n    console.log(this.onsubmitsignupvalues);\r\n    this.signupservice.signupPost(this.onsubmitsignupvalues)\r\n    .subscribe( dish => {\r\n      console.log('abcd');\r\n      console.log(dish);\r\n      this.returnmessage = dish;\r\n      if(this.returnmessage.err==\"A user with the given username is already registered\") {    \r\n        this.router.navigate(['/']);\r\n        }\r\n      else {\r\n        this.msgs = [];\r\n        this.msgs.push({severity:'success', summary:'Success Message', detail:dish['status']+' '+dish['msg']});\r\n          this.router.navigate(['/signup']);\r\n                  this.firstFormGroup.reset();\r\n                  this.secondFormGroup.reset();\r\n                  this.thirdFormGroup.reset();\r\n\r\n            // this.examFormDirectives.resetForm({\r\n            // });\r\n        }\r\n    },\r\n    errmess => { this.returnmessage = null; this.errMess = <any>errmess;\r\n      this.msgs = [];\r\n      // console.log(errmess);\r\n      \r\n      this.msgs.push({severity:'error', summary:'Error:', detail:'Enter Valid Email Address'});\r\n     }, );\r\n  }\r\n  }\r\n  \r\n  reset() {\r\n    this.onsubmitsignupvalues = null;\r\n    this.temp = null;\r\n  }\r\n\r\n}\r\n\r\n  // createForm() {\r\n  //   this.signupForm = this.fb.group({\r\n  //     firstname: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(25)] ],\r\n  //     lastname: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(25)] ],\r\n  //     email: ['', [Validators.required, Validators.email] ],\r\n  //     branch:[''],\r\n  //     contactno: ['0', [Validators.required, Validators.pattern] ],\r\n  //     password:[''],\r\n  //     resetpassword:['']\r\n      \r\n  //   });\r\n\r\n  //   this.firstFormGroup.valueChanges\r\n  //     .subscribe(data => this.onValueChanged(data));\r\n\r\n  //   this.onValueChanged(); // (re)set validation messages now\r\n\r\n  // }\r\n\r\n  // onValueChanged(data?: any) {\r\n  //   if (!this.feedbackForm) { return; }\r\n  //   const form = this.feedbackForm;\r\n  //   for (const field in this.formErrors) {\r\n  //     if (this.formErrors.hasOwnProperty(field)) {\r\n  //       // clear previous error message (if any)\r\n  //       this.formErrors[field] = '';\r\n  //       const control = form.get(field);\r\n  //       if (control && control.dirty && !control.valid) {\r\n  //         const messages = this.validationMessages[field];\r\n  //         for (const key in control.errors) {\r\n  //           if (control.errors.hasOwnProperty(key)) {\r\n  //             this.formErrors[field] += messages[key] + ' ';\r\n  //           }\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n","<mat-horizontal-stepper labelPosition=\"bottom\" #stepper>\n    <mat-step [stepControl]=\"firstFormGroup\">\n      <form [formGroup]=\"firstFormGroup\" (ngSubmit)=\"onSubmitFirst()\">\n        <ng-template matStepLabel matStepperIcon=\"done\">Fill out your name and Email </ng-template>\n        <mat-form-field hintLabel=\"Max 15 characters\" appearance=\"fill\">\n          <mat-label>First Name</mat-label>\n          <input matInput #input maxlength=\"15\" placeholder=\"Enter First name\" formControlName=\"firstname\" type=\"text\" required>\n          <mat-hint align=\"end\">{{input.value?.length || 0}}/15</mat-hint>\n        </mat-form-field>\n        <mat-form-field hintLabel=\"Max 15 characters\" appearance=\"fill\">\n          <mat-label>Last Name</mat-label>\n          <input matInput #input1 maxlength=\"15\" placeholder=\"Enter Last name\" formControlName=\"lastname\" required>\n          <mat-hint align=\"end\">{{input1.value?.length || 0}}/15</mat-hint>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Email-Id</mat-label>\n          <input matInput placeholder=\"Enter Email Address\" formControlName=\"emailid\" pattern=\"(^.+.+.+.+.+\\b(nirmauni.ac.in)\\b)\" required>\n        </mat-form-field>\n        <div>\n          <button mat-button matStepperNext [disabled]=\"firstFormGroup.invalid\">Next</button>\n        </div>\n      </form>\n    </mat-step>\n    <mat-step [stepControl]=\"secondFormGroup\">\n      <form [formGroup]=\"secondFormGroup\" (ngSubmit)=\"onSubmitSecond()\">\n        <ng-template matStepLabel>Fill out the details</ng-template>\n        <mat-form-field>\n          <mat-label>Branch</mat-label>\n          <mat-select formControlName=\"branch\">\n            <mat-option *ngFor=\"let branch of branchs\" [value]=\"branch.value\" required>\n              {{branch.viewValue}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>Semester</mat-label>\n          <mat-select formControlName=\"semester\">\n            <mat-option *ngFor=\"let branch of branchs\" [value]=\"branch.value\" required>\n              {{branch.viewValue}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field hintLabel=\"10 digits only\">\n            <mat-label>Mobile-No</mat-label>\n            <input matInput #input2 minlength=\"10\" maxlength=\"10\" formControlName=\"contactno\" placeholder=\"Enter Mobile number\" pattern=\"[6-9][0-9]*\" required>\n            <mat-hint align=\"end\">{{input2.value?.length || 0}}/10</mat-hint>\n        </mat-form-field>\n        \n        <div>\n          <button mat-button matStepperPrevious>Back</button>\n          <button mat-button matStepperNext [disabled]=\"secondFormGroup.invalid\">Next</button>\n        </div>\n      </form>\n    </mat-step>\n    <mat-step [stepControl]=\"thirdFormGroup\">\n      \n        <form [formGroup]=\"thirdFormGroup\" (ngSubmit)=\"onSubmitThird()\">\n            <ng-template matStepLabel>Enter password and re-enter password</ng-template>\n            <mat-form-field hintLabel=\"Minimimun length 8 digits\">\n              <mat-label>Password</mat-label>\n              <input matInput pPassword ui-password-info name=\"password\" #password minlength=\"8\" type=\"password\" formControlName=\"password\" placeholder=\"Enter Password\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" required >\n              \n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Re-Enter Password</mat-label>\n                <input matInput #input4 minlength=\"8\" type=\"password\" formControlName=\"renterpassword\" placeholder=\"Re-Enter Password\" pattern=\"{{ password.value }}\" >\n              </mat-form-field>\n              {{ thirdFormGroup.value.password }}\n\n            <div>\n              <button mat-button matStepperPrevious>Back</button>\n              <button *ngIf =\"temp&&onsubmitsignupvalues\" mat-button matStepperNext [disabled]=\"thirdFormGroup.invalid\">Confirm</button>\n              <button mat-button (click)=\"stepper.reset()\" (click)=\"reset()\">Reset</button>\n            </div>\n            <mat-slide-toggle formControlName=\"staff\">Staff-Member? Please slide</mat-slide-toggle>\n          </form>\n          <div> Some important instuctions:\n            <ul>\n              <li>If two password doesn't match then next button will remain disappered</li>\n              <li>pattern must be follow as given below</li>\n              <ul>\n              <li>Minimimun Length of password is 8.</li>\n              <li>Password must contain one Uppercase, one integer and one lowercase characters.</li>\n            </ul>\n          </ul>\n           \n          </div>\n    </mat-step>\n    <!-- <mat-step *ngIf =\"temp&&temp1&&temp2\">\n      <ng-template matStepLabel>You're Done. Thank You for Sign-In</ng-template>\n      <p>We will try to give you best service.</p>\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button (click)=\"stepper.reset()\" (click)=\"reset()\">Reset</button>\n         <button mat-button (click)=\"Confirm()\">Confirm </button> -->\n         <!-- <button mat-button routerLink=\"/home\">Home</button> --> -->\n      <!-- </div> -->\n    <!-- </mat-step> --> -->\n  </mat-horizontal-stepper>\n\n  <p-messages [(value)]=\"msgs\"></p-messages>\n  <!-- <p-messages -->\n","\nimport { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { Location, LocationStrategy, PathLocationStrategy, PopStateEvent } from '@angular/common';\nimport 'rxjs/add/operator/filter';\n// import { NavbarComponent } from '../../shared/navbar/navbar.component';\nimport { Router, NavigationEnd, NavigationStart } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\n// import PerfectScrollbar from 'perfect-scrollbar';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-staff',\n  templateUrl: './staff.component.html',\n  styleUrls: ['./staff.component.scss']\n})\nexport class StaffComponent implements OnInit {\n\n\n  private _router: Subscription;\n  private lastPoppedUrl: string;\n  private yScrollStack: number[] = [];\n\n  constructor( public location: Location, private router: Router) {}\n\n  ngOnInit() {\n    console.log(this.router)\n      const isWindows = navigator.platform.indexOf('Win') > -1 ? true : false;\n\n      if (isWindows) {\n          // if we are on windows OS we activate the perfectScrollbar function\n\n          document.getElementsByTagName('body')[0].classList.add('perfect-scrollbar-on');\n      } else {\n          document.getElementsByTagName('body')[0].classList.remove('perfect-scrollbar-off');\n      }\n      const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\n      const elemSidebar = <HTMLElement>document.querySelector('.sidebar .sidebar-wrapper');\n\n      this.location.subscribe((ev:PopStateEvent) => {\n          this.lastPoppedUrl = ev.url;\n      });\n       this.router.events.subscribe((event:any) => {\n          if (event instanceof NavigationStart) {\n             if (event.url != this.lastPoppedUrl)\n                 this.yScrollStack.push(window.scrollY);\n         } else if (event instanceof NavigationEnd) {\n             if (event.url == this.lastPoppedUrl) {\n                 this.lastPoppedUrl = undefined;\n                 window.scrollTo(0, this.yScrollStack.pop());\n             } else\n                 window.scrollTo(0, 0);\n         }\n      });\n      this._router = this.router.events.filter(event => event instanceof NavigationEnd).subscribe((event: NavigationEnd) => {\n           elemMainPanel.scrollTop = 0;\n           elemSidebar.scrollTop = 0;\n      });\n      if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\n          // let ps = new PerfectScrollbar(elemMainPanel);\n          // ps = new PerfectScrollbar(elemSidebar);\n      }\n  }\n  ngAfterViewInit() {\n      this.runOnRouteChange();\n  }\n  isMap(path){\n      var titlee = this.location.prepareExternalUrl(this.location.path());\n      titlee = titlee.slice( 1 );\n      if(path == titlee){\n          return false;\n      }\n      else {\n          return true;\n      }\n  }\n  runOnRouteChange(): void {\n    if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\n      const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\n      // const ps = new PerfectScrollbar(elemMainPanel);\n      // ps.update();\n    }\n  }\n  isMac(): boolean {\n      let bool = false;\n      if (navigator.platform.toUpperCase().indexOf('MAC') >= 0 || navigator.platform.toUpperCase().indexOf('IPAD') >= 0) {\n          bool = true;\n      }\n      return bool;\n  }\n\n}\n","<p>staff works!</p>\n<router-outlet></router-outlet>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}